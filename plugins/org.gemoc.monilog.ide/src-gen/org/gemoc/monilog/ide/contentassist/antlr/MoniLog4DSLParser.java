/*
 * generated by Xtext 2.22.0
 */
package org.gemoc.monilog.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.gemoc.monilog.ide.contentassist.antlr.internal.InternalMoniLog4DSLParser;
import org.gemoc.monilog.services.MoniLog4DSLGrammarAccess;

public class MoniLog4DSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MoniLog4DSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MoniLog4DSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDocumentAccess().getDefaultLanguageIDAlternatives_0_1_0(), "rule__Document__DefaultLanguageIDAlternatives_0_1_0");
			builder.put(grammarAccess.getAppenderAccess().getAlternatives(), "rule__Appender__Alternatives");
			builder.put(grammarAccess.getLayoutAccess().getAlternatives(), "rule__Layout__Alternatives");
			builder.put(grammarAccess.getEventAccess().getAlternatives(), "rule__Event__Alternatives");
			builder.put(grammarAccess.getPatternAccess().getAlternatives(), "rule__Pattern__Alternatives");
			builder.put(grammarAccess.getBoundTypeAccess().getAlternatives(), "rule__BoundType__Alternatives");
			builder.put(grammarAccess.getScopeAccess().getAlternatives(), "rule__Scope__Alternatives");
			builder.put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
			builder.put(grammarAccess.getAppenderCallArgumentAccess().getAlternatives(), "rule__AppenderCallArgument__Alternatives");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getAlternatives(), "rule__MoniLoggerCall__Alternatives");
			builder.put(grammarAccess.getEmptyOrPropertyValueAccess().getAlternatives(), "rule__EmptyOrPropertyValue__Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
			builder.put(grammarAccess.getLanguageExpressionAccess().getAlternatives(), "rule__LanguageExpression__Alternatives");
			builder.put(grammarAccess.getLogLevelAccess().getAlternatives(), "rule__LogLevel__Alternatives");
			builder.put(grammarAccess.getTemporalPatternKindAccess().getAlternatives(), "rule__TemporalPatternKind__Alternatives");
			builder.put(grammarAccess.getDocumentAccess().getGroup(), "rule__Document__Group__0");
			builder.put(grammarAccess.getDocumentAccess().getGroup_0(), "rule__Document__Group_0__0");
			builder.put(grammarAccess.getLocalAppenderAccess().getGroup(), "rule__LocalAppender__Group__0");
			builder.put(grammarAccess.getLocalAppenderAccess().getGroup_3(), "rule__LocalAppender__Group_3__0");
			builder.put(grammarAccess.getLocalAppenderAccess().getGroup_3_2(), "rule__LocalAppender__Group_3_2__0");
			builder.put(grammarAccess.getLocalAppenderAccess().getGroup_6(), "rule__LocalAppender__Group_6__0");
			builder.put(grammarAccess.getExternalAppenderAccess().getGroup(), "rule__ExternalAppender__Group__0");
			builder.put(grammarAccess.getExternalAppenderAccess().getGroup_2(), "rule__ExternalAppender__Group_2__0");
			builder.put(grammarAccess.getExternalAppenderAccess().getGroup_2_2(), "rule__ExternalAppender__Group_2_2__0");
			builder.put(grammarAccess.getLocalLayoutAccess().getGroup(), "rule__LocalLayout__Group__0");
			builder.put(grammarAccess.getLocalLayoutAccess().getGroup_2(), "rule__LocalLayout__Group_2__0");
			builder.put(grammarAccess.getLocalLayoutAccess().getGroup_2_2(), "rule__LocalLayout__Group_2_2__0");
			builder.put(grammarAccess.getExternalLayoutAccess().getGroup(), "rule__ExternalLayout__Group__0");
			builder.put(grammarAccess.getExternalLayoutAccess().getGroup_2(), "rule__ExternalLayout__Group_2__0");
			builder.put(grammarAccess.getExternalLayoutAccess().getGroup_2_2(), "rule__ExternalLayout__Group_2_2__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup(), "rule__MoniLogger__Group__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_3(), "rule__MoniLogger__Group_3__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_3_2(), "rule__MoniLogger__Group_3_2__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_4(), "rule__MoniLogger__Group_4__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_8(), "rule__MoniLogger__Group_8__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_8_3(), "rule__MoniLogger__Group_8_3__0");
			builder.put(grammarAccess.getMoniLoggerAccess().getGroup_12(), "rule__MoniLogger__Group_12__0");
			builder.put(grammarAccess.getASTEventAccess().getGroup(), "rule__ASTEvent__Group__0");
			builder.put(grammarAccess.getComplexEventAccess().getGroup(), "rule__ComplexEvent__Group__0");
			builder.put(grammarAccess.getComplexEventAccess().getGroup_2(), "rule__ComplexEvent__Group_2__0");
			builder.put(grammarAccess.getUserEventAccess().getGroup(), "rule__UserEvent__Group__0");
			builder.put(grammarAccess.getUserEventAccess().getGroup_2(), "rule__UserEvent__Group_2__0");
			builder.put(grammarAccess.getUserEventAccess().getGroup_2_2(), "rule__UserEvent__Group_2_2__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getTemporalPatternAccess().getGroup(), "rule__TemporalPattern__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_0(), "rule__Pattern__Group_0__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_1(), "rule__Pattern__Group_1__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_2(), "rule__Pattern__Group_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3(), "rule__Pattern__Group_3__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_4(), "rule__Pattern__Group_4__0");
			builder.put(grammarAccess.getLowerBoundAccess().getGroup(), "rule__LowerBound__Group__0");
			builder.put(grammarAccess.getUpperBoundAccess().getGroup(), "rule__UpperBound__Group__0");
			builder.put(grammarAccess.getScopeAccess().getGroup_0(), "rule__Scope__Group_0__0");
			builder.put(grammarAccess.getScopeAccess().getGroup_1(), "rule__Scope__Group_1__0");
			builder.put(grammarAccess.getScopeAccess().getGroup_2(), "rule__Scope__Group_2__0");
			builder.put(grammarAccess.getScopeAccess().getGroup_3(), "rule__Scope__Group_3__0");
			builder.put(grammarAccess.getScopeAccess().getGroup_4(), "rule__Scope__Group_4__0");
			builder.put(grammarAccess.getAppenderCallAccess().getGroup(), "rule__AppenderCall__Group__0");
			builder.put(grammarAccess.getAppenderCallAccess().getGroup_3(), "rule__AppenderCall__Group_3__0");
			builder.put(grammarAccess.getAppenderCallAccess().getGroup_3_2(), "rule__AppenderCall__Group_3_2__0");
			builder.put(grammarAccess.getLayoutCallAccess().getGroup(), "rule__LayoutCall__Group__0");
			builder.put(grammarAccess.getLayoutCallAccess().getGroup_3(), "rule__LayoutCall__Group_3__0");
			builder.put(grammarAccess.getLayoutCallAccess().getGroup_3_2(), "rule__LayoutCall__Group_3_2__0");
			builder.put(grammarAccess.getEmitEventAccess().getGroup(), "rule__EmitEvent__Group__0");
			builder.put(grammarAccess.getEmitEventAccess().getGroup_3(), "rule__EmitEvent__Group_3__0");
			builder.put(grammarAccess.getEmitEventAccess().getGroup_3_2(), "rule__EmitEvent__Group_3_2__0");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getGroup_0(), "rule__MoniLoggerCall__Group_0__0");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getGroup_0_4(), "rule__MoniLoggerCall__Group_0_4__0");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getGroup_0_4_2(), "rule__MoniLoggerCall__Group_0_4_2__0");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getGroup_1(), "rule__MoniLoggerCall__Group_1__0");
			builder.put(grammarAccess.getStreamEventAccess().getGroup(), "rule__StreamEvent__Group__0");
			builder.put(grammarAccess.getStreamEventAccess().getGroup_1(), "rule__StreamEvent__Group_1__0");
			builder.put(grammarAccess.getStreamEventAccess().getGroup_1_2(), "rule__StreamEvent__Group_1_2__0");
			builder.put(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1(), "rule__EmptyOrPropertyValue__Group_1__0");
			builder.put(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1_2(), "rule__EmptyOrPropertyValue__Group_1_2__0");
			builder.put(grammarAccess.getLanguageExpressionAccess().getGroup_0(), "rule__LanguageExpression__Group_0__0");
			builder.put(grammarAccess.getLanguageExpressionAccess().getGroup_1(), "rule__LanguageExpression__Group_1__0");
			builder.put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
			builder.put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
			builder.put(grammarAccess.getDocumentAccess().getDefaultLanguageIDAssignment_0_1(), "rule__Document__DefaultLanguageIDAssignment_0_1");
			builder.put(grammarAccess.getDocumentAccess().getEventsAssignment_1_0(), "rule__Document__EventsAssignment_1_0");
			builder.put(grammarAccess.getDocumentAccess().getAppendersAssignment_1_1(), "rule__Document__AppendersAssignment_1_1");
			builder.put(grammarAccess.getDocumentAccess().getLayoutsAssignment_1_2(), "rule__Document__LayoutsAssignment_1_2");
			builder.put(grammarAccess.getDocumentAccess().getMoniLogSpecsAssignment_1_3(), "rule__Document__MoniLogSpecsAssignment_1_3");
			builder.put(grammarAccess.getLocalAppenderAccess().getAnnotationsAssignment_0(), "rule__LocalAppender__AnnotationsAssignment_0");
			builder.put(grammarAccess.getLocalAppenderAccess().getNameAssignment_2(), "rule__LocalAppender__NameAssignment_2");
			builder.put(grammarAccess.getLocalAppenderAccess().getParametersAssignment_3_1(), "rule__LocalAppender__ParametersAssignment_3_1");
			builder.put(grammarAccess.getLocalAppenderAccess().getParametersAssignment_3_2_1(), "rule__LocalAppender__ParametersAssignment_3_2_1");
			builder.put(grammarAccess.getLocalAppenderAccess().getCallsAssignment_5(), "rule__LocalAppender__CallsAssignment_5");
			builder.put(grammarAccess.getLocalAppenderAccess().getCallsAssignment_6_1(), "rule__LocalAppender__CallsAssignment_6_1");
			builder.put(grammarAccess.getExternalAppenderAccess().getNameAssignment_1(), "rule__ExternalAppender__NameAssignment_1");
			builder.put(grammarAccess.getExternalAppenderAccess().getParametersAssignment_2_1(), "rule__ExternalAppender__ParametersAssignment_2_1");
			builder.put(grammarAccess.getExternalAppenderAccess().getParametersAssignment_2_2_1(), "rule__ExternalAppender__ParametersAssignment_2_2_1");
			builder.put(grammarAccess.getLocalLayoutAccess().getNameAssignment_1(), "rule__LocalLayout__NameAssignment_1");
			builder.put(grammarAccess.getLocalLayoutAccess().getParametersAssignment_2_1(), "rule__LocalLayout__ParametersAssignment_2_1");
			builder.put(grammarAccess.getLocalLayoutAccess().getParametersAssignment_2_2_1(), "rule__LocalLayout__ParametersAssignment_2_2_1");
			builder.put(grammarAccess.getLocalLayoutAccess().getCallAssignment_4(), "rule__LocalLayout__CallAssignment_4");
			builder.put(grammarAccess.getExternalLayoutAccess().getNameAssignment_1(), "rule__ExternalLayout__NameAssignment_1");
			builder.put(grammarAccess.getExternalLayoutAccess().getParametersAssignment_2_1(), "rule__ExternalLayout__ParametersAssignment_2_1");
			builder.put(grammarAccess.getExternalLayoutAccess().getParametersAssignment_2_2_1(), "rule__ExternalLayout__ParametersAssignment_2_2_1");
			builder.put(grammarAccess.getMoniLoggerAccess().getAnnotationsAssignment_0(), "rule__MoniLogger__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMoniLoggerAccess().getNameAssignment_2(), "rule__MoniLogger__NameAssignment_2");
			builder.put(grammarAccess.getMoniLoggerAccess().getParametersAssignment_3_1(), "rule__MoniLogger__ParametersAssignment_3_1");
			builder.put(grammarAccess.getMoniLoggerAccess().getParametersAssignment_3_2_1(), "rule__MoniLogger__ParametersAssignment_3_2_1");
			builder.put(grammarAccess.getMoniLoggerAccess().getLevelAssignment_4_1(), "rule__MoniLogger__LevelAssignment_4_1");
			builder.put(grammarAccess.getMoniLoggerAccess().getEventAssignment_7(), "rule__MoniLogger__EventAssignment_7");
			builder.put(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_2(), "rule__MoniLogger__ConditionsAssignment_8_2");
			builder.put(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_3_1(), "rule__MoniLogger__ConditionsAssignment_8_3_1");
			builder.put(grammarAccess.getMoniLoggerAccess().getActionsAssignment_11(), "rule__MoniLogger__ActionsAssignment_11");
			builder.put(grammarAccess.getMoniLoggerAccess().getActionsAssignment_12_1(), "rule__MoniLogger__ActionsAssignment_12_1");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment(), "rule__Parameter__NameAssignment");
			builder.put(grammarAccess.getASTEventAccess().getNameAssignment_1(), "rule__ASTEvent__NameAssignment_1");
			builder.put(grammarAccess.getASTEventAccess().getBeforeAssignment_3_0(), "rule__ASTEvent__BeforeAssignment_3_0");
			builder.put(grammarAccess.getASTEventAccess().getAfterAssignment_3_1(), "rule__ASTEvent__AfterAssignment_3_1");
			builder.put(grammarAccess.getASTEventAccess().getRuleIDAssignment_4(), "rule__ASTEvent__RuleIDAssignment_4");
			builder.put(grammarAccess.getComplexEventAccess().getNameAssignment_1(), "rule__ComplexEvent__NameAssignment_1");
			builder.put(grammarAccess.getComplexEventAccess().getKindAssignment_2_1(), "rule__ComplexEvent__KindAssignment_2_1");
			builder.put(grammarAccess.getComplexEventAccess().getPatternAssignment_4(), "rule__ComplexEvent__PatternAssignment_4");
			builder.put(grammarAccess.getUserEventAccess().getNameAssignment_1(), "rule__UserEvent__NameAssignment_1");
			builder.put(grammarAccess.getUserEventAccess().getParametersAssignment_2_1(), "rule__UserEvent__ParametersAssignment_2_1");
			builder.put(grammarAccess.getUserEventAccess().getParametersAssignment_2_2_1(), "rule__UserEvent__ParametersAssignment_2_2_1");
			builder.put(grammarAccess.getConditionAccess().getExpressionAssignment_1(), "rule__Condition__ExpressionAssignment_1");
			builder.put(grammarAccess.getTemporalPatternAccess().getPatternAssignment_0(), "rule__TemporalPattern__PatternAssignment_0");
			builder.put(grammarAccess.getTemporalPatternAccess().getScopeAssignment_1(), "rule__TemporalPattern__ScopeAssignment_1");
			builder.put(grammarAccess.getPatternAccess().getBoundAssignment_0_2(), "rule__Pattern__BoundAssignment_0_2");
			builder.put(grammarAccess.getPatternAccess().getEventAssignment_0_3(), "rule__Pattern__EventAssignment_0_3");
			builder.put(grammarAccess.getPatternAccess().getEventAssignment_1_2(), "rule__Pattern__EventAssignment_1_2");
			builder.put(grammarAccess.getPatternAccess().getEventAssignment_2_2(), "rule__Pattern__EventAssignment_2_2");
			builder.put(grammarAccess.getPatternAccess().getPredecessorAssignment_3_1(), "rule__Pattern__PredecessorAssignment_3_1");
			builder.put(grammarAccess.getPatternAccess().getSuccessorAssignment_3_3(), "rule__Pattern__SuccessorAssignment_3_3");
			builder.put(grammarAccess.getPatternAccess().getEventAssignment_4_1(), "rule__Pattern__EventAssignment_4_1");
			builder.put(grammarAccess.getPatternAccess().getTriggerAssignment_4_3(), "rule__Pattern__TriggerAssignment_4_3");
			builder.put(grammarAccess.getExactBoundAccess().getNAssignment(), "rule__ExactBound__NAssignment");
			builder.put(grammarAccess.getLowerBoundAccess().getNAssignment_1(), "rule__LowerBound__NAssignment_1");
			builder.put(grammarAccess.getUpperBoundAccess().getNAssignment_1(), "rule__UpperBound__NAssignment_1");
			builder.put(grammarAccess.getScopeAccess().getLowerBoundAssignment_1_2(), "rule__Scope__LowerBoundAssignment_1_2");
			builder.put(grammarAccess.getScopeAccess().getUpperBoundAssignment_2_2(), "rule__Scope__UpperBoundAssignment_2_2");
			builder.put(grammarAccess.getScopeAccess().getLowerBoundAssignment_3_2(), "rule__Scope__LowerBoundAssignment_3_2");
			builder.put(grammarAccess.getScopeAccess().getUpperBoundAssignment_3_4(), "rule__Scope__UpperBoundAssignment_3_4");
			builder.put(grammarAccess.getScopeAccess().getLowerBoundAssignment_4_2(), "rule__Scope__LowerBoundAssignment_4_2");
			builder.put(grammarAccess.getScopeAccess().getUpperBoundAssignment_4_4(), "rule__Scope__UpperBoundAssignment_4_4");
			builder.put(grammarAccess.getAppenderCallAccess().getAppenderAssignment_0(), "rule__AppenderCall__AppenderAssignment_0");
			builder.put(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_1(), "rule__AppenderCall__ArgsAssignment_3_1");
			builder.put(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_2_1(), "rule__AppenderCall__ArgsAssignment_3_2_1");
			builder.put(grammarAccess.getAppenderRefAccess().getAppenderAssignment(), "rule__AppenderRef__AppenderAssignment");
			builder.put(grammarAccess.getLayoutCallAccess().getLayoutAssignment_0(), "rule__LayoutCall__LayoutAssignment_0");
			builder.put(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_1(), "rule__LayoutCall__ArgsAssignment_3_1");
			builder.put(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_2_1(), "rule__LayoutCall__ArgsAssignment_3_2_1");
			builder.put(grammarAccess.getLayoutRefAccess().getLayoutAssignment(), "rule__LayoutRef__LayoutAssignment");
			builder.put(grammarAccess.getEmitEventAccess().getEventAssignment_0(), "rule__EmitEvent__EventAssignment_0");
			builder.put(grammarAccess.getEmitEventAccess().getArgsAssignment_3_1(), "rule__EmitEvent__ArgsAssignment_3_1");
			builder.put(grammarAccess.getEmitEventAccess().getArgsAssignment_3_2_1(), "rule__EmitEvent__ArgsAssignment_3_2_1");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getMoniloggerAssignment_0_1(), "rule__MoniLoggerCall__MoniloggerAssignment_0_1");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getArgsAssignment_0_4_1(), "rule__MoniLoggerCall__ArgsAssignment_0_4_1");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getArgsAssignment_0_4_2_1(), "rule__MoniLoggerCall__ArgsAssignment_0_4_2_1");
			builder.put(grammarAccess.getMoniLoggerCallAccess().getMoniloggerAssignment_1_1(), "rule__MoniLoggerCall__MoniloggerAssignment_1_1");
			builder.put(grammarAccess.getStreamEventAccess().getEventAssignment_0(), "rule__StreamEvent__EventAssignment_0");
			builder.put(grammarAccess.getStreamEventAccess().getValuesAssignment_1_1(), "rule__StreamEvent__ValuesAssignment_1_1");
			builder.put(grammarAccess.getStreamEventAccess().getValuesAssignment_1_2_1(), "rule__StreamEvent__ValuesAssignment_1_2_1");
			builder.put(grammarAccess.getEmptyOrPropertyValueAccess().getIdAssignment_1_1(), "rule__EmptyOrPropertyValue__IdAssignment_1_1");
			builder.put(grammarAccess.getEmptyOrPropertyValueAccess().getValueAssignment_1_2_1(), "rule__EmptyOrPropertyValue__ValueAssignment_1_2_1");
			builder.put(grammarAccess.getParameterReferenceAccess().getParameterAssignment(), "rule__ParameterReference__ParameterAssignment");
			builder.put(grammarAccess.getLanguageExpressionAccess().getLanguageIdAssignment_0_1(), "rule__LanguageExpression__LanguageIdAssignment_0_1");
			builder.put(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_0_3(), "rule__LanguageExpression__ExpressionAssignment_0_3");
			builder.put(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_1_1(), "rule__LanguageExpression__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getDocumentAccess().getUnorderedGroup_1(), "rule__Document__UnorderedGroup_1");
			builder.put(grammarAccess.getASTEventAccess().getUnorderedGroup_3(), "rule__ASTEvent__UnorderedGroup_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MoniLog4DSLGrammarAccess grammarAccess;

	@Override
	protected InternalMoniLog4DSLParser createParser() {
		InternalMoniLog4DSLParser result = new InternalMoniLog4DSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MoniLog4DSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MoniLog4DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
