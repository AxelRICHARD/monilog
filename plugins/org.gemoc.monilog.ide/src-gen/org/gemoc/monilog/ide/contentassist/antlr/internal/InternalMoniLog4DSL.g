/*
 * generated by Xtext 2.22.0
 */
grammar InternalMoniLog4DSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.gemoc.monilog.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.monilog.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.gemoc.monilog.services.MoniLog4DSLGrammarAccess;

}
@parser::members {
	private MoniLog4DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(MoniLog4DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoniLogSpec
entryRuleMoniLogSpec
:
{ before(grammarAccess.getMoniLogSpecRule()); }
	 ruleMoniLogSpec
{ after(grammarAccess.getMoniLogSpecRule()); } 
	 EOF 
;

// Rule MoniLogSpec
ruleMoniLogSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getGroup()); }
		(rule__MoniLogSpec__Group__0)
		{ after(grammarAccess.getMoniLogSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeforeEvent
entryRuleBeforeEvent
:
{ before(grammarAccess.getBeforeEventRule()); }
	 ruleBeforeEvent
{ after(grammarAccess.getBeforeEventRule()); } 
	 EOF 
;

// Rule BeforeEvent
ruleBeforeEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeforeEventAccess().getGroup()); }
		(rule__BeforeEvent__Group__0)
		{ after(grammarAccess.getBeforeEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAfterEvent
entryRuleAfterEvent
:
{ before(grammarAccess.getAfterEventRule()); }
	 ruleAfterEvent
{ after(grammarAccess.getAfterEventRule()); } 
	 EOF 
;

// Rule AfterEvent
ruleAfterEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAfterEventAccess().getGroup()); }
		(rule__AfterEvent__Group__0)
		{ after(grammarAccess.getAfterEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeforeAfterEvent
entryRuleBeforeAfterEvent
:
{ before(grammarAccess.getBeforeAfterEventRule()); }
	 ruleBeforeAfterEvent
{ after(grammarAccess.getBeforeAfterEventRule()); } 
	 EOF 
;

// Rule BeforeAfterEvent
ruleBeforeAfterEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getGroup()); }
		(rule__BeforeAfterEvent__Group__0)
		{ after(grammarAccess.getBeforeAfterEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemporalPattern
entryRuleTemporalPattern
:
{ before(grammarAccess.getTemporalPatternRule()); }
	 ruleTemporalPattern
{ after(grammarAccess.getTemporalPatternRule()); } 
	 EOF 
;

// Rule TemporalPattern
ruleTemporalPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemporalPatternAccess().getGroup()); }
		(rule__TemporalPattern__Group__0)
		{ after(grammarAccess.getTemporalPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getAlternatives()); }
		(rule__Pattern__Alternatives)
		{ after(grammarAccess.getPatternAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundType
entryRuleBoundType
:
{ before(grammarAccess.getBoundTypeRule()); }
	 ruleBoundType
{ after(grammarAccess.getBoundTypeRule()); } 
	 EOF 
;

// Rule BoundType
ruleBoundType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundTypeAccess().getAlternatives()); }
		(rule__BoundType__Alternatives)
		{ after(grammarAccess.getBoundTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExactBound
entryRuleExactBound
:
{ before(grammarAccess.getExactBoundRule()); }
	 ruleExactBound
{ after(grammarAccess.getExactBoundRule()); } 
	 EOF 
;

// Rule ExactBound
ruleExactBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExactBoundAccess().getNAssignment()); }
		(rule__ExactBound__NAssignment)
		{ after(grammarAccess.getExactBoundAccess().getNAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerBound
entryRuleLowerBound
:
{ before(grammarAccess.getLowerBoundRule()); }
	 ruleLowerBound
{ after(grammarAccess.getLowerBoundRule()); } 
	 EOF 
;

// Rule LowerBound
ruleLowerBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerBoundAccess().getGroup()); }
		(rule__LowerBound__Group__0)
		{ after(grammarAccess.getLowerBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperBound
entryRuleUpperBound
:
{ before(grammarAccess.getUpperBoundRule()); }
	 ruleUpperBound
{ after(grammarAccess.getUpperBoundRule()); } 
	 EOF 
;

// Rule UpperBound
ruleUpperBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperBoundAccess().getGroup()); }
		(rule__UpperBound__Group__0)
		{ after(grammarAccess.getUpperBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScope
entryRuleScope
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeAccess().getAlternatives()); }
		(rule__Scope__Alternatives)
		{ after(grammarAccess.getScopeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAppend
entryRuleAppend
:
{ before(grammarAccess.getAppendRule()); }
	 ruleAppend
{ after(grammarAccess.getAppendRule()); } 
	 EOF 
;

// Rule Append
ruleAppend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppendAccess().getGroup()); }
		(rule__Append__Group__0)
		{ after(grammarAccess.getAppendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAppender
entryRuleAppender
:
{ before(grammarAccess.getAppenderRule()); }
	 ruleAppender
{ after(grammarAccess.getAppenderRule()); } 
	 EOF 
;

// Rule Appender
ruleAppender 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppenderAccess().getAlternatives()); }
		(rule__Appender__Alternatives)
		{ after(grammarAccess.getAppenderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamAppender
entryRuleStreamAppender
:
{ before(grammarAccess.getStreamAppenderRule()); }
	 ruleStreamAppender
{ after(grammarAccess.getStreamAppenderRule()); } 
	 EOF 
;

// Rule StreamAppender
ruleStreamAppender 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamAppenderAccess().getGroup()); }
		(rule__StreamAppender__Group__0)
		{ after(grammarAccess.getStreamAppenderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileAppender
entryRuleFileAppender
:
{ before(grammarAccess.getFileAppenderRule()); }
	 ruleFileAppender
{ after(grammarAccess.getFileAppenderRule()); } 
	 EOF 
;

// Rule FileAppender
ruleFileAppender 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAppenderAccess().getGroup()); }
		(rule__FileAppender__Group__0)
		{ after(grammarAccess.getFileAppenderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConsoleAppender
entryRuleConsoleAppender
:
{ before(grammarAccess.getConsoleAppenderRule()); }
	 ruleConsoleAppender
{ after(grammarAccess.getConsoleAppenderRule()); } 
	 EOF 
;

// Rule ConsoleAppender
ruleConsoleAppender 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConsoleAppenderAccess().getGroup()); }
		(rule__ConsoleAppender__Group__0)
		{ after(grammarAccess.getConsoleAppenderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getAlternatives()); }
		(rule__Layout__Alternatives)
		{ after(grammarAccess.getLayoutAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLayout
entryRuleStringLayout
:
{ before(grammarAccess.getStringLayoutRule()); }
	 ruleStringLayout
{ after(grammarAccess.getStringLayoutRule()); } 
	 EOF 
;

// Rule StringLayout
ruleStringLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLayoutAccess().getGroup()); }
		(rule__StringLayout__Group__0)
		{ after(grammarAccess.getStringLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalLayout
entryRuleExternalLayout
:
{ before(grammarAccess.getExternalLayoutRule()); }
	 ruleExternalLayout
{ after(grammarAccess.getExternalLayoutRule()); } 
	 EOF 
;

// Rule ExternalLayout
ruleExternalLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalLayoutAccess().getGroup()); }
		(rule__ExternalLayout__Group__0)
		{ after(grammarAccess.getExternalLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStreamEvent
entryRuleStreamEvent
:
{ before(grammarAccess.getStreamEventRule()); }
	 ruleStreamEvent
{ after(grammarAccess.getStreamEventRule()); } 
	 EOF 
;

// Rule StreamEvent
ruleStreamEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStreamEventAccess().getGroup()); }
		(rule__StreamEvent__Group__0)
		{ after(grammarAccess.getStreamEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyOrPropertyValue
entryRuleEmptyOrPropertyValue
:
{ before(grammarAccess.getEmptyOrPropertyValueRule()); }
	 ruleEmptyOrPropertyValue
{ after(grammarAccess.getEmptyOrPropertyValueRule()); } 
	 EOF 
;

// Rule EmptyOrPropertyValue
ruleEmptyOrPropertyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyOrPropertyValueAccess().getAlternatives()); }
		(rule__EmptyOrPropertyValue__Alternatives)
		{ after(grammarAccess.getEmptyOrPropertyValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageExpression
entryRuleLanguageExpression
:
{ before(grammarAccess.getLanguageExpressionRule()); }
	 ruleLanguageExpression
{ after(grammarAccess.getLanguageExpressionRule()); } 
	 EOF 
;

// Rule LanguageExpression
ruleLanguageExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getAlternatives()); }
		(rule__LanguageExpression__Alternatives)
		{ after(grammarAccess.getLanguageExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LogLevel
ruleLogLevel
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogLevelAccess().getAlternatives()); }
		(rule__LogLevel__Alternatives)
		{ after(grammarAccess.getLogLevelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TemporalPropertyConditionKind
ruleTemporalPropertyConditionKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemporalPropertyConditionKindAccess().getAlternatives()); }
		(rule__TemporalPropertyConditionKind__Alternatives)
		{ after(grammarAccess.getTemporalPropertyConditionKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefaultLanguageIDAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefaultLanguageIDIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getDefaultLanguageIDIDTerminalRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDefaultLanguageIDSTRINGTerminalRuleCall_0_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getModelAccess().getDefaultLanguageIDSTRINGTerminalRuleCall_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getBeforeEventParserRuleCall_0()); }
		ruleBeforeEvent
		{ after(grammarAccess.getEventAccess().getBeforeEventParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getAfterEventParserRuleCall_1()); }
		ruleAfterEvent
		{ after(grammarAccess.getEventAccess().getAfterEventParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getBeforeAfterEventParserRuleCall_2()); }
		ruleBeforeAfterEvent
		{ after(grammarAccess.getEventAccess().getBeforeAfterEventParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__RuleIDAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeEventAccess().getRuleIDIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBeforeEventAccess().getRuleIDIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBeforeEventAccess().getRuleIDSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getBeforeEventAccess().getRuleIDSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__RuleIDAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEventAccess().getRuleIDIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAfterEventAccess().getRuleIDIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAfterEventAccess().getRuleIDSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getAfterEventAccess().getRuleIDSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__RuleIDAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getRuleIDIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBeforeAfterEventAccess().getRuleIDIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getRuleIDSTRINGTerminalRuleCall_0_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getBeforeAfterEventAccess().getRuleIDSTRINGTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getGroup_0()); }
		(rule__Condition__Group_0__0)
		{ after(grammarAccess.getConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getGroup_0()); }
		(rule__Pattern__Group_0__0)
		{ after(grammarAccess.getPatternAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getGroup_1()); }
		(rule__Pattern__Group_1__0)
		{ after(grammarAccess.getPatternAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getGroup_2()); }
		(rule__Pattern__Group_2__0)
		{ after(grammarAccess.getPatternAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getGroup_3()); }
		(rule__Pattern__Group_3__0)
		{ after(grammarAccess.getPatternAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getGroup_4()); }
		(rule__Pattern__Group_4__0)
		{ after(grammarAccess.getPatternAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundTypeAccess().getExactBoundParserRuleCall_0()); }
		ruleExactBound
		{ after(grammarAccess.getBoundTypeAccess().getExactBoundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoundTypeAccess().getLowerBoundParserRuleCall_1()); }
		ruleLowerBound
		{ after(grammarAccess.getBoundTypeAccess().getLowerBoundParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoundTypeAccess().getUpperBoundParserRuleCall_2()); }
		ruleUpperBound
		{ after(grammarAccess.getBoundTypeAccess().getUpperBoundParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getGroup_0()); }
		(rule__Scope__Group_0__0)
		{ after(grammarAccess.getScopeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_1()); }
		(rule__Scope__Group_1__0)
		{ after(grammarAccess.getScopeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_2()); }
		(rule__Scope__Group_2__0)
		{ after(grammarAccess.getScopeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_3()); }
		(rule__Scope__Group_3__0)
		{ after(grammarAccess.getScopeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_4()); }
		(rule__Scope__Group_4__0)
		{ after(grammarAccess.getScopeAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_0()); }
		(rule__Action__Group_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getAppendParserRuleCall_1()); }
		ruleAppend
		{ after(grammarAccess.getActionAccess().getAppendParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Appender__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppenderAccess().getStreamAppenderParserRuleCall_0()); }
		ruleStreamAppender
		{ after(grammarAccess.getAppenderAccess().getStreamAppenderParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAppenderAccess().getFileAppenderParserRuleCall_1()); }
		ruleFileAppender
		{ after(grammarAccess.getAppenderAccess().getFileAppenderParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAppenderAccess().getConsoleAppenderParserRuleCall_2()); }
		ruleConsoleAppender
		{ after(grammarAccess.getAppenderAccess().getConsoleAppenderParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__EventAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAppenderAccess().getEventIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamAppenderAccess().getEventIDTerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamAppenderAccess().getEventSTRINGTerminalRuleCall_2_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getStreamAppenderAccess().getEventSTRINGTerminalRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getStringLayoutParserRuleCall_0()); }
		ruleStringLayout
		{ after(grammarAccess.getLayoutAccess().getStringLayoutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutAccess().getExternalLayoutParserRuleCall_1()); }
		ruleExternalLayout
		{ after(grammarAccess.getLayoutAccess().getExternalLayoutParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__EventIdAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamEventAccess().getEventIdIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStreamEventAccess().getEventIdIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStreamEventAccess().getEventIdSTRINGTerminalRuleCall_0_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getStreamEventAccess().getEventIdSTRINGTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyOrPropertyValueAccess().getEmptyAction_0()); }
		()
		{ after(grammarAccess.getEmptyOrPropertyValueAccess().getEmptyAction_0()); }
	)
	|
	(
		{ before(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1()); }
		(rule__EmptyOrPropertyValue__Group_1__0)
		{ after(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getGroup_0()); }
		(rule__LanguageExpression__Group_0__0)
		{ after(grammarAccess.getLanguageExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getGroup_1()); }
		(rule__LanguageExpression__Group_1__0)
		{ after(grammarAccess.getLanguageExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__LanguageIdAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getLanguageIdIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLanguageExpressionAccess().getLanguageIdIDTerminalRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getLanguageIdSTRINGTerminalRuleCall_0_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageExpressionAccess().getLanguageIdSTRINGTerminalRuleCall_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogLevel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogLevelAccess().getConfigEnumLiteralDeclaration_0()); }
		('CONFIG')
		{ after(grammarAccess.getLogLevelAccess().getConfigEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getFineEnumLiteralDeclaration_1()); }
		('FINE')
		{ after(grammarAccess.getLogLevelAccess().getFineEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getFinerEnumLiteralDeclaration_2()); }
		('FINER')
		{ after(grammarAccess.getLogLevelAccess().getFinerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getFinestEnumLiteralDeclaration_3()); }
		('FINEST')
		{ after(grammarAccess.getLogLevelAccess().getFinestEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getInfoEnumLiteralDeclaration_4()); }
		('INFO')
		{ after(grammarAccess.getLogLevelAccess().getInfoEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getSevereEnumLiteralDeclaration_5()); }
		('SEVERE')
		{ after(grammarAccess.getLogLevelAccess().getSevereEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getLogLevelAccess().getWarningEnumLiteralDeclaration_6()); }
		('WARNING')
		{ after(grammarAccess.getLogLevelAccess().getWarningEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPropertyConditionKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemporalPropertyConditionKindAccess().getSEnumLiteralDeclaration_0()); }
		('S')
		{ after(grammarAccess.getTemporalPropertyConditionKindAccess().getSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTemporalPropertyConditionKindAccess().getVEnumLiteralDeclaration_1()); }
		('V')
		{ after(grammarAccess.getTemporalPropertyConditionKindAccess().getVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTemporalPropertyConditionKindAccess().getNSEnumLiteralDeclaration_2()); }
		('nS')
		{ after(grammarAccess.getTemporalPropertyConditionKindAccess().getNSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTemporalPropertyConditionKindAccess().getNVEnumLiteralDeclaration_3()); }
		('nV')
		{ after(grammarAccess.getTemporalPropertyConditionKindAccess().getNVEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_0()); }
	(rule__Model__Group_0__0)?
	{ after(grammarAccess.getModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getMoniLogSpecsAssignment_1()); }
		(rule__Model__MoniLogSpecsAssignment_1)
		{ after(grammarAccess.getModelAccess().getMoniLogSpecsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getMoniLogSpecsAssignment_1()); }
		(rule__Model__MoniLogSpecsAssignment_1)*
		{ after(grammarAccess.getModelAccess().getMoniLogSpecsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDefaultLanguageKeyword_0_0()); }
	'default-language'
	{ after(grammarAccess.getModelAccess().getDefaultLanguageKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDefaultLanguageIDAssignment_0_1()); }
	(rule__Model__DefaultLanguageIDAssignment_0_1)
	{ after(grammarAccess.getModelAccess().getDefaultLanguageIDAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__0__Impl
	rule__MoniLogSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getMonilogKeyword_0()); }
	'monilog'
	{ after(grammarAccess.getMoniLogSpecAccess().getMonilogKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__1__Impl
	rule__MoniLogSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getNameAssignment_1()); }
	(rule__MoniLogSpec__NameAssignment_1)?
	{ after(grammarAccess.getMoniLogSpecAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__2__Impl
	rule__MoniLogSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_2()); }
	(rule__MoniLogSpec__Group_2__0)?
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__3__Impl
	rule__MoniLogSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__4__Impl
	rule__MoniLogSpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_4()); }
	(rule__MoniLogSpec__Group_4__0)?
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__5__Impl
	rule__MoniLogSpec__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_5()); }
	(rule__MoniLogSpec__Group_5__0)?
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__6__Impl
	rule__MoniLogSpec__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getActionsKeyword_6()); }
	'actions'
	{ after(grammarAccess.getMoniLogSpecAccess().getActionsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__7__Impl
	rule__MoniLogSpec__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__8__Impl
	rule__MoniLogSpec__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getActionsAssignment_8()); }
	(rule__MoniLogSpec__ActionsAssignment_8)
	{ after(grammarAccess.getMoniLogSpecAccess().getActionsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__9__Impl
	rule__MoniLogSpec__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_9()); }
	(rule__MoniLogSpec__Group_9__0)*
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__10__Impl
	rule__MoniLogSpec__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_2__0__Impl
	rule__MoniLogSpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getMoniLogSpecAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_2__1__Impl
	rule__MoniLogSpec__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLevelAssignment_2_1()); }
	(rule__MoniLogSpec__LevelAssignment_2_1)
	{ after(grammarAccess.getMoniLogSpecAccess().getLevelAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getMoniLogSpecAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4__0__Impl
	rule__MoniLogSpec__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getEventsKeyword_4_0()); }
	'events'
	{ after(grammarAccess.getMoniLogSpecAccess().getEventsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4__1__Impl
	rule__MoniLogSpec__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4__2__Impl
	rule__MoniLogSpec__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getEventsAssignment_4_2()); }
	(rule__MoniLogSpec__EventsAssignment_4_2)
	{ after(grammarAccess.getMoniLogSpecAccess().getEventsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4__3__Impl
	rule__MoniLogSpec__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_4_3()); }
	(rule__MoniLogSpec__Group_4_3__0)*
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4_3__0__Impl
	rule__MoniLogSpec__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getEventsAssignment_4_3_1()); }
	(rule__MoniLogSpec__EventsAssignment_4_3_1)
	{ after(grammarAccess.getMoniLogSpecAccess().getEventsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5__0__Impl
	rule__MoniLogSpec__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getConditionsKeyword_5_0()); }
	'conditions'
	{ after(grammarAccess.getMoniLogSpecAccess().getConditionsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5__1__Impl
	rule__MoniLogSpec__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getMoniLogSpecAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5__2__Impl
	rule__MoniLogSpec__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getConditionsAssignment_5_2()); }
	(rule__MoniLogSpec__ConditionsAssignment_5_2)
	{ after(grammarAccess.getMoniLogSpecAccess().getConditionsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5__3__Impl
	rule__MoniLogSpec__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getGroup_5_3()); }
	(rule__MoniLogSpec__Group_5_3__0)*
	{ after(grammarAccess.getMoniLogSpecAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getMoniLogSpecAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5_3__0__Impl
	rule__MoniLogSpec__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getConditionsAssignment_5_3_1()); }
	(rule__MoniLogSpec__ConditionsAssignment_5_3_1)
	{ after(grammarAccess.getMoniLogSpecAccess().getConditionsAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoniLogSpec__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_9__0__Impl
	rule__MoniLogSpec__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getMoniLogSpecAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoniLogSpec__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoniLogSpecAccess().getActionsAssignment_9_1()); }
	(rule__MoniLogSpec__ActionsAssignment_9_1)
	{ after(grammarAccess.getMoniLogSpecAccess().getActionsAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group__0__Impl
	rule__BeforeEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getBeforeKeyword_0()); }
	'before'
	{ after(grammarAccess.getBeforeEventAccess().getBeforeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group__1__Impl
	rule__BeforeEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getRuleIDAssignment_1()); }
	(rule__BeforeEvent__RuleIDAssignment_1)
	{ after(grammarAccess.getBeforeEventAccess().getRuleIDAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2()); }
	(rule__BeforeEvent__UnorderedGroup_2)
	{ after(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeEvent__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group_2_0__0__Impl
	rule__BeforeEvent__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getFrequencyKeyword_2_0_0()); }
	'frequency^'
	{ after(grammarAccess.getBeforeEventAccess().getFrequencyKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getFrequencyAssignment_2_0_1()); }
	(rule__BeforeEvent__FrequencyAssignment_2_0_1)
	{ after(grammarAccess.getBeforeEventAccess().getFrequencyAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeEvent__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group_2_1__0__Impl
	rule__BeforeEvent__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getLimitKeyword_2_1_0()); }
	'limit'
	{ after(grammarAccess.getBeforeEventAccess().getLimitKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeEventAccess().getLimitAssignment_2_1_1()); }
	(rule__BeforeEvent__LimitAssignment_2_1_1)
	{ after(grammarAccess.getBeforeEventAccess().getLimitAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group__0__Impl
	rule__AfterEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getAfterKeyword_0()); }
	'after'
	{ after(grammarAccess.getAfterEventAccess().getAfterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group__1__Impl
	rule__AfterEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getRuleIDAssignment_1()); }
	(rule__AfterEvent__RuleIDAssignment_1)
	{ after(grammarAccess.getAfterEventAccess().getRuleIDAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getUnorderedGroup_2()); }
	(rule__AfterEvent__UnorderedGroup_2)
	{ after(grammarAccess.getAfterEventAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterEvent__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group_2_0__0__Impl
	rule__AfterEvent__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getFrequencyKeyword_2_0_0()); }
	'frequency'
	{ after(grammarAccess.getAfterEventAccess().getFrequencyKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getFrequencyAssignment_2_0_1()); }
	(rule__AfterEvent__FrequencyAssignment_2_0_1)
	{ after(grammarAccess.getAfterEventAccess().getFrequencyAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterEvent__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group_2_1__0__Impl
	rule__AfterEvent__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getLimitKeyword_2_1_0()); }
	'limit'
	{ after(grammarAccess.getAfterEventAccess().getLimitKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEventAccess().getLimitAssignment_2_1_1()); }
	(rule__AfterEvent__LimitAssignment_2_1_1)
	{ after(grammarAccess.getAfterEventAccess().getLimitAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeAfterEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group__0__Impl
	rule__BeforeAfterEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getRuleIDAssignment_0()); }
	(rule__BeforeAfterEvent__RuleIDAssignment_0)
	{ after(grammarAccess.getBeforeAfterEventAccess().getRuleIDAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1()); }
	(rule__BeforeAfterEvent__UnorderedGroup_1)
	{ after(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeAfterEvent__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group_1_0__0__Impl
	rule__BeforeAfterEvent__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getFrequencyKeyword_1_0_0()); }
	'frequency'
	{ after(grammarAccess.getBeforeAfterEventAccess().getFrequencyKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getFrequencyAssignment_1_0_1()); }
	(rule__BeforeAfterEvent__FrequencyAssignment_1_0_1)
	{ after(grammarAccess.getBeforeAfterEventAccess().getFrequencyAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeAfterEvent__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group_1_1__0__Impl
	rule__BeforeAfterEvent__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getLimitKeyword_1_1_0()); }
	'limit'
	{ after(grammarAccess.getBeforeAfterEventAccess().getLimitKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforeAfterEventAccess().getLimitAssignment_1_1_1()); }
	(rule__BeforeAfterEvent__LimitAssignment_1_1_1)
	{ after(grammarAccess.getBeforeAfterEventAccess().getLimitAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getTemporalPropertyConditionAction_0_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getTemporalPropertyConditionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getStreamKeyword_0_1()); }
	'stream'
	{ after(grammarAccess.getConditionAccess().getStreamKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__2__Impl
	rule__Condition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__3__Impl
	rule__Condition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getPatternAssignment_0_3()); }
	(rule__Condition__PatternAssignment_0_3)
	{ after(grammarAccess.getConditionAccess().getPatternAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__4__Impl
	rule__Condition__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_0_4()); }
	(rule__Condition__Group_0_4__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getConditionAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0_4__0__Impl
	rule__Condition__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getCommaKeyword_0_4_0()); }
	','
	{ after(grammarAccess.getConditionAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getKindAssignment_0_4_1()); }
	(rule__Condition__KindAssignment_0_4_1)
	{ after(grammarAccess.getConditionAccess().getKindAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLanguageExpressionConditionAction_1_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getLanguageExpressionConditionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getExpressionAssignment_1_1()); }
	(rule__Condition__ExpressionAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemporalPattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemporalPattern__Group__0__Impl
	rule__TemporalPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemporalPatternAccess().getPatternAssignment_0()); }
	(rule__TemporalPattern__PatternAssignment_0)
	{ after(grammarAccess.getTemporalPatternAccess().getPatternAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemporalPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemporalPatternAccess().getScopeAssignment_1()); }
	(rule__TemporalPattern__ScopeAssignment_1)
	{ after(grammarAccess.getTemporalPatternAccess().getScopeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_0__0__Impl
	rule__Pattern__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getUniversalityAction_0_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getUniversalityAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_0__1__Impl
	rule__Pattern__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getAlwaysKeyword_0_1()); }
	'always'
	{ after(grammarAccess.getPatternAccess().getAlwaysKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEventAssignment_0_2()); }
	(rule__Pattern__EventAssignment_0_2)
	{ after(grammarAccess.getPatternAccess().getEventAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__0__Impl
	rule__Pattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getExistenceAction_1_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getExistenceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__1__Impl
	rule__Pattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getExistsKeyword_1_1()); }
	'exists'
	{ after(grammarAccess.getPatternAccess().getExistsKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__2__Impl
	rule__Pattern__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getBoundAssignment_1_2()); }
	(rule__Pattern__BoundAssignment_1_2)
	{ after(grammarAccess.getPatternAccess().getBoundAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEventAssignment_1_3()); }
	(rule__Pattern__EventAssignment_1_3)
	{ after(grammarAccess.getPatternAccess().getEventAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2__0__Impl
	rule__Pattern__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getAbsenceAction_2_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getAbsenceAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2__1__Impl
	rule__Pattern__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getNeverKeyword_2_1()); }
	'never'
	{ after(grammarAccess.getPatternAccess().getNeverKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEventAssignment_2_2()); }
	(rule__Pattern__EventAssignment_2_2)
	{ after(grammarAccess.getPatternAccess().getEventAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__0__Impl
	rule__Pattern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPrecedenceAction_3_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getPrecedenceAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__1__Impl
	rule__Pattern__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPredecessorAssignment_3_1()); }
	(rule__Pattern__PredecessorAssignment_3_1)
	{ after(grammarAccess.getPatternAccess().getPredecessorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__2__Impl
	rule__Pattern__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPrecedesKeyword_3_2()); }
	'precedes'
	{ after(grammarAccess.getPatternAccess().getPrecedesKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getSuccessorAssignment_3_3()); }
	(rule__Pattern__SuccessorAssignment_3_3)
	{ after(grammarAccess.getPatternAccess().getSuccessorAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__0__Impl
	rule__Pattern__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getResponseAction_4_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getResponseAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__1__Impl
	rule__Pattern__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getEventAssignment_4_1()); }
	(rule__Pattern__EventAssignment_4_1)
	{ after(grammarAccess.getPatternAccess().getEventAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__2__Impl
	rule__Pattern__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRespondsToKeyword_4_2()); }
	'respondsTo'
	{ after(grammarAccess.getPatternAccess().getRespondsToKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getTriggerAssignment_4_3()); }
	(rule__Pattern__TriggerAssignment_4_3)
	{ after(grammarAccess.getPatternAccess().getTriggerAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowerBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerBound__Group__0__Impl
	rule__LowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerBoundAccess().getAtleastKeyword_0()); }
	'atleast'
	{ after(grammarAccess.getLowerBoundAccess().getAtleastKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerBoundAccess().getNAssignment_1()); }
	(rule__LowerBound__NAssignment_1)
	{ after(grammarAccess.getLowerBoundAccess().getNAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperBound__Group__0__Impl
	rule__UpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperBoundAccess().getAtmostKeyword_0()); }
	'atmost'
	{ after(grammarAccess.getUpperBoundAccess().getAtmostKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperBoundAccess().getNAssignment_1()); }
	(rule__UpperBound__NAssignment_1)
	{ after(grammarAccess.getUpperBoundAccess().getNAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_0__0__Impl
	rule__Scope__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getGloballyAction_0_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getGloballyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); }
	('globally')?
	{ after(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__0__Impl
	rule__Scope__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterAction_1_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getAfterAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__1__Impl
	rule__Scope__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterKeyword_1_1()); }
	'after'
	{ after(grammarAccess.getScopeAccess().getAfterKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getLowerBoundAssignment_1_2()); }
	(rule__Scope__LowerBoundAssignment_1_2)
	{ after(grammarAccess.getScopeAccess().getLowerBoundAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__0__Impl
	rule__Scope__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBeforeAction_2_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getBeforeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__1__Impl
	rule__Scope__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBeforeKeyword_2_1()); }
	'before'
	{ after(grammarAccess.getScopeAccess().getBeforeKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getUpperBoundAssignment_2_2()); }
	(rule__Scope__UpperBoundAssignment_2_2)
	{ after(grammarAccess.getScopeAccess().getUpperBoundAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__0__Impl
	rule__Scope__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBetweenAction_3_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getBetweenAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__1__Impl
	rule__Scope__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); }
	'between'
	{ after(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__2__Impl
	rule__Scope__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getLowerBoundAssignment_3_2()); }
	(rule__Scope__LowerBoundAssignment_3_2)
	{ after(grammarAccess.getScopeAccess().getLowerBoundAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__3__Impl
	rule__Scope__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAndKeyword_3_3()); }
	'and'
	{ after(grammarAccess.getScopeAccess().getAndKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getUpperBoundAssignment_3_4()); }
	(rule__Scope__UpperBoundAssignment_3_4)
	{ after(grammarAccess.getScopeAccess().getUpperBoundAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__0__Impl
	rule__Scope__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterUntilAction_4_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getAfterUntilAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__1__Impl
	rule__Scope__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); }
	'after'
	{ after(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__2__Impl
	rule__Scope__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getLowerBoundAssignment_4_2()); }
	(rule__Scope__LowerBoundAssignment_4_2)
	{ after(grammarAccess.getScopeAccess().getLowerBoundAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__3__Impl
	rule__Scope__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getUntilKeyword_4_3()); }
	'until'
	{ after(grammarAccess.getScopeAccess().getUntilKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getUpperBoundAssignment_4_4()); }
	(rule__Scope__UpperBoundAssignment_4_4)
	{ after(grammarAccess.getScopeAccess().getUpperBoundAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNotifyAction_0_0()); }
	()
	{ after(grammarAccess.getActionAccess().getNotifyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNotifyKeyword_0_1()); }
	'notify'
	{ after(grammarAccess.getActionAccess().getNotifyKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Append__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Append__Group__0__Impl
	rule__Append__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Append__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppendAccess().getAppendKeyword_0()); }
	'append'
	{ after(grammarAccess.getAppendAccess().getAppendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Append__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Append__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Append__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppendAccess().getAppenderAssignment_1()); }
	(rule__Append__AppenderAssignment_1)
	{ after(grammarAccess.getAppendAccess().getAppenderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamAppender__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group__0__Impl
	rule__StreamAppender__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getStreamKeyword_0()); }
	'stream'
	{ after(grammarAccess.getStreamAppenderAccess().getStreamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group__1__Impl
	rule__StreamAppender__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStreamAppenderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group__2__Impl
	rule__StreamAppender__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getEventAssignment_2()); }
	(rule__StreamAppender__EventAssignment_2)
	{ after(grammarAccess.getStreamAppenderAccess().getEventAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group__3__Impl
	rule__StreamAppender__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getGroup_3()); }
	(rule__StreamAppender__Group_3__0)?
	{ after(grammarAccess.getStreamAppenderAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getStreamAppenderAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamAppender__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3__0__Impl
	rule__StreamAppender__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getLeftSquareBracketKeyword_3_0()); }
	'['
	{ after(grammarAccess.getStreamAppenderAccess().getLeftSquareBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3__1__Impl
	rule__StreamAppender__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getValuesAssignment_3_1()); }
	(rule__StreamAppender__ValuesAssignment_3_1)
	{ after(grammarAccess.getStreamAppenderAccess().getValuesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3__2__Impl
	rule__StreamAppender__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getGroup_3_2()); }
	(rule__StreamAppender__Group_3_2__0)*
	{ after(grammarAccess.getStreamAppenderAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getRightSquareBracketKeyword_3_3()); }
	']'
	{ after(grammarAccess.getStreamAppenderAccess().getRightSquareBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamAppender__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3_2__0__Impl
	rule__StreamAppender__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getStreamAppenderAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamAppender__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamAppenderAccess().getValuesAssignment_3_2_1()); }
	(rule__StreamAppender__ValuesAssignment_3_2_1)
	{ after(grammarAccess.getStreamAppenderAccess().getValuesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileAppender__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__0__Impl
	rule__FileAppender__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getFileKeyword_0()); }
	'file'
	{ after(grammarAccess.getFileAppenderAccess().getFileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__1__Impl
	rule__FileAppender__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFileAppenderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__2__Impl
	rule__FileAppender__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getFilenameAssignment_2()); }
	(rule__FileAppender__FilenameAssignment_2)
	{ after(grammarAccess.getFileAppenderAccess().getFilenameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__3__Impl
	rule__FileAppender__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getFileAppenderAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__4__Impl
	rule__FileAppender__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getLayoutAssignment_4()); }
	(rule__FileAppender__LayoutAssignment_4)
	{ after(grammarAccess.getFileAppenderAccess().getLayoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileAppender__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAppenderAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFileAppenderAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConsoleAppender__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleAppender__Group__0__Impl
	rule__ConsoleAppender__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleAppenderAccess().getConsoleKeyword_0()); }
	'console'
	{ after(grammarAccess.getConsoleAppenderAccess().getConsoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleAppender__Group__1__Impl
	rule__ConsoleAppender__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleAppenderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConsoleAppenderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleAppender__Group__2__Impl
	rule__ConsoleAppender__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleAppenderAccess().getLayoutAssignment_2()); }
	(rule__ConsoleAppender__LayoutAssignment_2)
	{ after(grammarAccess.getConsoleAppenderAccess().getLayoutAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConsoleAppender__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConsoleAppenderAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConsoleAppenderAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLayout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLayout__Group__0__Impl
	rule__StringLayout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLayoutAccess().getFormatStringAssignment_0()); }
	(rule__StringLayout__FormatStringAssignment_0)
	{ after(grammarAccess.getStringLayoutAccess().getFormatStringAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLayout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLayoutAccess().getGroup_1()); }
	(rule__StringLayout__Group_1__0)*
	{ after(grammarAccess.getStringLayoutAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLayout__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLayout__Group_1__0__Impl
	rule__StringLayout__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLayoutAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getStringLayoutAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLayout__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLayoutAccess().getValuesAssignment_1_1()); }
	(rule__StringLayout__ValuesAssignment_1_1)
	{ after(grammarAccess.getStringLayoutAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLayout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalLayout__Group__0__Impl
	rule__ExternalLayout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalLayoutAccess().getPathAssignment_0()); }
	(rule__ExternalLayout__PathAssignment_0)
	{ after(grammarAccess.getExternalLayoutAccess().getPathAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalLayout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalLayoutAccess().getGroup_1()); }
	(rule__ExternalLayout__Group_1__0)*
	{ after(grammarAccess.getExternalLayoutAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalLayout__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalLayout__Group_1__0__Impl
	rule__ExternalLayout__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalLayoutAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExternalLayoutAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalLayout__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalLayoutAccess().getValuesAssignment_1_1()); }
	(rule__ExternalLayout__ValuesAssignment_1_1)
	{ after(grammarAccess.getExternalLayoutAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group__0__Impl
	rule__StreamEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getEventIdAssignment_0()); }
	(rule__StreamEvent__EventIdAssignment_0)
	{ after(grammarAccess.getStreamEventAccess().getEventIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getGroup_1()); }
	(rule__StreamEvent__Group_1__0)?
	{ after(grammarAccess.getStreamEventAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamEvent__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1__0__Impl
	rule__StreamEvent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getStreamEventAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1__1__Impl
	rule__StreamEvent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getValuesAssignment_1_1()); }
	(rule__StreamEvent__ValuesAssignment_1_1)
	{ after(grammarAccess.getStreamEventAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1__2__Impl
	rule__StreamEvent__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getGroup_1_2()); }
	(rule__StreamEvent__Group_1_2__0)*
	{ after(grammarAccess.getStreamEventAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getStreamEventAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StreamEvent__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1_2__0__Impl
	rule__StreamEvent__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getStreamEventAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StreamEvent__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStreamEventAccess().getValuesAssignment_1_2_1()); }
	(rule__StreamEvent__ValuesAssignment_1_2_1)
	{ after(grammarAccess.getStreamEventAccess().getValuesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyOrPropertyValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyOrPropertyValue__Group_1__0__Impl
	rule__EmptyOrPropertyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyOrPropertyValueAccess().getPropertyValueAction_1_0()); }
	()
	{ after(grammarAccess.getEmptyOrPropertyValueAccess().getPropertyValueAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyOrPropertyValue__Group_1__1__Impl
	rule__EmptyOrPropertyValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyOrPropertyValueAccess().getIdAssignment_1_1()); }
	(rule__EmptyOrPropertyValue__IdAssignment_1_1)
	{ after(grammarAccess.getEmptyOrPropertyValueAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyOrPropertyValue__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1_2()); }
	(rule__EmptyOrPropertyValue__Group_1_2__0)?
	{ after(grammarAccess.getEmptyOrPropertyValueAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyOrPropertyValue__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyOrPropertyValue__Group_1_2__0__Impl
	rule__EmptyOrPropertyValue__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyOrPropertyValueAccess().getEqualsSignKeyword_1_2_0()); }
	'='
	{ after(grammarAccess.getEmptyOrPropertyValueAccess().getEqualsSignKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyOrPropertyValue__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyOrPropertyValueAccess().getValueAssignment_1_2_1()); }
	(rule__EmptyOrPropertyValue__ValueAssignment_1_2_1)
	{ after(grammarAccess.getEmptyOrPropertyValueAccess().getValueAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_0__0__Impl
	rule__LanguageExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getExplicitLanguageExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getLanguageExpressionAccess().getExplicitLanguageExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_0__1__Impl
	rule__LanguageExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getLanguageIdAssignment_0_1()); }
	(rule__LanguageExpression__LanguageIdAssignment_0_1)
	{ after(grammarAccess.getLanguageExpressionAccess().getLanguageIdAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_0__2__Impl
	rule__LanguageExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getLanguageExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_0__3__Impl
	rule__LanguageExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_0_3()); }
	(rule__LanguageExpression__ExpressionAssignment_0_3)
	{ after(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getLanguageExpressionAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LanguageExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_1__0__Impl
	rule__LanguageExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getDefaultLanguageExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLanguageExpressionAccess().getDefaultLanguageExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LanguageExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_1_1()); }
	(rule__LanguageExpression__ExpressionAssignment_1_1)
	{ after(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeEvent__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2());
	}
:
	rule__BeforeEvent__UnorderedGroup_2__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__BeforeEvent__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeforeEventAccess().getGroup_2_0()); }
					(rule__BeforeEvent__Group_2_0__0)
					{ after(grammarAccess.getBeforeEventAccess().getGroup_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeforeEventAccess().getGroup_2_1()); }
					(rule__BeforeEvent__Group_2_1__0)
					{ after(grammarAccess.getBeforeEventAccess().getGroup_2_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBeforeEventAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__BeforeEvent__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__UnorderedGroup_2__Impl
	rule__BeforeEvent__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeEvent__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterEvent__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getAfterEventAccess().getUnorderedGroup_2());
	}
:
	rule__AfterEvent__UnorderedGroup_2__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getAfterEventAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__AfterEvent__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getAfterEventAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getAfterEventAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getAfterEventAccess().getGroup_2_0()); }
					(rule__AfterEvent__Group_2_0__0)
					{ after(grammarAccess.getAfterEventAccess().getGroup_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getAfterEventAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getAfterEventAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getAfterEventAccess().getGroup_2_1()); }
					(rule__AfterEvent__Group_2_1__0)
					{ after(grammarAccess.getAfterEventAccess().getGroup_2_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAfterEventAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__AfterEvent__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__UnorderedGroup_2__Impl
	rule__AfterEvent__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterEvent__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforeAfterEvent__UnorderedGroup_1
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1());
	}
:
	rule__BeforeAfterEvent__UnorderedGroup_1__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeforeAfterEventAccess().getGroup_1_0()); }
					(rule__BeforeAfterEvent__Group_1_0__0)
					{ after(grammarAccess.getBeforeAfterEventAccess().getGroup_1_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBeforeAfterEventAccess().getGroup_1_1()); }
					(rule__BeforeAfterEvent__Group_1_1__0)
					{ after(grammarAccess.getBeforeAfterEventAccess().getGroup_1_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBeforeAfterEventAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__UnorderedGroup_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__UnorderedGroup_1__Impl
	rule__BeforeAfterEvent__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__UnorderedGroup_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforeAfterEvent__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DefaultLanguageIDAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefaultLanguageIDAlternatives_0_1_0()); }
		(rule__Model__DefaultLanguageIDAlternatives_0_1_0)
		{ after(grammarAccess.getModelAccess().getDefaultLanguageIDAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MoniLogSpecsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMoniLogSpecsMoniLogSpecParserRuleCall_1_0()); }
		ruleMoniLogSpec
		{ after(grammarAccess.getModelAccess().getMoniLogSpecsMoniLogSpecParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMoniLogSpecAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__LevelAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getLevelLogLevelEnumRuleCall_2_1_0()); }
		ruleLogLevel
		{ after(grammarAccess.getMoniLogSpecAccess().getLevelLogLevelEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__EventsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getEventsEventParserRuleCall_4_2_0()); }
		ruleEvent
		{ after(grammarAccess.getMoniLogSpecAccess().getEventsEventParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__EventsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getEventsEventParserRuleCall_4_3_1_0()); }
		ruleEvent
		{ after(grammarAccess.getMoniLogSpecAccess().getEventsEventParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__ConditionsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getConditionsConditionParserRuleCall_5_2_0()); }
		ruleCondition
		{ after(grammarAccess.getMoniLogSpecAccess().getConditionsConditionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__ConditionsAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getConditionsConditionParserRuleCall_5_3_1_0()); }
		ruleCondition
		{ after(grammarAccess.getMoniLogSpecAccess().getConditionsConditionParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__ActionsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getActionsActionParserRuleCall_8_0()); }
		ruleAction
		{ after(grammarAccess.getMoniLogSpecAccess().getActionsActionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoniLogSpec__ActionsAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoniLogSpecAccess().getActionsActionParserRuleCall_9_1_0()); }
		ruleAction
		{ after(grammarAccess.getMoniLogSpecAccess().getActionsActionParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__RuleIDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeEventAccess().getRuleIDAlternatives_1_0()); }
		(rule__BeforeEvent__RuleIDAlternatives_1_0)
		{ after(grammarAccess.getBeforeEventAccess().getRuleIDAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__FrequencyAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeEventAccess().getFrequencyINTTerminalRuleCall_2_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBeforeEventAccess().getFrequencyINTTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeEvent__LimitAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeEventAccess().getLimitINTTerminalRuleCall_2_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBeforeEventAccess().getLimitINTTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__RuleIDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEventAccess().getRuleIDAlternatives_1_0()); }
		(rule__AfterEvent__RuleIDAlternatives_1_0)
		{ after(grammarAccess.getAfterEventAccess().getRuleIDAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__FrequencyAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEventAccess().getFrequencyINTTerminalRuleCall_2_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAfterEventAccess().getFrequencyINTTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterEvent__LimitAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEventAccess().getLimitINTTerminalRuleCall_2_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAfterEventAccess().getLimitINTTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__RuleIDAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getRuleIDAlternatives_0_0()); }
		(rule__BeforeAfterEvent__RuleIDAlternatives_0_0)
		{ after(grammarAccess.getBeforeAfterEventAccess().getRuleIDAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__FrequencyAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getFrequencyINTTerminalRuleCall_1_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBeforeAfterEventAccess().getFrequencyINTTerminalRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforeAfterEvent__LimitAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforeAfterEventAccess().getLimitINTTerminalRuleCall_1_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getBeforeAfterEventAccess().getLimitINTTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__PatternAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getPatternTemporalPatternParserRuleCall_0_3_0()); }
		ruleTemporalPattern
		{ after(grammarAccess.getConditionAccess().getPatternTemporalPatternParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__KindAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getKindTemporalPropertyConditionKindEnumRuleCall_0_4_1_0()); }
		ruleTemporalPropertyConditionKind
		{ after(grammarAccess.getConditionAccess().getKindTemporalPropertyConditionKindEnumRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionLanguageExpressionParserRuleCall_1_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getConditionAccess().getExpressionLanguageExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPattern__PatternAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemporalPatternAccess().getPatternPatternParserRuleCall_0_0()); }
		rulePattern
		{ after(grammarAccess.getTemporalPatternAccess().getPatternPatternParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPattern__ScopeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemporalPatternAccess().getScopeScopeParserRuleCall_1_0()); }
		ruleScope
		{ after(grammarAccess.getTemporalPatternAccess().getScopeScopeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__EventAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_0_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__BoundAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getBoundBoundTypeParserRuleCall_1_2_0()); }
		ruleBoundType
		{ after(grammarAccess.getPatternAccess().getBoundBoundTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__EventAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_1_3_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__EventAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_2_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__PredecessorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getPredecessorStreamEventParserRuleCall_3_1_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getPredecessorStreamEventParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__SuccessorAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getSuccessorStreamEventParserRuleCall_3_3_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getSuccessorStreamEventParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__EventAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_4_1_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__TriggerAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getTriggerStreamEventParserRuleCall_4_3_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getPatternAccess().getTriggerStreamEventParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactBound__NAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExactBoundAccess().getNINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getExactBoundAccess().getNINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerBound__NAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerBoundAccess().getNINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLowerBoundAccess().getNINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperBound__NAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperBoundAccess().getNINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getUpperBoundAccess().getNINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__LowerBoundAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_1_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__UpperBoundAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_2_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__LowerBoundAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_3_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__UpperBoundAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_3_4_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__LowerBoundAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_4_2_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__UpperBoundAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_4_4_0()); }
		ruleStreamEvent
		{ after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Append__AppenderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppendAccess().getAppenderAppenderParserRuleCall_1_0()); }
		ruleAppender
		{ after(grammarAccess.getAppendAccess().getAppenderAppenderParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__EventAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAppenderAccess().getEventAlternatives_2_0()); }
		(rule__StreamAppender__EventAlternatives_2_0)
		{ after(grammarAccess.getStreamAppenderAccess().getEventAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__ValuesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAppenderAccess().getValuesLanguageExpressionParserRuleCall_3_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getStreamAppenderAccess().getValuesLanguageExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamAppender__ValuesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamAppenderAccess().getValuesLanguageExpressionParserRuleCall_3_2_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getStreamAppenderAccess().getValuesLanguageExpressionParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__FilenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAppenderAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFileAppenderAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAppender__LayoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAppenderAccess().getLayoutLayoutParserRuleCall_4_0()); }
		ruleLayout
		{ after(grammarAccess.getFileAppenderAccess().getLayoutLayoutParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsoleAppender__LayoutAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsoleAppenderAccess().getLayoutLayoutParserRuleCall_2_0()); }
		ruleLayout
		{ after(grammarAccess.getConsoleAppenderAccess().getLayoutLayoutParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__FormatStringAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLayoutAccess().getFormatStringSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLayoutAccess().getFormatStringSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLayout__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLayoutAccess().getValuesLanguageExpressionParserRuleCall_1_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getStringLayoutAccess().getValuesLanguageExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__PathAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalLayoutAccess().getPathFQNParserRuleCall_0_0()); }
		ruleFQN
		{ after(grammarAccess.getExternalLayoutAccess().getPathFQNParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalLayout__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalLayoutAccess().getValuesLanguageExpressionParserRuleCall_1_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getExternalLayoutAccess().getValuesLanguageExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__EventIdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamEventAccess().getEventIdAlternatives_0_0()); }
		(rule__StreamEvent__EventIdAlternatives_0_0)
		{ after(grammarAccess.getStreamEventAccess().getEventIdAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_1_0()); }
		ruleEmptyOrPropertyValue
		{ after(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamEvent__ValuesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_2_1_0()); }
		ruleEmptyOrPropertyValue
		{ after(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyOrPropertyValueAccess().getIdIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEmptyOrPropertyValueAccess().getIdIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyOrPropertyValue__ValueAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmptyOrPropertyValueAccess().getValueLanguageExpressionParserRuleCall_1_2_1_0()); }
		ruleLanguageExpression
		{ after(grammarAccess.getEmptyOrPropertyValueAccess().getValueLanguageExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__LanguageIdAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getLanguageIdAlternatives_0_1_0()); }
		(rule__LanguageExpression__LanguageIdAlternatives_0_1_0)
		{ after(grammarAccess.getLanguageExpressionAccess().getLanguageIdAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__ExpressionAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguageExpression__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
