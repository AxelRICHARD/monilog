package org.gemoc.monilog.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.gemoc.monilog.services.MoniLogGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMoniLogParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INT", "RULE_REAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'@Inactive'", "'@Async'", "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'false'", "'INFO'", "'CONFIG'", "'FINE'", "'FINER'", "'FINEST'", "'SEVERE'", "'WARNING'", "'S'", "'V'", "'nS'", "'nV'", "'package'", "'import'", "'as'", "'appender'", "'{'", "';'", "'}'", "'('", "')'", "'layout'", "','", "'...'", "'monilogger'", "'event'", "'actions'", "'['", "']'", "'conditions'", "'call'", "'complex'", "'custom'", "'before'", "'after'", "'exists'", "'always'", "'never'", "'precedes'", "'respondsTo'", "'atleast'", "'atmost'", "'globally'", "'between'", "'and'", "'until'", "'.'", "'emit'", "'start'", "'stop'", "'='", "'?'", "':'", "'-'", "'!'", "'sizeOf'", "'.*'", "'||'", "'&&'", "'+'", "'*'", "'/'", "'%'", "'true'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_REAL=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=9;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__78=78;
    public static final int T__35=35;
    public static final int T__79=79;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=10;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalMoniLogParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMoniLogParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMoniLogParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMoniLog.g"; }


    	private MoniLogGrammarAccess grammarAccess;

    	public void setGrammarAccess(MoniLogGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDocument"
    // InternalMoniLog.g:54:1: entryRuleDocument : ruleDocument EOF ;
    public final void entryRuleDocument() throws RecognitionException {
        try {
            // InternalMoniLog.g:55:1: ( ruleDocument EOF )
            // InternalMoniLog.g:56:1: ruleDocument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDocument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDocument"


    // $ANTLR start "ruleDocument"
    // InternalMoniLog.g:63:1: ruleDocument : ( ( rule__Document__Group__0 ) ) ;
    public final void ruleDocument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:67:2: ( ( ( rule__Document__Group__0 ) ) )
            // InternalMoniLog.g:68:2: ( ( rule__Document__Group__0 ) )
            {
            // InternalMoniLog.g:68:2: ( ( rule__Document__Group__0 ) )
            // InternalMoniLog.g:69:3: ( rule__Document__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getGroup()); 
            }
            // InternalMoniLog.g:70:3: ( rule__Document__Group__0 )
            // InternalMoniLog.g:70:4: rule__Document__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Document__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDocument"


    // $ANTLR start "entryRuleImport"
    // InternalMoniLog.g:79:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalMoniLog.g:80:1: ( ruleImport EOF )
            // InternalMoniLog.g:81:1: ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalMoniLog.g:88:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:92:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalMoniLog.g:93:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalMoniLog.g:93:2: ( ( rule__Import__Alternatives ) )
            // InternalMoniLog.g:94:3: ( rule__Import__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:95:3: ( rule__Import__Alternatives )
            // InternalMoniLog.g:95:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleFileAlias"
    // InternalMoniLog.g:104:1: entryRuleFileAlias : ruleFileAlias EOF ;
    public final void entryRuleFileAlias() throws RecognitionException {
        try {
            // InternalMoniLog.g:105:1: ( ruleFileAlias EOF )
            // InternalMoniLog.g:106:1: ruleFileAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFileAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFileAlias"


    // $ANTLR start "ruleFileAlias"
    // InternalMoniLog.g:113:1: ruleFileAlias : ( ( rule__FileAlias__Group__0 ) ) ;
    public final void ruleFileAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:117:2: ( ( ( rule__FileAlias__Group__0 ) ) )
            // InternalMoniLog.g:118:2: ( ( rule__FileAlias__Group__0 ) )
            {
            // InternalMoniLog.g:118:2: ( ( rule__FileAlias__Group__0 ) )
            // InternalMoniLog.g:119:3: ( rule__FileAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getGroup()); 
            }
            // InternalMoniLog.g:120:3: ( rule__FileAlias__Group__0 )
            // InternalMoniLog.g:120:4: rule__FileAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FileAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFileAlias"


    // $ANTLR start "entryRuleAppender"
    // InternalMoniLog.g:129:1: entryRuleAppender : ruleAppender EOF ;
    public final void entryRuleAppender() throws RecognitionException {
        try {
            // InternalMoniLog.g:130:1: ( ruleAppender EOF )
            // InternalMoniLog.g:131:1: ruleAppender EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAppender();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAppender"


    // $ANTLR start "ruleAppender"
    // InternalMoniLog.g:138:1: ruleAppender : ( ( rule__Appender__Alternatives ) ) ;
    public final void ruleAppender() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:142:2: ( ( ( rule__Appender__Alternatives ) ) )
            // InternalMoniLog.g:143:2: ( ( rule__Appender__Alternatives ) )
            {
            // InternalMoniLog.g:143:2: ( ( rule__Appender__Alternatives ) )
            // InternalMoniLog.g:144:3: ( rule__Appender__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:145:3: ( rule__Appender__Alternatives )
            // InternalMoniLog.g:145:4: rule__Appender__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Appender__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAppender"


    // $ANTLR start "entryRuleLocalAppender"
    // InternalMoniLog.g:154:1: entryRuleLocalAppender : ruleLocalAppender EOF ;
    public final void entryRuleLocalAppender() throws RecognitionException {
        try {
            // InternalMoniLog.g:155:1: ( ruleLocalAppender EOF )
            // InternalMoniLog.g:156:1: ruleLocalAppender EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLocalAppender();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalAppender"


    // $ANTLR start "ruleLocalAppender"
    // InternalMoniLog.g:163:1: ruleLocalAppender : ( ( rule__LocalAppender__Group__0 ) ) ;
    public final void ruleLocalAppender() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:167:2: ( ( ( rule__LocalAppender__Group__0 ) ) )
            // InternalMoniLog.g:168:2: ( ( rule__LocalAppender__Group__0 ) )
            {
            // InternalMoniLog.g:168:2: ( ( rule__LocalAppender__Group__0 ) )
            // InternalMoniLog.g:169:3: ( rule__LocalAppender__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getGroup()); 
            }
            // InternalMoniLog.g:170:3: ( rule__LocalAppender__Group__0 )
            // InternalMoniLog.g:170:4: rule__LocalAppender__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalAppender"


    // $ANTLR start "entryRuleExternalAppender"
    // InternalMoniLog.g:179:1: entryRuleExternalAppender : ruleExternalAppender EOF ;
    public final void entryRuleExternalAppender() throws RecognitionException {
        try {
            // InternalMoniLog.g:180:1: ( ruleExternalAppender EOF )
            // InternalMoniLog.g:181:1: ruleExternalAppender EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExternalAppender();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExternalAppender"


    // $ANTLR start "ruleExternalAppender"
    // InternalMoniLog.g:188:1: ruleExternalAppender : ( ( rule__ExternalAppender__Group__0 ) ) ;
    public final void ruleExternalAppender() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:192:2: ( ( ( rule__ExternalAppender__Group__0 ) ) )
            // InternalMoniLog.g:193:2: ( ( rule__ExternalAppender__Group__0 ) )
            {
            // InternalMoniLog.g:193:2: ( ( rule__ExternalAppender__Group__0 ) )
            // InternalMoniLog.g:194:3: ( rule__ExternalAppender__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getGroup()); 
            }
            // InternalMoniLog.g:195:3: ( rule__ExternalAppender__Group__0 )
            // InternalMoniLog.g:195:4: rule__ExternalAppender__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExternalAppender"


    // $ANTLR start "entryRuleLayout"
    // InternalMoniLog.g:204:1: entryRuleLayout : ruleLayout EOF ;
    public final void entryRuleLayout() throws RecognitionException {
        try {
            // InternalMoniLog.g:205:1: ( ruleLayout EOF )
            // InternalMoniLog.g:206:1: ruleLayout EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLayout();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLayout"


    // $ANTLR start "ruleLayout"
    // InternalMoniLog.g:213:1: ruleLayout : ( ( rule__Layout__Alternatives ) ) ;
    public final void ruleLayout() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:217:2: ( ( ( rule__Layout__Alternatives ) ) )
            // InternalMoniLog.g:218:2: ( ( rule__Layout__Alternatives ) )
            {
            // InternalMoniLog.g:218:2: ( ( rule__Layout__Alternatives ) )
            // InternalMoniLog.g:219:3: ( rule__Layout__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:220:3: ( rule__Layout__Alternatives )
            // InternalMoniLog.g:220:4: rule__Layout__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Layout__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLayout"


    // $ANTLR start "entryRuleLocalLayout"
    // InternalMoniLog.g:229:1: entryRuleLocalLayout : ruleLocalLayout EOF ;
    public final void entryRuleLocalLayout() throws RecognitionException {
        try {
            // InternalMoniLog.g:230:1: ( ruleLocalLayout EOF )
            // InternalMoniLog.g:231:1: ruleLocalLayout EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLocalLayout();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalLayout"


    // $ANTLR start "ruleLocalLayout"
    // InternalMoniLog.g:238:1: ruleLocalLayout : ( ( rule__LocalLayout__Group__0 ) ) ;
    public final void ruleLocalLayout() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:242:2: ( ( ( rule__LocalLayout__Group__0 ) ) )
            // InternalMoniLog.g:243:2: ( ( rule__LocalLayout__Group__0 ) )
            {
            // InternalMoniLog.g:243:2: ( ( rule__LocalLayout__Group__0 ) )
            // InternalMoniLog.g:244:3: ( rule__LocalLayout__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getGroup()); 
            }
            // InternalMoniLog.g:245:3: ( rule__LocalLayout__Group__0 )
            // InternalMoniLog.g:245:4: rule__LocalLayout__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalLayout"


    // $ANTLR start "entryRuleExternalLayout"
    // InternalMoniLog.g:254:1: entryRuleExternalLayout : ruleExternalLayout EOF ;
    public final void entryRuleExternalLayout() throws RecognitionException {
        try {
            // InternalMoniLog.g:255:1: ( ruleExternalLayout EOF )
            // InternalMoniLog.g:256:1: ruleExternalLayout EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExternalLayout();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExternalLayout"


    // $ANTLR start "ruleExternalLayout"
    // InternalMoniLog.g:263:1: ruleExternalLayout : ( ( rule__ExternalLayout__Group__0 ) ) ;
    public final void ruleExternalLayout() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:267:2: ( ( ( rule__ExternalLayout__Group__0 ) ) )
            // InternalMoniLog.g:268:2: ( ( rule__ExternalLayout__Group__0 ) )
            {
            // InternalMoniLog.g:268:2: ( ( rule__ExternalLayout__Group__0 ) )
            // InternalMoniLog.g:269:3: ( rule__ExternalLayout__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getGroup()); 
            }
            // InternalMoniLog.g:270:3: ( rule__ExternalLayout__Group__0 )
            // InternalMoniLog.g:270:4: rule__ExternalLayout__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExternalLayout"


    // $ANTLR start "entryRuleParameterDeclVarArgs"
    // InternalMoniLog.g:279:1: entryRuleParameterDeclVarArgs : ruleParameterDeclVarArgs EOF ;
    public final void entryRuleParameterDeclVarArgs() throws RecognitionException {
        try {
            // InternalMoniLog.g:280:1: ( ruleParameterDeclVarArgs EOF )
            // InternalMoniLog.g:281:1: ruleParameterDeclVarArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclVarArgs"


    // $ANTLR start "ruleParameterDeclVarArgs"
    // InternalMoniLog.g:288:1: ruleParameterDeclVarArgs : ( ( rule__ParameterDeclVarArgs__Group__0 ) ) ;
    public final void ruleParameterDeclVarArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:292:2: ( ( ( rule__ParameterDeclVarArgs__Group__0 ) ) )
            // InternalMoniLog.g:293:2: ( ( rule__ParameterDeclVarArgs__Group__0 ) )
            {
            // InternalMoniLog.g:293:2: ( ( rule__ParameterDeclVarArgs__Group__0 ) )
            // InternalMoniLog.g:294:3: ( rule__ParameterDeclVarArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getGroup()); 
            }
            // InternalMoniLog.g:295:3: ( rule__ParameterDeclVarArgs__Group__0 )
            // InternalMoniLog.g:295:4: rule__ParameterDeclVarArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclVarArgs"


    // $ANTLR start "entryRuleParameterDeclNoVarArgs"
    // InternalMoniLog.g:304:1: entryRuleParameterDeclNoVarArgs : ruleParameterDeclNoVarArgs EOF ;
    public final void entryRuleParameterDeclNoVarArgs() throws RecognitionException {
        try {
            // InternalMoniLog.g:305:1: ( ruleParameterDeclNoVarArgs EOF )
            // InternalMoniLog.g:306:1: ruleParameterDeclNoVarArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterDeclNoVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclNoVarArgs"


    // $ANTLR start "ruleParameterDeclNoVarArgs"
    // InternalMoniLog.g:313:1: ruleParameterDeclNoVarArgs : ( ( rule__ParameterDeclNoVarArgs__Group__0 ) ) ;
    public final void ruleParameterDeclNoVarArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:317:2: ( ( ( rule__ParameterDeclNoVarArgs__Group__0 ) ) )
            // InternalMoniLog.g:318:2: ( ( rule__ParameterDeclNoVarArgs__Group__0 ) )
            {
            // InternalMoniLog.g:318:2: ( ( rule__ParameterDeclNoVarArgs__Group__0 ) )
            // InternalMoniLog.g:319:3: ( rule__ParameterDeclNoVarArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup()); 
            }
            // InternalMoniLog.g:320:3: ( rule__ParameterDeclNoVarArgs__Group__0 )
            // InternalMoniLog.g:320:4: rule__ParameterDeclNoVarArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclNoVarArgs"


    // $ANTLR start "entryRuleMoniLogger"
    // InternalMoniLog.g:329:1: entryRuleMoniLogger : ruleMoniLogger EOF ;
    public final void entryRuleMoniLogger() throws RecognitionException {
        try {
            // InternalMoniLog.g:330:1: ( ruleMoniLogger EOF )
            // InternalMoniLog.g:331:1: ruleMoniLogger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMoniLogger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMoniLogger"


    // $ANTLR start "ruleMoniLogger"
    // InternalMoniLog.g:338:1: ruleMoniLogger : ( ( rule__MoniLogger__Group__0 ) ) ;
    public final void ruleMoniLogger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:342:2: ( ( ( rule__MoniLogger__Group__0 ) ) )
            // InternalMoniLog.g:343:2: ( ( rule__MoniLogger__Group__0 ) )
            {
            // InternalMoniLog.g:343:2: ( ( rule__MoniLogger__Group__0 ) )
            // InternalMoniLog.g:344:3: ( rule__MoniLogger__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup()); 
            }
            // InternalMoniLog.g:345:3: ( rule__MoniLogger__Group__0 )
            // InternalMoniLog.g:345:4: rule__MoniLogger__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMoniLogger"


    // $ANTLR start "entryRuleParameter"
    // InternalMoniLog.g:354:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        try {
            // InternalMoniLog.g:355:1: ( ruleParameter EOF )
            // InternalMoniLog.g:356:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalMoniLog.g:363:1: ruleParameter : ( ( rule__Parameter__NameAssignment ) ) ;
    public final void ruleParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:367:2: ( ( ( rule__Parameter__NameAssignment ) ) )
            // InternalMoniLog.g:368:2: ( ( rule__Parameter__NameAssignment ) )
            {
            // InternalMoniLog.g:368:2: ( ( rule__Parameter__NameAssignment ) )
            // InternalMoniLog.g:369:3: ( rule__Parameter__NameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getNameAssignment()); 
            }
            // InternalMoniLog.g:370:3: ( rule__Parameter__NameAssignment )
            // InternalMoniLog.g:370:4: rule__Parameter__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Parameter__NameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleEvent"
    // InternalMoniLog.g:379:1: entryRuleEvent : ruleEvent EOF ;
    public final void entryRuleEvent() throws RecognitionException {
        try {
            // InternalMoniLog.g:380:1: ( ruleEvent EOF )
            // InternalMoniLog.g:381:1: ruleEvent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEvent"


    // $ANTLR start "ruleEvent"
    // InternalMoniLog.g:388:1: ruleEvent : ( ( rule__Event__Alternatives ) ) ;
    public final void ruleEvent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:392:2: ( ( ( rule__Event__Alternatives ) ) )
            // InternalMoniLog.g:393:2: ( ( rule__Event__Alternatives ) )
            {
            // InternalMoniLog.g:393:2: ( ( rule__Event__Alternatives ) )
            // InternalMoniLog.g:394:3: ( rule__Event__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:395:3: ( rule__Event__Alternatives )
            // InternalMoniLog.g:395:4: rule__Event__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Event__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEvent"


    // $ANTLR start "entryRuleASTEventKind"
    // InternalMoniLog.g:404:1: entryRuleASTEventKind : ruleASTEventKind EOF ;
    public final void entryRuleASTEventKind() throws RecognitionException {
        try {
            // InternalMoniLog.g:405:1: ( ruleASTEventKind EOF )
            // InternalMoniLog.g:406:1: ruleASTEventKind EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleASTEventKind();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleASTEventKind"


    // $ANTLR start "ruleASTEventKind"
    // InternalMoniLog.g:413:1: ruleASTEventKind : ( ( rule__ASTEventKind__Alternatives ) ) ;
    public final void ruleASTEventKind() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:417:2: ( ( ( rule__ASTEventKind__Alternatives ) ) )
            // InternalMoniLog.g:418:2: ( ( rule__ASTEventKind__Alternatives ) )
            {
            // InternalMoniLog.g:418:2: ( ( rule__ASTEventKind__Alternatives ) )
            // InternalMoniLog.g:419:3: ( rule__ASTEventKind__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:420:3: ( rule__ASTEventKind__Alternatives )
            // InternalMoniLog.g:420:4: rule__ASTEventKind__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ASTEventKind__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleASTEventKind"


    // $ANTLR start "entryRuleCondition"
    // InternalMoniLog.g:429:1: entryRuleCondition : ruleCondition EOF ;
    public final void entryRuleCondition() throws RecognitionException {
        try {
            // InternalMoniLog.g:430:1: ( ruleCondition EOF )
            // InternalMoniLog.g:431:1: ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalMoniLog.g:438:1: ruleCondition : ( ( rule__Condition__ExpressionAssignment ) ) ;
    public final void ruleCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:442:2: ( ( ( rule__Condition__ExpressionAssignment ) ) )
            // InternalMoniLog.g:443:2: ( ( rule__Condition__ExpressionAssignment ) )
            {
            // InternalMoniLog.g:443:2: ( ( rule__Condition__ExpressionAssignment ) )
            // InternalMoniLog.g:444:3: ( rule__Condition__ExpressionAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionAccess().getExpressionAssignment()); 
            }
            // InternalMoniLog.g:445:3: ( rule__Condition__ExpressionAssignment )
            // InternalMoniLog.g:445:4: rule__Condition__ExpressionAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Condition__ExpressionAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionAccess().getExpressionAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleTemporalPattern"
    // InternalMoniLog.g:454:1: entryRuleTemporalPattern : ruleTemporalPattern EOF ;
    public final void entryRuleTemporalPattern() throws RecognitionException {
        try {
            // InternalMoniLog.g:455:1: ( ruleTemporalPattern EOF )
            // InternalMoniLog.g:456:1: ruleTemporalPattern EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTemporalPattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemporalPattern"


    // $ANTLR start "ruleTemporalPattern"
    // InternalMoniLog.g:463:1: ruleTemporalPattern : ( ( rule__TemporalPattern__Group__0 ) ) ;
    public final void ruleTemporalPattern() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:467:2: ( ( ( rule__TemporalPattern__Group__0 ) ) )
            // InternalMoniLog.g:468:2: ( ( rule__TemporalPattern__Group__0 ) )
            {
            // InternalMoniLog.g:468:2: ( ( rule__TemporalPattern__Group__0 ) )
            // InternalMoniLog.g:469:3: ( rule__TemporalPattern__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternAccess().getGroup()); 
            }
            // InternalMoniLog.g:470:3: ( rule__TemporalPattern__Group__0 )
            // InternalMoniLog.g:470:4: rule__TemporalPattern__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TemporalPattern__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemporalPattern"


    // $ANTLR start "entryRulePattern"
    // InternalMoniLog.g:479:1: entryRulePattern : rulePattern EOF ;
    public final void entryRulePattern() throws RecognitionException {
        try {
            // InternalMoniLog.g:480:1: ( rulePattern EOF )
            // InternalMoniLog.g:481:1: rulePattern EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePattern"


    // $ANTLR start "rulePattern"
    // InternalMoniLog.g:488:1: rulePattern : ( ( rule__Pattern__Alternatives ) ) ;
    public final void rulePattern() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:492:2: ( ( ( rule__Pattern__Alternatives ) ) )
            // InternalMoniLog.g:493:2: ( ( rule__Pattern__Alternatives ) )
            {
            // InternalMoniLog.g:493:2: ( ( rule__Pattern__Alternatives ) )
            // InternalMoniLog.g:494:3: ( rule__Pattern__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:495:3: ( rule__Pattern__Alternatives )
            // InternalMoniLog.g:495:4: rule__Pattern__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePattern"


    // $ANTLR start "entryRuleBoundType"
    // InternalMoniLog.g:504:1: entryRuleBoundType : ruleBoundType EOF ;
    public final void entryRuleBoundType() throws RecognitionException {
        try {
            // InternalMoniLog.g:505:1: ( ruleBoundType EOF )
            // InternalMoniLog.g:506:1: ruleBoundType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoundTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoundType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoundTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoundType"


    // $ANTLR start "ruleBoundType"
    // InternalMoniLog.g:513:1: ruleBoundType : ( ( rule__BoundType__Alternatives ) ) ;
    public final void ruleBoundType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:517:2: ( ( ( rule__BoundType__Alternatives ) ) )
            // InternalMoniLog.g:518:2: ( ( rule__BoundType__Alternatives ) )
            {
            // InternalMoniLog.g:518:2: ( ( rule__BoundType__Alternatives ) )
            // InternalMoniLog.g:519:3: ( rule__BoundType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoundTypeAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:520:3: ( rule__BoundType__Alternatives )
            // InternalMoniLog.g:520:4: rule__BoundType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoundType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoundTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoundType"


    // $ANTLR start "entryRuleExactBound"
    // InternalMoniLog.g:529:1: entryRuleExactBound : ruleExactBound EOF ;
    public final void entryRuleExactBound() throws RecognitionException {
        try {
            // InternalMoniLog.g:530:1: ( ruleExactBound EOF )
            // InternalMoniLog.g:531:1: ruleExactBound EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExactBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExactBound();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExactBoundRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExactBound"


    // $ANTLR start "ruleExactBound"
    // InternalMoniLog.g:538:1: ruleExactBound : ( ( rule__ExactBound__NAssignment ) ) ;
    public final void ruleExactBound() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:542:2: ( ( ( rule__ExactBound__NAssignment ) ) )
            // InternalMoniLog.g:543:2: ( ( rule__ExactBound__NAssignment ) )
            {
            // InternalMoniLog.g:543:2: ( ( rule__ExactBound__NAssignment ) )
            // InternalMoniLog.g:544:3: ( rule__ExactBound__NAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExactBoundAccess().getNAssignment()); 
            }
            // InternalMoniLog.g:545:3: ( rule__ExactBound__NAssignment )
            // InternalMoniLog.g:545:4: rule__ExactBound__NAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExactBound__NAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExactBoundAccess().getNAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExactBound"


    // $ANTLR start "entryRuleLowerBound"
    // InternalMoniLog.g:554:1: entryRuleLowerBound : ruleLowerBound EOF ;
    public final void entryRuleLowerBound() throws RecognitionException {
        try {
            // InternalMoniLog.g:555:1: ( ruleLowerBound EOF )
            // InternalMoniLog.g:556:1: ruleLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLowerBound();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLowerBoundRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLowerBound"


    // $ANTLR start "ruleLowerBound"
    // InternalMoniLog.g:563:1: ruleLowerBound : ( ( rule__LowerBound__Group__0 ) ) ;
    public final void ruleLowerBound() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:567:2: ( ( ( rule__LowerBound__Group__0 ) ) )
            // InternalMoniLog.g:568:2: ( ( rule__LowerBound__Group__0 ) )
            {
            // InternalMoniLog.g:568:2: ( ( rule__LowerBound__Group__0 ) )
            // InternalMoniLog.g:569:3: ( rule__LowerBound__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLowerBoundAccess().getGroup()); 
            }
            // InternalMoniLog.g:570:3: ( rule__LowerBound__Group__0 )
            // InternalMoniLog.g:570:4: rule__LowerBound__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LowerBound__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLowerBoundAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLowerBound"


    // $ANTLR start "entryRuleUpperBound"
    // InternalMoniLog.g:579:1: entryRuleUpperBound : ruleUpperBound EOF ;
    public final void entryRuleUpperBound() throws RecognitionException {
        try {
            // InternalMoniLog.g:580:1: ( ruleUpperBound EOF )
            // InternalMoniLog.g:581:1: ruleUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUpperBound();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUpperBoundRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUpperBound"


    // $ANTLR start "ruleUpperBound"
    // InternalMoniLog.g:588:1: ruleUpperBound : ( ( rule__UpperBound__Group__0 ) ) ;
    public final void ruleUpperBound() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:592:2: ( ( ( rule__UpperBound__Group__0 ) ) )
            // InternalMoniLog.g:593:2: ( ( rule__UpperBound__Group__0 ) )
            {
            // InternalMoniLog.g:593:2: ( ( rule__UpperBound__Group__0 ) )
            // InternalMoniLog.g:594:3: ( rule__UpperBound__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUpperBoundAccess().getGroup()); 
            }
            // InternalMoniLog.g:595:3: ( rule__UpperBound__Group__0 )
            // InternalMoniLog.g:595:4: rule__UpperBound__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UpperBound__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUpperBoundAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUpperBound"


    // $ANTLR start "entryRuleScope"
    // InternalMoniLog.g:604:1: entryRuleScope : ruleScope EOF ;
    public final void entryRuleScope() throws RecognitionException {
        try {
            // InternalMoniLog.g:605:1: ( ruleScope EOF )
            // InternalMoniLog.g:606:1: ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScope();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalMoniLog.g:613:1: ruleScope : ( ( rule__Scope__Alternatives ) ) ;
    public final void ruleScope() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:617:2: ( ( ( rule__Scope__Alternatives ) ) )
            // InternalMoniLog.g:618:2: ( ( rule__Scope__Alternatives ) )
            {
            // InternalMoniLog.g:618:2: ( ( rule__Scope__Alternatives ) )
            // InternalMoniLog.g:619:3: ( rule__Scope__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:620:3: ( rule__Scope__Alternatives )
            // InternalMoniLog.g:620:4: rule__Scope__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleAction"
    // InternalMoniLog.g:629:1: entryRuleAction : ruleAction EOF ;
    public final void entryRuleAction() throws RecognitionException {
        try {
            // InternalMoniLog.g:630:1: ( ruleAction EOF )
            // InternalMoniLog.g:631:1: ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalMoniLog.g:638:1: ruleAction : ( ( rule__Action__Alternatives ) ) ;
    public final void ruleAction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:642:2: ( ( ( rule__Action__Alternatives ) ) )
            // InternalMoniLog.g:643:2: ( ( rule__Action__Alternatives ) )
            {
            // InternalMoniLog.g:643:2: ( ( rule__Action__Alternatives ) )
            // InternalMoniLog.g:644:3: ( rule__Action__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActionAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:645:3: ( rule__Action__Alternatives )
            // InternalMoniLog.g:645:4: rule__Action__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Action__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleAppenderCall"
    // InternalMoniLog.g:654:1: entryRuleAppenderCall : ruleAppenderCall EOF ;
    public final void entryRuleAppenderCall() throws RecognitionException {
        try {
            // InternalMoniLog.g:655:1: ( ruleAppenderCall EOF )
            // InternalMoniLog.g:656:1: ruleAppenderCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAppenderCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAppenderCall"


    // $ANTLR start "ruleAppenderCall"
    // InternalMoniLog.g:663:1: ruleAppenderCall : ( ( rule__AppenderCall__Group__0 ) ) ;
    public final void ruleAppenderCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:667:2: ( ( ( rule__AppenderCall__Group__0 ) ) )
            // InternalMoniLog.g:668:2: ( ( rule__AppenderCall__Group__0 ) )
            {
            // InternalMoniLog.g:668:2: ( ( rule__AppenderCall__Group__0 ) )
            // InternalMoniLog.g:669:3: ( rule__AppenderCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getGroup()); 
            }
            // InternalMoniLog.g:670:3: ( rule__AppenderCall__Group__0 )
            // InternalMoniLog.g:670:4: rule__AppenderCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAppenderCall"


    // $ANTLR start "entryRuleLayoutCall"
    // InternalMoniLog.g:679:1: entryRuleLayoutCall : ruleLayoutCall EOF ;
    public final void entryRuleLayoutCall() throws RecognitionException {
        try {
            // InternalMoniLog.g:680:1: ( ruleLayoutCall EOF )
            // InternalMoniLog.g:681:1: ruleLayoutCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLayoutCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLayoutCall"


    // $ANTLR start "ruleLayoutCall"
    // InternalMoniLog.g:688:1: ruleLayoutCall : ( ( rule__LayoutCall__Group__0 ) ) ;
    public final void ruleLayoutCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:692:2: ( ( ( rule__LayoutCall__Group__0 ) ) )
            // InternalMoniLog.g:693:2: ( ( rule__LayoutCall__Group__0 ) )
            {
            // InternalMoniLog.g:693:2: ( ( rule__LayoutCall__Group__0 ) )
            // InternalMoniLog.g:694:3: ( rule__LayoutCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getGroup()); 
            }
            // InternalMoniLog.g:695:3: ( rule__LayoutCall__Group__0 )
            // InternalMoniLog.g:695:4: rule__LayoutCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLayoutCall"


    // $ANTLR start "entryRuleEmitEvent"
    // InternalMoniLog.g:704:1: entryRuleEmitEvent : ruleEmitEvent EOF ;
    public final void entryRuleEmitEvent() throws RecognitionException {
        try {
            // InternalMoniLog.g:705:1: ( ruleEmitEvent EOF )
            // InternalMoniLog.g:706:1: ruleEmitEvent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEmitEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEmitEvent"


    // $ANTLR start "ruleEmitEvent"
    // InternalMoniLog.g:713:1: ruleEmitEvent : ( ( rule__EmitEvent__Group__0 ) ) ;
    public final void ruleEmitEvent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:717:2: ( ( ( rule__EmitEvent__Group__0 ) ) )
            // InternalMoniLog.g:718:2: ( ( rule__EmitEvent__Group__0 ) )
            {
            // InternalMoniLog.g:718:2: ( ( rule__EmitEvent__Group__0 ) )
            // InternalMoniLog.g:719:3: ( rule__EmitEvent__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getGroup()); 
            }
            // InternalMoniLog.g:720:3: ( rule__EmitEvent__Group__0 )
            // InternalMoniLog.g:720:4: rule__EmitEvent__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEmitEvent"


    // $ANTLR start "entryRuleMoniloggerCall"
    // InternalMoniLog.g:729:1: entryRuleMoniloggerCall : ruleMoniloggerCall EOF ;
    public final void entryRuleMoniloggerCall() throws RecognitionException {
        try {
            // InternalMoniLog.g:730:1: ( ruleMoniloggerCall EOF )
            // InternalMoniLog.g:731:1: ruleMoniloggerCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMoniloggerCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMoniloggerCall"


    // $ANTLR start "ruleMoniloggerCall"
    // InternalMoniLog.g:738:1: ruleMoniloggerCall : ( ( rule__MoniloggerCall__Alternatives ) ) ;
    public final void ruleMoniloggerCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:742:2: ( ( ( rule__MoniloggerCall__Alternatives ) ) )
            // InternalMoniLog.g:743:2: ( ( rule__MoniloggerCall__Alternatives ) )
            {
            // InternalMoniLog.g:743:2: ( ( rule__MoniloggerCall__Alternatives ) )
            // InternalMoniLog.g:744:3: ( rule__MoniloggerCall__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:745:3: ( rule__MoniloggerCall__Alternatives )
            // InternalMoniLog.g:745:4: rule__MoniloggerCall__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMoniloggerCall"


    // $ANTLR start "entryRuleStreamEvent"
    // InternalMoniLog.g:754:1: entryRuleStreamEvent : ruleStreamEvent EOF ;
    public final void entryRuleStreamEvent() throws RecognitionException {
        try {
            // InternalMoniLog.g:755:1: ( ruleStreamEvent EOF )
            // InternalMoniLog.g:756:1: ruleStreamEvent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStreamEvent"


    // $ANTLR start "ruleStreamEvent"
    // InternalMoniLog.g:763:1: ruleStreamEvent : ( ( rule__StreamEvent__Group__0 ) ) ;
    public final void ruleStreamEvent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:767:2: ( ( ( rule__StreamEvent__Group__0 ) ) )
            // InternalMoniLog.g:768:2: ( ( rule__StreamEvent__Group__0 ) )
            {
            // InternalMoniLog.g:768:2: ( ( rule__StreamEvent__Group__0 ) )
            // InternalMoniLog.g:769:3: ( rule__StreamEvent__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getGroup()); 
            }
            // InternalMoniLog.g:770:3: ( rule__StreamEvent__Group__0 )
            // InternalMoniLog.g:770:4: rule__StreamEvent__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStreamEvent"


    // $ANTLR start "entryRuleEmptyOrPropertyValue"
    // InternalMoniLog.g:779:1: entryRuleEmptyOrPropertyValue : ruleEmptyOrPropertyValue EOF ;
    public final void entryRuleEmptyOrPropertyValue() throws RecognitionException {
        try {
            // InternalMoniLog.g:780:1: ( ruleEmptyOrPropertyValue EOF )
            // InternalMoniLog.g:781:1: ruleEmptyOrPropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmptyOrPropertyValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEmptyOrPropertyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmptyOrPropertyValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEmptyOrPropertyValue"


    // $ANTLR start "ruleEmptyOrPropertyValue"
    // InternalMoniLog.g:788:1: ruleEmptyOrPropertyValue : ( ( rule__EmptyOrPropertyValue__Alternatives ) ) ;
    public final void ruleEmptyOrPropertyValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:792:2: ( ( ( rule__EmptyOrPropertyValue__Alternatives ) ) )
            // InternalMoniLog.g:793:2: ( ( rule__EmptyOrPropertyValue__Alternatives ) )
            {
            // InternalMoniLog.g:793:2: ( ( rule__EmptyOrPropertyValue__Alternatives ) )
            // InternalMoniLog.g:794:3: ( rule__EmptyOrPropertyValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmptyOrPropertyValueAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:795:3: ( rule__EmptyOrPropertyValue__Alternatives )
            // InternalMoniLog.g:795:4: rule__EmptyOrPropertyValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EmptyOrPropertyValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmptyOrPropertyValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEmptyOrPropertyValue"


    // $ANTLR start "entryRulePropertyValue"
    // InternalMoniLog.g:804:1: entryRulePropertyValue : rulePropertyValue EOF ;
    public final void entryRulePropertyValue() throws RecognitionException {
        try {
            // InternalMoniLog.g:805:1: ( rulePropertyValue EOF )
            // InternalMoniLog.g:806:1: rulePropertyValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePropertyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyValue"


    // $ANTLR start "rulePropertyValue"
    // InternalMoniLog.g:813:1: rulePropertyValue : ( ( rule__PropertyValue__Alternatives ) ) ;
    public final void rulePropertyValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:817:2: ( ( ( rule__PropertyValue__Alternatives ) ) )
            // InternalMoniLog.g:818:2: ( ( rule__PropertyValue__Alternatives ) )
            {
            // InternalMoniLog.g:818:2: ( ( rule__PropertyValue__Alternatives ) )
            // InternalMoniLog.g:819:3: ( rule__PropertyValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:820:3: ( rule__PropertyValue__Alternatives )
            // InternalMoniLog.g:820:4: rule__PropertyValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropertyValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyValue"


    // $ANTLR start "entryRuleExpression"
    // InternalMoniLog.g:829:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalMoniLog.g:830:1: ( ruleExpression EOF )
            // InternalMoniLog.g:831:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalMoniLog.g:838:1: ruleExpression : ( ( rule__Expression__Alternatives ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:842:2: ( ( ( rule__Expression__Alternatives ) ) )
            // InternalMoniLog.g:843:2: ( ( rule__Expression__Alternatives ) )
            {
            // InternalMoniLog.g:843:2: ( ( rule__Expression__Alternatives ) )
            // InternalMoniLog.g:844:3: ( rule__Expression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:845:3: ( rule__Expression__Alternatives )
            // InternalMoniLog.g:845:4: rule__Expression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleParameterReference"
    // InternalMoniLog.g:854:1: entryRuleParameterReference : ruleParameterReference EOF ;
    public final void entryRuleParameterReference() throws RecognitionException {
        try {
            // InternalMoniLog.g:855:1: ( ruleParameterReference EOF )
            // InternalMoniLog.g:856:1: ruleParameterReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterReferenceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterReference"


    // $ANTLR start "ruleParameterReference"
    // InternalMoniLog.g:863:1: ruleParameterReference : ( ( rule__ParameterReference__ParameterAssignment ) ) ;
    public final void ruleParameterReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:867:2: ( ( ( rule__ParameterReference__ParameterAssignment ) ) )
            // InternalMoniLog.g:868:2: ( ( rule__ParameterReference__ParameterAssignment ) )
            {
            // InternalMoniLog.g:868:2: ( ( rule__ParameterReference__ParameterAssignment ) )
            // InternalMoniLog.g:869:3: ( rule__ParameterReference__ParameterAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterReferenceAccess().getParameterAssignment()); 
            }
            // InternalMoniLog.g:870:3: ( rule__ParameterReference__ParameterAssignment )
            // InternalMoniLog.g:870:4: rule__ParameterReference__ParameterAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterReference__ParameterAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterReferenceAccess().getParameterAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterReference"


    // $ANTLR start "entryRuleMoniLogExpression"
    // InternalMoniLog.g:879:1: entryRuleMoniLogExpression : ruleMoniLogExpression EOF ;
    public final void entryRuleMoniLogExpression() throws RecognitionException {
        try {
            // InternalMoniLog.g:880:1: ( ruleMoniLogExpression EOF )
            // InternalMoniLog.g:881:1: ruleMoniLogExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMoniLogExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMoniLogExpression"


    // $ANTLR start "ruleMoniLogExpression"
    // InternalMoniLog.g:888:1: ruleMoniLogExpression : ( ( rule__MoniLogExpression__Group__0 ) ) ;
    public final void ruleMoniLogExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:892:2: ( ( ( rule__MoniLogExpression__Group__0 ) ) )
            // InternalMoniLog.g:893:2: ( ( rule__MoniLogExpression__Group__0 ) )
            {
            // InternalMoniLog.g:893:2: ( ( rule__MoniLogExpression__Group__0 ) )
            // InternalMoniLog.g:894:3: ( rule__MoniLogExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionAccess().getGroup()); 
            }
            // InternalMoniLog.g:895:3: ( rule__MoniLogExpression__Group__0 )
            // InternalMoniLog.g:895:4: rule__MoniLogExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMoniLogExpression"


    // $ANTLR start "entryRuleLanguageValue"
    // InternalMoniLog.g:904:1: entryRuleLanguageValue : ruleLanguageValue EOF ;
    public final void entryRuleLanguageValue() throws RecognitionException {
        try {
            // InternalMoniLog.g:905:1: ( ruleLanguageValue EOF )
            // InternalMoniLog.g:906:1: ruleLanguageValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLanguageValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageValue"


    // $ANTLR start "ruleLanguageValue"
    // InternalMoniLog.g:913:1: ruleLanguageValue : ( ( rule__LanguageValue__Group__0 ) ) ;
    public final void ruleLanguageValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:917:2: ( ( ( rule__LanguageValue__Group__0 ) ) )
            // InternalMoniLog.g:918:2: ( ( rule__LanguageValue__Group__0 ) )
            {
            // InternalMoniLog.g:918:2: ( ( rule__LanguageValue__Group__0 ) )
            // InternalMoniLog.g:919:3: ( rule__LanguageValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getGroup()); 
            }
            // InternalMoniLog.g:920:3: ( rule__LanguageValue__Group__0 )
            // InternalMoniLog.g:920:4: rule__LanguageValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LanguageValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageValue"


    // $ANTLR start "entryRuleLanguageExpression"
    // InternalMoniLog.g:929:1: entryRuleLanguageExpression : ruleLanguageExpression EOF ;
    public final void entryRuleLanguageExpression() throws RecognitionException {
        try {
            // InternalMoniLog.g:930:1: ( ruleLanguageExpression EOF )
            // InternalMoniLog.g:931:1: ruleLanguageExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLanguageExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageExpression"


    // $ANTLR start "ruleLanguageExpression"
    // InternalMoniLog.g:938:1: ruleLanguageExpression : ( ( rule__LanguageExpression__ExpressionAssignment ) ) ;
    public final void ruleLanguageExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:942:2: ( ( ( rule__LanguageExpression__ExpressionAssignment ) ) )
            // InternalMoniLog.g:943:2: ( ( rule__LanguageExpression__ExpressionAssignment ) )
            {
            // InternalMoniLog.g:943:2: ( ( rule__LanguageExpression__ExpressionAssignment ) )
            // InternalMoniLog.g:944:3: ( rule__LanguageExpression__ExpressionAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment()); 
            }
            // InternalMoniLog.g:945:3: ( rule__LanguageExpression__ExpressionAssignment )
            // InternalMoniLog.g:945:4: rule__LanguageExpression__ExpressionAssignment
            {
            pushFollow(FOLLOW_2);
            rule__LanguageExpression__ExpressionAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageExpressionAccess().getExpressionAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageExpression"


    // $ANTLR start "entryRuleLanguageCall"
    // InternalMoniLog.g:954:1: entryRuleLanguageCall : ruleLanguageCall EOF ;
    public final void entryRuleLanguageCall() throws RecognitionException {
        try {
            // InternalMoniLog.g:955:1: ( ruleLanguageCall EOF )
            // InternalMoniLog.g:956:1: ruleLanguageCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLanguageCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageCall"


    // $ANTLR start "ruleLanguageCall"
    // InternalMoniLog.g:963:1: ruleLanguageCall : ( ( rule__LanguageCall__Group__0 ) ) ;
    public final void ruleLanguageCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:967:2: ( ( ( rule__LanguageCall__Group__0 ) ) )
            // InternalMoniLog.g:968:2: ( ( rule__LanguageCall__Group__0 ) )
            {
            // InternalMoniLog.g:968:2: ( ( rule__LanguageCall__Group__0 ) )
            // InternalMoniLog.g:969:3: ( rule__LanguageCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getGroup()); 
            }
            // InternalMoniLog.g:970:3: ( rule__LanguageCall__Group__0 )
            // InternalMoniLog.g:970:4: rule__LanguageCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageCall"


    // $ANTLR start "entryRuleSimpleExpression"
    // InternalMoniLog.g:979:1: entryRuleSimpleExpression : ruleSimpleExpression EOF ;
    public final void entryRuleSimpleExpression() throws RecognitionException {
        try {
            // InternalMoniLog.g:980:1: ( ruleSimpleExpression EOF )
            // InternalMoniLog.g:981:1: ruleSimpleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleExpression"


    // $ANTLR start "ruleSimpleExpression"
    // InternalMoniLog.g:988:1: ruleSimpleExpression : ( ruleContractedIf ) ;
    public final void ruleSimpleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:992:2: ( ( ruleContractedIf ) )
            // InternalMoniLog.g:993:2: ( ruleContractedIf )
            {
            // InternalMoniLog.g:993:2: ( ruleContractedIf )
            // InternalMoniLog.g:994:3: ruleContractedIf
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleExpressionAccess().getContractedIfParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleContractedIf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleExpressionAccess().getContractedIfParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleExpression"


    // $ANTLR start "entryRuleContractedIf"
    // InternalMoniLog.g:1004:1: entryRuleContractedIf : ruleContractedIf EOF ;
    public final void entryRuleContractedIf() throws RecognitionException {
        try {
            // InternalMoniLog.g:1005:1: ( ruleContractedIf EOF )
            // InternalMoniLog.g:1006:1: ruleContractedIf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleContractedIf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleContractedIf"


    // $ANTLR start "ruleContractedIf"
    // InternalMoniLog.g:1013:1: ruleContractedIf : ( ( rule__ContractedIf__Group__0 ) ) ;
    public final void ruleContractedIf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1017:2: ( ( ( rule__ContractedIf__Group__0 ) ) )
            // InternalMoniLog.g:1018:2: ( ( rule__ContractedIf__Group__0 ) )
            {
            // InternalMoniLog.g:1018:2: ( ( rule__ContractedIf__Group__0 ) )
            // InternalMoniLog.g:1019:3: ( rule__ContractedIf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getGroup()); 
            }
            // InternalMoniLog.g:1020:3: ( rule__ContractedIf__Group__0 )
            // InternalMoniLog.g:1020:4: rule__ContractedIf__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleContractedIf"


    // $ANTLR start "entryRuleOr"
    // InternalMoniLog.g:1029:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalMoniLog.g:1030:1: ( ruleOr EOF )
            // InternalMoniLog.g:1031:1: ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalMoniLog.g:1038:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1042:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalMoniLog.g:1043:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalMoniLog.g:1043:2: ( ( rule__Or__Group__0 ) )
            // InternalMoniLog.g:1044:3: ( rule__Or__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup()); 
            }
            // InternalMoniLog.g:1045:3: ( rule__Or__Group__0 )
            // InternalMoniLog.g:1045:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalMoniLog.g:1054:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalMoniLog.g:1055:1: ( ruleAnd EOF )
            // InternalMoniLog.g:1056:1: ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalMoniLog.g:1063:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1067:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalMoniLog.g:1068:2: ( ( rule__And__Group__0 ) )
            {
            // InternalMoniLog.g:1068:2: ( ( rule__And__Group__0 ) )
            // InternalMoniLog.g:1069:3: ( rule__And__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup()); 
            }
            // InternalMoniLog.g:1070:3: ( rule__And__Group__0 )
            // InternalMoniLog.g:1070:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalMoniLog.g:1079:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalMoniLog.g:1080:1: ( ruleEquality EOF )
            // InternalMoniLog.g:1081:1: ruleEquality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalMoniLog.g:1088:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1092:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalMoniLog.g:1093:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalMoniLog.g:1093:2: ( ( rule__Equality__Group__0 ) )
            // InternalMoniLog.g:1094:3: ( rule__Equality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup()); 
            }
            // InternalMoniLog.g:1095:3: ( rule__Equality__Group__0 )
            // InternalMoniLog.g:1095:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalMoniLog.g:1104:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalMoniLog.g:1105:1: ( ruleComparison EOF )
            // InternalMoniLog.g:1106:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalMoniLog.g:1113:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1117:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalMoniLog.g:1118:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalMoniLog.g:1118:2: ( ( rule__Comparison__Group__0 ) )
            // InternalMoniLog.g:1119:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalMoniLog.g:1120:3: ( rule__Comparison__Group__0 )
            // InternalMoniLog.g:1120:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRulePlusOrMinus"
    // InternalMoniLog.g:1129:1: entryRulePlusOrMinus : rulePlusOrMinus EOF ;
    public final void entryRulePlusOrMinus() throws RecognitionException {
        try {
            // InternalMoniLog.g:1130:1: ( rulePlusOrMinus EOF )
            // InternalMoniLog.g:1131:1: rulePlusOrMinus EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusOrMinus"


    // $ANTLR start "rulePlusOrMinus"
    // InternalMoniLog.g:1138:1: rulePlusOrMinus : ( ( rule__PlusOrMinus__Group__0 ) ) ;
    public final void rulePlusOrMinus() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1142:2: ( ( ( rule__PlusOrMinus__Group__0 ) ) )
            // InternalMoniLog.g:1143:2: ( ( rule__PlusOrMinus__Group__0 ) )
            {
            // InternalMoniLog.g:1143:2: ( ( rule__PlusOrMinus__Group__0 ) )
            // InternalMoniLog.g:1144:3: ( rule__PlusOrMinus__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }
            // InternalMoniLog.g:1145:3: ( rule__PlusOrMinus__Group__0 )
            // InternalMoniLog.g:1145:4: rule__PlusOrMinus__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusOrMinus"


    // $ANTLR start "entryRuleMulOrDiv"
    // InternalMoniLog.g:1154:1: entryRuleMulOrDiv : ruleMulOrDiv EOF ;
    public final void entryRuleMulOrDiv() throws RecognitionException {
        try {
            // InternalMoniLog.g:1155:1: ( ruleMulOrDiv EOF )
            // InternalMoniLog.g:1156:1: ruleMulOrDiv EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMulOrDiv"


    // $ANTLR start "ruleMulOrDiv"
    // InternalMoniLog.g:1163:1: ruleMulOrDiv : ( ( rule__MulOrDiv__Group__0 ) ) ;
    public final void ruleMulOrDiv() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1167:2: ( ( ( rule__MulOrDiv__Group__0 ) ) )
            // InternalMoniLog.g:1168:2: ( ( rule__MulOrDiv__Group__0 ) )
            {
            // InternalMoniLog.g:1168:2: ( ( rule__MulOrDiv__Group__0 ) )
            // InternalMoniLog.g:1169:3: ( rule__MulOrDiv__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup()); 
            }
            // InternalMoniLog.g:1170:3: ( rule__MulOrDiv__Group__0 )
            // InternalMoniLog.g:1170:4: rule__MulOrDiv__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulOrDiv"


    // $ANTLR start "entryRuleModulo"
    // InternalMoniLog.g:1179:1: entryRuleModulo : ruleModulo EOF ;
    public final void entryRuleModulo() throws RecognitionException {
        try {
            // InternalMoniLog.g:1180:1: ( ruleModulo EOF )
            // InternalMoniLog.g:1181:1: ruleModulo EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModulo();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModulo"


    // $ANTLR start "ruleModulo"
    // InternalMoniLog.g:1188:1: ruleModulo : ( ( rule__Modulo__Group__0 ) ) ;
    public final void ruleModulo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1192:2: ( ( ( rule__Modulo__Group__0 ) ) )
            // InternalMoniLog.g:1193:2: ( ( rule__Modulo__Group__0 ) )
            {
            // InternalMoniLog.g:1193:2: ( ( rule__Modulo__Group__0 ) )
            // InternalMoniLog.g:1194:3: ( rule__Modulo__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getGroup()); 
            }
            // InternalMoniLog.g:1195:3: ( rule__Modulo__Group__0 )
            // InternalMoniLog.g:1195:4: rule__Modulo__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Modulo__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModulo"


    // $ANTLR start "entryRulePrimary"
    // InternalMoniLog.g:1204:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalMoniLog.g:1205:1: ( rulePrimary EOF )
            // InternalMoniLog.g:1206:1: rulePrimary EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalMoniLog.g:1213:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1217:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalMoniLog.g:1218:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalMoniLog.g:1218:2: ( ( rule__Primary__Alternatives ) )
            // InternalMoniLog.g:1219:3: ( rule__Primary__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:1220:3: ( rule__Primary__Alternatives )
            // InternalMoniLog.g:1220:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleAtomic"
    // InternalMoniLog.g:1229:1: entryRuleAtomic : ruleAtomic EOF ;
    public final void entryRuleAtomic() throws RecognitionException {
        try {
            // InternalMoniLog.g:1230:1: ( ruleAtomic EOF )
            // InternalMoniLog.g:1231:1: ruleAtomic EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAtomic();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtomic"


    // $ANTLR start "ruleAtomic"
    // InternalMoniLog.g:1238:1: ruleAtomic : ( ( rule__Atomic__Alternatives ) ) ;
    public final void ruleAtomic() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1242:2: ( ( ( rule__Atomic__Alternatives ) ) )
            // InternalMoniLog.g:1243:2: ( ( rule__Atomic__Alternatives ) )
            {
            // InternalMoniLog.g:1243:2: ( ( rule__Atomic__Alternatives ) )
            // InternalMoniLog.g:1244:3: ( rule__Atomic__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:1245:3: ( rule__Atomic__Alternatives )
            // InternalMoniLog.g:1245:4: rule__Atomic__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtomic"


    // $ANTLR start "entryRuleRef"
    // InternalMoniLog.g:1254:1: entryRuleRef : ruleRef EOF ;
    public final void entryRuleRef() throws RecognitionException {
        try {
            // InternalMoniLog.g:1255:1: ( ruleRef EOF )
            // InternalMoniLog.g:1256:1: ruleRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRef"


    // $ANTLR start "ruleRef"
    // InternalMoniLog.g:1263:1: ruleRef : ( ( rule__Ref__Group__0 ) ) ;
    public final void ruleRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1267:2: ( ( ( rule__Ref__Group__0 ) ) )
            // InternalMoniLog.g:1268:2: ( ( rule__Ref__Group__0 ) )
            {
            // InternalMoniLog.g:1268:2: ( ( rule__Ref__Group__0 ) )
            // InternalMoniLog.g:1269:3: ( rule__Ref__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getGroup()); 
            }
            // InternalMoniLog.g:1270:3: ( rule__Ref__Group__0 )
            // InternalMoniLog.g:1270:4: rule__Ref__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Ref__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRef"


    // $ANTLR start "entryRuleSimpleVarRef"
    // InternalMoniLog.g:1279:1: entryRuleSimpleVarRef : ruleSimpleVarRef EOF ;
    public final void entryRuleSimpleVarRef() throws RecognitionException {
        try {
            // InternalMoniLog.g:1280:1: ( ruleSimpleVarRef EOF )
            // InternalMoniLog.g:1281:1: ruleSimpleVarRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleVarRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleVarRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleVarRef"


    // $ANTLR start "ruleSimpleVarRef"
    // InternalMoniLog.g:1288:1: ruleSimpleVarRef : ( ( rule__SimpleVarRef__TargetAssignment ) ) ;
    public final void ruleSimpleVarRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1292:2: ( ( ( rule__SimpleVarRef__TargetAssignment ) ) )
            // InternalMoniLog.g:1293:2: ( ( rule__SimpleVarRef__TargetAssignment ) )
            {
            // InternalMoniLog.g:1293:2: ( ( rule__SimpleVarRef__TargetAssignment ) )
            // InternalMoniLog.g:1294:3: ( rule__SimpleVarRef__TargetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleVarRefAccess().getTargetAssignment()); 
            }
            // InternalMoniLog.g:1295:3: ( rule__SimpleVarRef__TargetAssignment )
            // InternalMoniLog.g:1295:4: rule__SimpleVarRef__TargetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleVarRef__TargetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleVarRefAccess().getTargetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleVarRef"


    // $ANTLR start "entryRuleArraySize"
    // InternalMoniLog.g:1304:1: entryRuleArraySize : ruleArraySize EOF ;
    public final void entryRuleArraySize() throws RecognitionException {
        try {
            // InternalMoniLog.g:1305:1: ( ruleArraySize EOF )
            // InternalMoniLog.g:1306:1: ruleArraySize EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArraySize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArraySize"


    // $ANTLR start "ruleArraySize"
    // InternalMoniLog.g:1313:1: ruleArraySize : ( ( rule__ArraySize__Group__0 ) ) ;
    public final void ruleArraySize() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1317:2: ( ( ( rule__ArraySize__Group__0 ) ) )
            // InternalMoniLog.g:1318:2: ( ( rule__ArraySize__Group__0 ) )
            {
            // InternalMoniLog.g:1318:2: ( ( rule__ArraySize__Group__0 ) )
            // InternalMoniLog.g:1319:3: ( rule__ArraySize__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getGroup()); 
            }
            // InternalMoniLog.g:1320:3: ( rule__ArraySize__Group__0 )
            // InternalMoniLog.g:1320:4: rule__ArraySize__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArraySize__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArraySize"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalMoniLog.g:1329:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalMoniLog.g:1330:1: ( ruleQualifiedName EOF )
            // InternalMoniLog.g:1331:1: ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalMoniLog.g:1338:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1342:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalMoniLog.g:1343:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalMoniLog.g:1343:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalMoniLog.g:1344:3: ( rule__QualifiedName__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }
            // InternalMoniLog.g:1345:3: ( rule__QualifiedName__Group__0 )
            // InternalMoniLog.g:1345:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalMoniLog.g:1354:1: entryRuleQualifiedNameWithWildcard : ruleQualifiedNameWithWildcard EOF ;
    public final void entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        try {
            // InternalMoniLog.g:1355:1: ( ruleQualifiedNameWithWildcard EOF )
            // InternalMoniLog.g:1356:1: ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalMoniLog.g:1363:1: ruleQualifiedNameWithWildcard : ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) ;
    public final void ruleQualifiedNameWithWildcard() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1367:2: ( ( ( rule__QualifiedNameWithWildcard__Group__0 ) ) )
            // InternalMoniLog.g:1368:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            {
            // InternalMoniLog.g:1368:2: ( ( rule__QualifiedNameWithWildcard__Group__0 ) )
            // InternalMoniLog.g:1369:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }
            // InternalMoniLog.g:1370:3: ( rule__QualifiedNameWithWildcard__Group__0 )
            // InternalMoniLog.g:1370:4: rule__QualifiedNameWithWildcard__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "ruleMoniLoggerAnnotation"
    // InternalMoniLog.g:1379:1: ruleMoniLoggerAnnotation : ( ( '@Inactive' ) ) ;
    public final void ruleMoniLoggerAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1383:1: ( ( ( '@Inactive' ) ) )
            // InternalMoniLog.g:1384:2: ( ( '@Inactive' ) )
            {
            // InternalMoniLog.g:1384:2: ( ( '@Inactive' ) )
            // InternalMoniLog.g:1385:3: ( '@Inactive' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAnnotationAccess().getInactiveEnumLiteralDeclaration()); 
            }
            // InternalMoniLog.g:1386:3: ( '@Inactive' )
            // InternalMoniLog.g:1386:4: '@Inactive'
            {
            match(input,12,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAnnotationAccess().getInactiveEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMoniLoggerAnnotation"


    // $ANTLR start "ruleAppenderAnnotation"
    // InternalMoniLog.g:1395:1: ruleAppenderAnnotation : ( ( '@Async' ) ) ;
    public final void ruleAppenderAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1399:1: ( ( ( '@Async' ) ) )
            // InternalMoniLog.g:1400:2: ( ( '@Async' ) )
            {
            // InternalMoniLog.g:1400:2: ( ( '@Async' ) )
            // InternalMoniLog.g:1401:3: ( '@Async' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderAnnotationAccess().getAsyncEnumLiteralDeclaration()); 
            }
            // InternalMoniLog.g:1402:3: ( '@Async' )
            // InternalMoniLog.g:1402:4: '@Async'
            {
            match(input,13,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderAnnotationAccess().getAsyncEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAppenderAnnotation"


    // $ANTLR start "ruleLogLevel"
    // InternalMoniLog.g:1411:1: ruleLogLevel : ( ( rule__LogLevel__Alternatives ) ) ;
    public final void ruleLogLevel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1415:1: ( ( ( rule__LogLevel__Alternatives ) ) )
            // InternalMoniLog.g:1416:2: ( ( rule__LogLevel__Alternatives ) )
            {
            // InternalMoniLog.g:1416:2: ( ( rule__LogLevel__Alternatives ) )
            // InternalMoniLog.g:1417:3: ( rule__LogLevel__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogLevelAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:1418:3: ( rule__LogLevel__Alternatives )
            // InternalMoniLog.g:1418:4: rule__LogLevel__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LogLevel__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogLevelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogLevel"


    // $ANTLR start "ruleTemporalPatternKind"
    // InternalMoniLog.g:1427:1: ruleTemporalPatternKind : ( ( rule__TemporalPatternKind__Alternatives ) ) ;
    public final void ruleTemporalPatternKind() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1431:1: ( ( ( rule__TemporalPatternKind__Alternatives ) ) )
            // InternalMoniLog.g:1432:2: ( ( rule__TemporalPatternKind__Alternatives ) )
            {
            // InternalMoniLog.g:1432:2: ( ( rule__TemporalPatternKind__Alternatives ) )
            // InternalMoniLog.g:1433:3: ( rule__TemporalPatternKind__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternKindAccess().getAlternatives()); 
            }
            // InternalMoniLog.g:1434:3: ( rule__TemporalPatternKind__Alternatives )
            // InternalMoniLog.g:1434:4: rule__TemporalPatternKind__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TemporalPatternKind__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternKindAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemporalPatternKind"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalMoniLog.g:1442:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1446:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==33) ) {
                int LA1_1 = input.LA(2);

                if ( (LA1_1==RULE_ID) ) {
                    alt1=1;
                }
                else if ( (LA1_1==RULE_STRING) ) {
                    alt1=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 1, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalMoniLog.g:1447:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1447:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalMoniLog.g:1448:3: ( rule__Import__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1449:3: ( rule__Import__Group_0__0 )
                    // InternalMoniLog.g:1449:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1453:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1453:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalMoniLog.g:1454:3: ( rule__Import__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1455:3: ( rule__Import__Group_1__0 )
                    // InternalMoniLog.g:1455:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Appender__Alternatives"
    // InternalMoniLog.g:1463:1: rule__Appender__Alternatives : ( ( ruleLocalAppender ) | ( ruleExternalAppender ) );
    public final void rule__Appender__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1467:1: ( ( ruleLocalAppender ) | ( ruleExternalAppender ) )
            int alt2=2;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalMoniLog.g:1468:2: ( ruleLocalAppender )
                    {
                    // InternalMoniLog.g:1468:2: ( ruleLocalAppender )
                    // InternalMoniLog.g:1469:3: ruleLocalAppender
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAppenderAccess().getLocalAppenderParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLocalAppender();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAppenderAccess().getLocalAppenderParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1474:2: ( ruleExternalAppender )
                    {
                    // InternalMoniLog.g:1474:2: ( ruleExternalAppender )
                    // InternalMoniLog.g:1475:3: ruleExternalAppender
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAppenderAccess().getExternalAppenderParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExternalAppender();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAppenderAccess().getExternalAppenderParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Appender__Alternatives"


    // $ANTLR start "rule__Layout__Alternatives"
    // InternalMoniLog.g:1484:1: rule__Layout__Alternatives : ( ( ruleLocalLayout ) | ( ruleExternalLayout ) );
    public final void rule__Layout__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1488:1: ( ( ruleLocalLayout ) | ( ruleExternalLayout ) )
            int alt3=2;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalMoniLog.g:1489:2: ( ruleLocalLayout )
                    {
                    // InternalMoniLog.g:1489:2: ( ruleLocalLayout )
                    // InternalMoniLog.g:1490:3: ruleLocalLayout
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLayoutAccess().getLocalLayoutParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLocalLayout();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLayoutAccess().getLocalLayoutParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1495:2: ( ruleExternalLayout )
                    {
                    // InternalMoniLog.g:1495:2: ( ruleExternalLayout )
                    // InternalMoniLog.g:1496:3: ruleExternalLayout
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLayoutAccess().getExternalLayoutParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExternalLayout();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLayoutAccess().getExternalLayoutParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Layout__Alternatives"


    // $ANTLR start "rule__Event__Alternatives"
    // InternalMoniLog.g:1505:1: rule__Event__Alternatives : ( ( ( rule__Event__Group_0__0 ) ) | ( ( rule__Event__Group_1__0 ) ) | ( ( rule__Event__Group_2__0 ) ) );
    public final void rule__Event__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1509:1: ( ( ( rule__Event__Group_0__0 ) ) | ( ( rule__Event__Group_1__0 ) ) | ( ( rule__Event__Group_2__0 ) ) )
            int alt4=3;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt4=1;
                }
                break;
            case 51:
                {
                alt4=2;
                }
                break;
            case 52:
                {
                alt4=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalMoniLog.g:1510:2: ( ( rule__Event__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1510:2: ( ( rule__Event__Group_0__0 ) )
                    // InternalMoniLog.g:1511:3: ( rule__Event__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEventAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1512:3: ( rule__Event__Group_0__0 )
                    // InternalMoniLog.g:1512:4: rule__Event__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEventAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1516:2: ( ( rule__Event__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1516:2: ( ( rule__Event__Group_1__0 ) )
                    // InternalMoniLog.g:1517:3: ( rule__Event__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEventAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1518:3: ( rule__Event__Group_1__0 )
                    // InternalMoniLog.g:1518:4: rule__Event__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEventAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1522:2: ( ( rule__Event__Group_2__0 ) )
                    {
                    // InternalMoniLog.g:1522:2: ( ( rule__Event__Group_2__0 ) )
                    // InternalMoniLog.g:1523:3: ( rule__Event__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEventAccess().getGroup_2()); 
                    }
                    // InternalMoniLog.g:1524:3: ( rule__Event__Group_2__0 )
                    // InternalMoniLog.g:1524:4: rule__Event__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEventAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Alternatives"


    // $ANTLR start "rule__ASTEventKind__Alternatives"
    // InternalMoniLog.g:1532:1: rule__ASTEventKind__Alternatives : ( ( ( rule__ASTEventKind__Group_0__0 ) ) | ( ( rule__ASTEventKind__Group_1__0 ) ) );
    public final void rule__ASTEventKind__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1536:1: ( ( ( rule__ASTEventKind__Group_0__0 ) ) | ( ( rule__ASTEventKind__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==53) ) {
                alt5=1;
            }
            else if ( (LA5_0==54) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalMoniLog.g:1537:2: ( ( rule__ASTEventKind__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1537:2: ( ( rule__ASTEventKind__Group_0__0 ) )
                    // InternalMoniLog.g:1538:3: ( rule__ASTEventKind__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getASTEventKindAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1539:3: ( rule__ASTEventKind__Group_0__0 )
                    // InternalMoniLog.g:1539:4: rule__ASTEventKind__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ASTEventKind__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getASTEventKindAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1543:2: ( ( rule__ASTEventKind__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1543:2: ( ( rule__ASTEventKind__Group_1__0 ) )
                    // InternalMoniLog.g:1544:3: ( rule__ASTEventKind__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getASTEventKindAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1545:3: ( rule__ASTEventKind__Group_1__0 )
                    // InternalMoniLog.g:1545:4: rule__ASTEventKind__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ASTEventKind__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getASTEventKindAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Alternatives"


    // $ANTLR start "rule__Pattern__Alternatives"
    // InternalMoniLog.g:1553:1: rule__Pattern__Alternatives : ( ( ( rule__Pattern__Group_0__0 ) ) | ( ( rule__Pattern__Group_1__0 ) ) | ( ( rule__Pattern__Group_2__0 ) ) | ( ( rule__Pattern__Group_3__0 ) ) | ( ( rule__Pattern__Group_4__0 ) ) );
    public final void rule__Pattern__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1557:1: ( ( ( rule__Pattern__Group_0__0 ) ) | ( ( rule__Pattern__Group_1__0 ) ) | ( ( rule__Pattern__Group_2__0 ) ) | ( ( rule__Pattern__Group_3__0 ) ) | ( ( rule__Pattern__Group_4__0 ) ) )
            int alt6=5;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalMoniLog.g:1558:2: ( ( rule__Pattern__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1558:2: ( ( rule__Pattern__Group_0__0 ) )
                    // InternalMoniLog.g:1559:3: ( rule__Pattern__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPatternAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1560:3: ( rule__Pattern__Group_0__0 )
                    // InternalMoniLog.g:1560:4: rule__Pattern__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPatternAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1564:2: ( ( rule__Pattern__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1564:2: ( ( rule__Pattern__Group_1__0 ) )
                    // InternalMoniLog.g:1565:3: ( rule__Pattern__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPatternAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1566:3: ( rule__Pattern__Group_1__0 )
                    // InternalMoniLog.g:1566:4: rule__Pattern__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPatternAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1570:2: ( ( rule__Pattern__Group_2__0 ) )
                    {
                    // InternalMoniLog.g:1570:2: ( ( rule__Pattern__Group_2__0 ) )
                    // InternalMoniLog.g:1571:3: ( rule__Pattern__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPatternAccess().getGroup_2()); 
                    }
                    // InternalMoniLog.g:1572:3: ( rule__Pattern__Group_2__0 )
                    // InternalMoniLog.g:1572:4: rule__Pattern__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPatternAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1576:2: ( ( rule__Pattern__Group_3__0 ) )
                    {
                    // InternalMoniLog.g:1576:2: ( ( rule__Pattern__Group_3__0 ) )
                    // InternalMoniLog.g:1577:3: ( rule__Pattern__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPatternAccess().getGroup_3()); 
                    }
                    // InternalMoniLog.g:1578:3: ( rule__Pattern__Group_3__0 )
                    // InternalMoniLog.g:1578:4: rule__Pattern__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPatternAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMoniLog.g:1582:2: ( ( rule__Pattern__Group_4__0 ) )
                    {
                    // InternalMoniLog.g:1582:2: ( ( rule__Pattern__Group_4__0 ) )
                    // InternalMoniLog.g:1583:3: ( rule__Pattern__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPatternAccess().getGroup_4()); 
                    }
                    // InternalMoniLog.g:1584:3: ( rule__Pattern__Group_4__0 )
                    // InternalMoniLog.g:1584:4: rule__Pattern__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPatternAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Alternatives"


    // $ANTLR start "rule__BoundType__Alternatives"
    // InternalMoniLog.g:1592:1: rule__BoundType__Alternatives : ( ( ruleExactBound ) | ( ruleLowerBound ) | ( ruleUpperBound ) );
    public final void rule__BoundType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1596:1: ( ( ruleExactBound ) | ( ruleLowerBound ) | ( ruleUpperBound ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt7=1;
                }
                break;
            case 60:
                {
                alt7=2;
                }
                break;
            case 61:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalMoniLog.g:1597:2: ( ruleExactBound )
                    {
                    // InternalMoniLog.g:1597:2: ( ruleExactBound )
                    // InternalMoniLog.g:1598:3: ruleExactBound
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoundTypeAccess().getExactBoundParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExactBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoundTypeAccess().getExactBoundParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1603:2: ( ruleLowerBound )
                    {
                    // InternalMoniLog.g:1603:2: ( ruleLowerBound )
                    // InternalMoniLog.g:1604:3: ruleLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoundTypeAccess().getLowerBoundParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLowerBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoundTypeAccess().getLowerBoundParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1609:2: ( ruleUpperBound )
                    {
                    // InternalMoniLog.g:1609:2: ( ruleUpperBound )
                    // InternalMoniLog.g:1610:3: ruleUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoundTypeAccess().getUpperBoundParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUpperBound();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoundTypeAccess().getUpperBoundParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoundType__Alternatives"


    // $ANTLR start "rule__Scope__Alternatives"
    // InternalMoniLog.g:1619:1: rule__Scope__Alternatives : ( ( ( rule__Scope__Group_0__0 ) ) | ( ( rule__Scope__Group_1__0 ) ) | ( ( rule__Scope__Group_2__0 ) ) | ( ( rule__Scope__Group_3__0 ) ) | ( ( rule__Scope__Group_4__0 ) ) );
    public final void rule__Scope__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1623:1: ( ( ( rule__Scope__Group_0__0 ) ) | ( ( rule__Scope__Group_1__0 ) ) | ( ( rule__Scope__Group_2__0 ) ) | ( ( rule__Scope__Group_3__0 ) ) | ( ( rule__Scope__Group_4__0 ) ) )
            int alt8=5;
            switch ( input.LA(1) ) {
            case EOF:
            case 38:
            case 62:
                {
                alt8=1;
                }
                break;
            case 54:
                {
                int LA8_4 = input.LA(2);

                if ( (synpred14_InternalMoniLog()) ) {
                    alt8=2;
                }
                else if ( (true) ) {
                    alt8=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 4, input);

                    throw nvae;
                }
                }
                break;
            case 53:
                {
                alt8=3;
                }
                break;
            case 63:
                {
                alt8=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalMoniLog.g:1624:2: ( ( rule__Scope__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1624:2: ( ( rule__Scope__Group_0__0 ) )
                    // InternalMoniLog.g:1625:3: ( rule__Scope__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScopeAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1626:3: ( rule__Scope__Group_0__0 )
                    // InternalMoniLog.g:1626:4: rule__Scope__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Scope__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScopeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1630:2: ( ( rule__Scope__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1630:2: ( ( rule__Scope__Group_1__0 ) )
                    // InternalMoniLog.g:1631:3: ( rule__Scope__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScopeAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1632:3: ( rule__Scope__Group_1__0 )
                    // InternalMoniLog.g:1632:4: rule__Scope__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Scope__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScopeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1636:2: ( ( rule__Scope__Group_2__0 ) )
                    {
                    // InternalMoniLog.g:1636:2: ( ( rule__Scope__Group_2__0 ) )
                    // InternalMoniLog.g:1637:3: ( rule__Scope__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScopeAccess().getGroup_2()); 
                    }
                    // InternalMoniLog.g:1638:3: ( rule__Scope__Group_2__0 )
                    // InternalMoniLog.g:1638:4: rule__Scope__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Scope__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScopeAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1642:2: ( ( rule__Scope__Group_3__0 ) )
                    {
                    // InternalMoniLog.g:1642:2: ( ( rule__Scope__Group_3__0 ) )
                    // InternalMoniLog.g:1643:3: ( rule__Scope__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScopeAccess().getGroup_3()); 
                    }
                    // InternalMoniLog.g:1644:3: ( rule__Scope__Group_3__0 )
                    // InternalMoniLog.g:1644:4: rule__Scope__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Scope__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScopeAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMoniLog.g:1648:2: ( ( rule__Scope__Group_4__0 ) )
                    {
                    // InternalMoniLog.g:1648:2: ( ( rule__Scope__Group_4__0 ) )
                    // InternalMoniLog.g:1649:3: ( rule__Scope__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScopeAccess().getGroup_4()); 
                    }
                    // InternalMoniLog.g:1650:3: ( rule__Scope__Group_4__0 )
                    // InternalMoniLog.g:1650:4: rule__Scope__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Scope__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScopeAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Alternatives"


    // $ANTLR start "rule__Action__Alternatives"
    // InternalMoniLog.g:1658:1: rule__Action__Alternatives : ( ( ruleLanguageValue ) | ( ruleAppenderCall ) | ( ruleEmitEvent ) | ( ruleMoniloggerCall ) );
    public final void rule__Action__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1662:1: ( ( ruleLanguageValue ) | ( ruleAppenderCall ) | ( ruleEmitEvent ) | ( ruleMoniloggerCall ) )
            int alt9=4;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==39) ) {
                    alt9=1;
                }
                else if ( (LA9_1==66) ) {
                    switch ( input.LA(3) ) {
                    case 67:
                        {
                        alt9=3;
                        }
                        break;
                    case RULE_ID:
                    case 50:
                        {
                        alt9=2;
                        }
                        break;
                    case 68:
                    case 69:
                        {
                        alt9=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 9, 3, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalMoniLog.g:1663:2: ( ruleLanguageValue )
                    {
                    // InternalMoniLog.g:1663:2: ( ruleLanguageValue )
                    // InternalMoniLog.g:1664:3: ruleLanguageValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActionAccess().getLanguageValueParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLanguageValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActionAccess().getLanguageValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1669:2: ( ruleAppenderCall )
                    {
                    // InternalMoniLog.g:1669:2: ( ruleAppenderCall )
                    // InternalMoniLog.g:1670:3: ruleAppenderCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActionAccess().getAppenderCallParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAppenderCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActionAccess().getAppenderCallParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1675:2: ( ruleEmitEvent )
                    {
                    // InternalMoniLog.g:1675:2: ( ruleEmitEvent )
                    // InternalMoniLog.g:1676:3: ruleEmitEvent
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActionAccess().getEmitEventParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEmitEvent();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActionAccess().getEmitEventParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1681:2: ( ruleMoniloggerCall )
                    {
                    // InternalMoniLog.g:1681:2: ( ruleMoniloggerCall )
                    // InternalMoniLog.g:1682:3: ruleMoniloggerCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActionAccess().getMoniloggerCallParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMoniloggerCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActionAccess().getMoniloggerCallParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Action__Alternatives"


    // $ANTLR start "rule__MoniloggerCall__Alternatives"
    // InternalMoniLog.g:1691:1: rule__MoniloggerCall__Alternatives : ( ( ( rule__MoniloggerCall__Group_0__0 ) ) | ( ( rule__MoniloggerCall__Group_1__0 ) ) );
    public final void rule__MoniloggerCall__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1695:1: ( ( ( rule__MoniloggerCall__Group_0__0 ) ) | ( ( rule__MoniloggerCall__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ID) ) {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==66) ) {
                    int LA10_2 = input.LA(3);

                    if ( (LA10_2==69) ) {
                        alt10=2;
                    }
                    else if ( (LA10_2==68) ) {
                        alt10=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalMoniLog.g:1696:2: ( ( rule__MoniloggerCall__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1696:2: ( ( rule__MoniloggerCall__Group_0__0 ) )
                    // InternalMoniLog.g:1697:3: ( rule__MoniloggerCall__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMoniloggerCallAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1698:3: ( rule__MoniloggerCall__Group_0__0 )
                    // InternalMoniLog.g:1698:4: rule__MoniloggerCall__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniloggerCall__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMoniloggerCallAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1702:2: ( ( rule__MoniloggerCall__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1702:2: ( ( rule__MoniloggerCall__Group_1__0 ) )
                    // InternalMoniLog.g:1703:3: ( rule__MoniloggerCall__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMoniloggerCallAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1704:3: ( rule__MoniloggerCall__Group_1__0 )
                    // InternalMoniLog.g:1704:4: rule__MoniloggerCall__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniloggerCall__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMoniloggerCallAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Alternatives"


    // $ANTLR start "rule__EmptyOrPropertyValue__Alternatives"
    // InternalMoniLog.g:1712:1: rule__EmptyOrPropertyValue__Alternatives : ( ( () ) | ( rulePropertyValue ) );
    public final void rule__EmptyOrPropertyValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1716:1: ( ( () ) | ( rulePropertyValue ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==EOF||LA11_0==40||LA11_0==42) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_ID) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalMoniLog.g:1717:2: ( () )
                    {
                    // InternalMoniLog.g:1717:2: ( () )
                    // InternalMoniLog.g:1718:3: ()
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEmptyOrPropertyValueAccess().getEmptyAction_0()); 
                    }
                    // InternalMoniLog.g:1719:3: ()
                    // InternalMoniLog.g:1719:4: 
                    {
                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEmptyOrPropertyValueAccess().getEmptyAction_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1723:2: ( rulePropertyValue )
                    {
                    // InternalMoniLog.g:1723:2: ( rulePropertyValue )
                    // InternalMoniLog.g:1724:3: rulePropertyValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEmptyOrPropertyValueAccess().getPropertyValueParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePropertyValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEmptyOrPropertyValueAccess().getPropertyValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmptyOrPropertyValue__Alternatives"


    // $ANTLR start "rule__PropertyValue__Alternatives"
    // InternalMoniLog.g:1733:1: rule__PropertyValue__Alternatives : ( ( ( rule__PropertyValue__Group_0__0 ) ) | ( ( rule__PropertyValue__ValueAssignment_1 ) ) );
    public final void rule__PropertyValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1737:1: ( ( ( rule__PropertyValue__Group_0__0 ) ) | ( ( rule__PropertyValue__ValueAssignment_1 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==39) ) {
                    alt12=2;
                }
                else if ( (LA12_1==EOF||LA12_1==40||LA12_1==42||LA12_1==70) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalMoniLog.g:1738:2: ( ( rule__PropertyValue__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1738:2: ( ( rule__PropertyValue__Group_0__0 ) )
                    // InternalMoniLog.g:1739:3: ( rule__PropertyValue__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyValueAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1740:3: ( rule__PropertyValue__Group_0__0 )
                    // InternalMoniLog.g:1740:4: rule__PropertyValue__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PropertyValue__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyValueAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1744:2: ( ( rule__PropertyValue__ValueAssignment_1 ) )
                    {
                    // InternalMoniLog.g:1744:2: ( ( rule__PropertyValue__ValueAssignment_1 ) )
                    // InternalMoniLog.g:1745:3: ( rule__PropertyValue__ValueAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyValueAccess().getValueAssignment_1()); 
                    }
                    // InternalMoniLog.g:1746:3: ( rule__PropertyValue__ValueAssignment_1 )
                    // InternalMoniLog.g:1746:4: rule__PropertyValue__ValueAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PropertyValue__ValueAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyValueAccess().getValueAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Alternatives"


    // $ANTLR start "rule__Expression__Alternatives"
    // InternalMoniLog.g:1754:1: rule__Expression__Alternatives : ( ( ruleParameterReference ) | ( ruleMoniLogExpression ) | ( ruleLanguageValue ) | ( ruleLayoutCall ) );
    public final void rule__Expression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1758:1: ( ( ruleParameterReference ) | ( ruleMoniLogExpression ) | ( ruleLanguageValue ) | ( ruleLayoutCall ) )
            int alt13=4;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID) ) {
                switch ( input.LA(2) ) {
                case 66:
                    {
                    alt13=4;
                    }
                    break;
                case 39:
                    {
                    alt13=3;
                    }
                    break;
                case EOF:
                case 40:
                case 42:
                    {
                    alt13=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA13_0==36) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalMoniLog.g:1759:2: ( ruleParameterReference )
                    {
                    // InternalMoniLog.g:1759:2: ( ruleParameterReference )
                    // InternalMoniLog.g:1760:3: ruleParameterReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getParameterReferenceParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleParameterReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getParameterReferenceParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1765:2: ( ruleMoniLogExpression )
                    {
                    // InternalMoniLog.g:1765:2: ( ruleMoniLogExpression )
                    // InternalMoniLog.g:1766:3: ruleMoniLogExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getMoniLogExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMoniLogExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getMoniLogExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1771:2: ( ruleLanguageValue )
                    {
                    // InternalMoniLog.g:1771:2: ( ruleLanguageValue )
                    // InternalMoniLog.g:1772:3: ruleLanguageValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLanguageValueParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLanguageValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLanguageValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1777:2: ( ruleLayoutCall )
                    {
                    // InternalMoniLog.g:1777:2: ( ruleLayoutCall )
                    // InternalMoniLog.g:1778:3: ruleLayoutCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLayoutCallParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLayoutCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLayoutCallParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives"


    // $ANTLR start "rule__LanguageValue__ValueAlternatives_2_0"
    // InternalMoniLog.g:1787:1: rule__LanguageValue__ValueAlternatives_2_0 : ( ( ruleLanguageExpression ) | ( ruleLanguageCall ) );
    public final void rule__LanguageValue__ValueAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1791:1: ( ( ruleLanguageExpression ) | ( ruleLanguageCall ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_STRING) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_ID) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalMoniLog.g:1792:2: ( ruleLanguageExpression )
                    {
                    // InternalMoniLog.g:1792:2: ( ruleLanguageExpression )
                    // InternalMoniLog.g:1793:3: ruleLanguageExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageValueAccess().getValueLanguageExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLanguageExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageValueAccess().getValueLanguageExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1798:2: ( ruleLanguageCall )
                    {
                    // InternalMoniLog.g:1798:2: ( ruleLanguageCall )
                    // InternalMoniLog.g:1799:3: ruleLanguageCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageValueAccess().getValueLanguageCallParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLanguageCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageValueAccess().getValueLanguageCallParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__ValueAlternatives_2_0"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalMoniLog.g:1808:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '==' ) | ( '!=' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1812:1: ( ( '==' ) | ( '!=' ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==14) ) {
                alt15=1;
            }
            else if ( (LA15_0==15) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalMoniLog.g:1813:2: ( '==' )
                    {
                    // InternalMoniLog.g:1813:2: ( '==' )
                    // InternalMoniLog.g:1814:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,14,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1819:2: ( '!=' )
                    {
                    // InternalMoniLog.g:1819:2: ( '!=' )
                    // InternalMoniLog.g:1820:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,15,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalMoniLog.g:1829:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1833:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 16:
                {
                alt16=1;
                }
                break;
            case 17:
                {
                alt16=2;
                }
                break;
            case 18:
                {
                alt16=3;
                }
                break;
            case 19:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalMoniLog.g:1834:2: ( '>=' )
                    {
                    // InternalMoniLog.g:1834:2: ( '>=' )
                    // InternalMoniLog.g:1835:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }
                    match(input,16,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1840:2: ( '<=' )
                    {
                    // InternalMoniLog.g:1840:2: ( '<=' )
                    // InternalMoniLog.g:1841:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }
                    match(input,17,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1846:2: ( '>' )
                    {
                    // InternalMoniLog.g:1846:2: ( '>' )
                    // InternalMoniLog.g:1847:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }
                    match(input,18,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1852:2: ( '<' )
                    {
                    // InternalMoniLog.g:1852:2: ( '<' )
                    // InternalMoniLog.g:1853:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }
                    match(input,19,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__PlusOrMinus__Alternatives_1_0"
    // InternalMoniLog.g:1862:1: rule__PlusOrMinus__Alternatives_1_0 : ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) );
    public final void rule__PlusOrMinus__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1866:1: ( ( ( rule__PlusOrMinus__Group_1_0_0__0 ) ) | ( ( rule__PlusOrMinus__Group_1_0_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==79) ) {
                alt17=1;
            }
            else if ( (LA17_0==73) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalMoniLog.g:1867:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    {
                    // InternalMoniLog.g:1867:2: ( ( rule__PlusOrMinus__Group_1_0_0__0 ) )
                    // InternalMoniLog.g:1868:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }
                    // InternalMoniLog.g:1869:3: ( rule__PlusOrMinus__Group_1_0_0__0 )
                    // InternalMoniLog.g:1869:4: rule__PlusOrMinus__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1873:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    {
                    // InternalMoniLog.g:1873:2: ( ( rule__PlusOrMinus__Group_1_0_1__0 ) )
                    // InternalMoniLog.g:1874:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }
                    // InternalMoniLog.g:1875:3: ( rule__PlusOrMinus__Group_1_0_1__0 )
                    // InternalMoniLog.g:1875:4: rule__PlusOrMinus__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PlusOrMinus__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Alternatives_1_0"


    // $ANTLR start "rule__MulOrDiv__Alternatives_1_0"
    // InternalMoniLog.g:1883:1: rule__MulOrDiv__Alternatives_1_0 : ( ( ( rule__MulOrDiv__Group_1_0_0__0 ) ) | ( ( rule__MulOrDiv__Group_1_0_1__0 ) ) );
    public final void rule__MulOrDiv__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1887:1: ( ( ( rule__MulOrDiv__Group_1_0_0__0 ) ) | ( ( rule__MulOrDiv__Group_1_0_1__0 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==80) ) {
                alt18=1;
            }
            else if ( (LA18_0==81) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalMoniLog.g:1888:2: ( ( rule__MulOrDiv__Group_1_0_0__0 ) )
                    {
                    // InternalMoniLog.g:1888:2: ( ( rule__MulOrDiv__Group_1_0_0__0 ) )
                    // InternalMoniLog.g:1889:3: ( rule__MulOrDiv__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); 
                    }
                    // InternalMoniLog.g:1890:3: ( rule__MulOrDiv__Group_1_0_0__0 )
                    // InternalMoniLog.g:1890:4: rule__MulOrDiv__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MulOrDiv__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1894:2: ( ( rule__MulOrDiv__Group_1_0_1__0 ) )
                    {
                    // InternalMoniLog.g:1894:2: ( ( rule__MulOrDiv__Group_1_0_1__0 ) )
                    // InternalMoniLog.g:1895:3: ( rule__MulOrDiv__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); 
                    }
                    // InternalMoniLog.g:1896:3: ( rule__MulOrDiv__Group_1_0_1__0 )
                    // InternalMoniLog.g:1896:4: rule__MulOrDiv__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MulOrDiv__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Alternatives_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalMoniLog.g:1904:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1908:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ruleAtomic ) )
            int alt19=4;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt19=1;
                }
                break;
            case 73:
                {
                alt19=2;
                }
                break;
            case 74:
                {
                alt19=3;
                }
                break;
            case RULE_ID:
            case RULE_STRING:
            case RULE_INT:
            case RULE_REAL:
            case 20:
            case 47:
            case 75:
            case 83:
                {
                alt19=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalMoniLog.g:1909:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1909:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalMoniLog.g:1910:3: ( rule__Primary__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1911:3: ( rule__Primary__Group_0__0 )
                    // InternalMoniLog.g:1911:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1915:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1915:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalMoniLog.g:1916:3: ( rule__Primary__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1917:3: ( rule__Primary__Group_1__0 )
                    // InternalMoniLog.g:1917:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1921:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalMoniLog.g:1921:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalMoniLog.g:1922:3: ( rule__Primary__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }
                    // InternalMoniLog.g:1923:3: ( rule__Primary__Group_2__0 )
                    // InternalMoniLog.g:1923:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1927:2: ( ruleAtomic )
                    {
                    // InternalMoniLog.g:1927:2: ( ruleAtomic )
                    // InternalMoniLog.g:1928:3: ruleAtomic
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtomic();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives"
    // InternalMoniLog.g:1937:1: rule__Atomic__Alternatives : ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ( rule__Atomic__Group_2__0 ) ) | ( ( rule__Atomic__Group_3__0 ) ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ruleRef ) | ( ruleArraySize ) );
    public final void rule__Atomic__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1941:1: ( ( ( rule__Atomic__Group_0__0 ) ) | ( ( rule__Atomic__Group_1__0 ) ) | ( ( rule__Atomic__Group_2__0 ) ) | ( ( rule__Atomic__Group_3__0 ) ) | ( ( rule__Atomic__Group_4__0 ) ) | ( ruleRef ) | ( ruleArraySize ) )
            int alt20=7;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt20=1;
                }
                break;
            case RULE_REAL:
                {
                alt20=2;
                }
                break;
            case 20:
            case 83:
                {
                alt20=3;
                }
                break;
            case RULE_STRING:
                {
                alt20=4;
                }
                break;
            case 47:
                {
                alt20=5;
                }
                break;
            case RULE_ID:
                {
                alt20=6;
                }
                break;
            case 75:
                {
                alt20=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalMoniLog.g:1942:2: ( ( rule__Atomic__Group_0__0 ) )
                    {
                    // InternalMoniLog.g:1942:2: ( ( rule__Atomic__Group_0__0 ) )
                    // InternalMoniLog.g:1943:3: ( rule__Atomic__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }
                    // InternalMoniLog.g:1944:3: ( rule__Atomic__Group_0__0 )
                    // InternalMoniLog.g:1944:4: rule__Atomic__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1948:2: ( ( rule__Atomic__Group_1__0 ) )
                    {
                    // InternalMoniLog.g:1948:2: ( ( rule__Atomic__Group_1__0 ) )
                    // InternalMoniLog.g:1949:3: ( rule__Atomic__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }
                    // InternalMoniLog.g:1950:3: ( rule__Atomic__Group_1__0 )
                    // InternalMoniLog.g:1950:4: rule__Atomic__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:1954:2: ( ( rule__Atomic__Group_2__0 ) )
                    {
                    // InternalMoniLog.g:1954:2: ( ( rule__Atomic__Group_2__0 ) )
                    // InternalMoniLog.g:1955:3: ( rule__Atomic__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_2()); 
                    }
                    // InternalMoniLog.g:1956:3: ( rule__Atomic__Group_2__0 )
                    // InternalMoniLog.g:1956:4: rule__Atomic__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:1960:2: ( ( rule__Atomic__Group_3__0 ) )
                    {
                    // InternalMoniLog.g:1960:2: ( ( rule__Atomic__Group_3__0 ) )
                    // InternalMoniLog.g:1961:3: ( rule__Atomic__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_3()); 
                    }
                    // InternalMoniLog.g:1962:3: ( rule__Atomic__Group_3__0 )
                    // InternalMoniLog.g:1962:4: rule__Atomic__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMoniLog.g:1966:2: ( ( rule__Atomic__Group_4__0 ) )
                    {
                    // InternalMoniLog.g:1966:2: ( ( rule__Atomic__Group_4__0 ) )
                    // InternalMoniLog.g:1967:3: ( rule__Atomic__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }
                    // InternalMoniLog.g:1968:3: ( rule__Atomic__Group_4__0 )
                    // InternalMoniLog.g:1968:4: rule__Atomic__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMoniLog.g:1972:2: ( ruleRef )
                    {
                    // InternalMoniLog.g:1972:2: ( ruleRef )
                    // InternalMoniLog.g:1973:3: ruleRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getRefParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getRefParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMoniLog.g:1978:2: ( ruleArraySize )
                    {
                    // InternalMoniLog.g:1978:2: ( ruleArraySize )
                    // InternalMoniLog.g:1979:3: ruleArraySize
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getArraySizeParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArraySize();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getArraySizeParserRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives"


    // $ANTLR start "rule__Atomic__Alternatives_2_1"
    // InternalMoniLog.g:1988:1: rule__Atomic__Alternatives_2_1 : ( ( ( rule__Atomic__ValueAssignment_2_1_0 ) ) | ( 'false' ) );
    public final void rule__Atomic__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:1992:1: ( ( ( rule__Atomic__ValueAssignment_2_1_0 ) ) | ( 'false' ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==83) ) {
                alt21=1;
            }
            else if ( (LA21_0==20) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalMoniLog.g:1993:2: ( ( rule__Atomic__ValueAssignment_2_1_0 ) )
                    {
                    // InternalMoniLog.g:1993:2: ( ( rule__Atomic__ValueAssignment_2_1_0 ) )
                    // InternalMoniLog.g:1994:3: ( rule__Atomic__ValueAssignment_2_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getValueAssignment_2_1_0()); 
                    }
                    // InternalMoniLog.g:1995:3: ( rule__Atomic__ValueAssignment_2_1_0 )
                    // InternalMoniLog.g:1995:4: rule__Atomic__ValueAssignment_2_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Atomic__ValueAssignment_2_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getValueAssignment_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:1999:2: ( 'false' )
                    {
                    // InternalMoniLog.g:1999:2: ( 'false' )
                    // InternalMoniLog.g:2000:3: 'false'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicAccess().getFalseKeyword_2_1_1()); 
                    }
                    match(input,20,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicAccess().getFalseKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Alternatives_2_1"


    // $ANTLR start "rule__Ref__Alternatives_1"
    // InternalMoniLog.g:2009:1: rule__Ref__Alternatives_1 : ( ( ( rule__Ref__Group_1_0__0 ) ) | ( ( rule__Ref__Group_1_1__0 ) ) );
    public final void rule__Ref__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2013:1: ( ( ( rule__Ref__Group_1_0__0 ) ) | ( ( rule__Ref__Group_1_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==47) ) {
                alt22=1;
            }
            else if ( (LA22_0==66) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalMoniLog.g:2014:2: ( ( rule__Ref__Group_1_0__0 ) )
                    {
                    // InternalMoniLog.g:2014:2: ( ( rule__Ref__Group_1_0__0 ) )
                    // InternalMoniLog.g:2015:3: ( rule__Ref__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefAccess().getGroup_1_0()); 
                    }
                    // InternalMoniLog.g:2016:3: ( rule__Ref__Group_1_0__0 )
                    // InternalMoniLog.g:2016:4: rule__Ref__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Ref__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:2020:2: ( ( rule__Ref__Group_1_1__0 ) )
                    {
                    // InternalMoniLog.g:2020:2: ( ( rule__Ref__Group_1_1__0 ) )
                    // InternalMoniLog.g:2021:3: ( rule__Ref__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRefAccess().getGroup_1_1()); 
                    }
                    // InternalMoniLog.g:2022:3: ( rule__Ref__Group_1_1__0 )
                    // InternalMoniLog.g:2022:4: rule__Ref__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Ref__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRefAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Alternatives_1"


    // $ANTLR start "rule__LogLevel__Alternatives"
    // InternalMoniLog.g:2030:1: rule__LogLevel__Alternatives : ( ( ( 'INFO' ) ) | ( ( 'CONFIG' ) ) | ( ( 'FINE' ) ) | ( ( 'FINER' ) ) | ( ( 'FINEST' ) ) | ( ( 'SEVERE' ) ) | ( ( 'WARNING' ) ) );
    public final void rule__LogLevel__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2034:1: ( ( ( 'INFO' ) ) | ( ( 'CONFIG' ) ) | ( ( 'FINE' ) ) | ( ( 'FINER' ) ) | ( ( 'FINEST' ) ) | ( ( 'SEVERE' ) ) | ( ( 'WARNING' ) ) )
            int alt23=7;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt23=1;
                }
                break;
            case 22:
                {
                alt23=2;
                }
                break;
            case 23:
                {
                alt23=3;
                }
                break;
            case 24:
                {
                alt23=4;
                }
                break;
            case 25:
                {
                alt23=5;
                }
                break;
            case 26:
                {
                alt23=6;
                }
                break;
            case 27:
                {
                alt23=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalMoniLog.g:2035:2: ( ( 'INFO' ) )
                    {
                    // InternalMoniLog.g:2035:2: ( ( 'INFO' ) )
                    // InternalMoniLog.g:2036:3: ( 'INFO' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getInfoEnumLiteralDeclaration_0()); 
                    }
                    // InternalMoniLog.g:2037:3: ( 'INFO' )
                    // InternalMoniLog.g:2037:4: 'INFO'
                    {
                    match(input,21,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getInfoEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:2041:2: ( ( 'CONFIG' ) )
                    {
                    // InternalMoniLog.g:2041:2: ( ( 'CONFIG' ) )
                    // InternalMoniLog.g:2042:3: ( 'CONFIG' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getConfigEnumLiteralDeclaration_1()); 
                    }
                    // InternalMoniLog.g:2043:3: ( 'CONFIG' )
                    // InternalMoniLog.g:2043:4: 'CONFIG'
                    {
                    match(input,22,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getConfigEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:2047:2: ( ( 'FINE' ) )
                    {
                    // InternalMoniLog.g:2047:2: ( ( 'FINE' ) )
                    // InternalMoniLog.g:2048:3: ( 'FINE' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getFineEnumLiteralDeclaration_2()); 
                    }
                    // InternalMoniLog.g:2049:3: ( 'FINE' )
                    // InternalMoniLog.g:2049:4: 'FINE'
                    {
                    match(input,23,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getFineEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:2053:2: ( ( 'FINER' ) )
                    {
                    // InternalMoniLog.g:2053:2: ( ( 'FINER' ) )
                    // InternalMoniLog.g:2054:3: ( 'FINER' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getFinerEnumLiteralDeclaration_3()); 
                    }
                    // InternalMoniLog.g:2055:3: ( 'FINER' )
                    // InternalMoniLog.g:2055:4: 'FINER'
                    {
                    match(input,24,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getFinerEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMoniLog.g:2059:2: ( ( 'FINEST' ) )
                    {
                    // InternalMoniLog.g:2059:2: ( ( 'FINEST' ) )
                    // InternalMoniLog.g:2060:3: ( 'FINEST' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getFinestEnumLiteralDeclaration_4()); 
                    }
                    // InternalMoniLog.g:2061:3: ( 'FINEST' )
                    // InternalMoniLog.g:2061:4: 'FINEST'
                    {
                    match(input,25,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getFinestEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMoniLog.g:2065:2: ( ( 'SEVERE' ) )
                    {
                    // InternalMoniLog.g:2065:2: ( ( 'SEVERE' ) )
                    // InternalMoniLog.g:2066:3: ( 'SEVERE' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getSevereEnumLiteralDeclaration_5()); 
                    }
                    // InternalMoniLog.g:2067:3: ( 'SEVERE' )
                    // InternalMoniLog.g:2067:4: 'SEVERE'
                    {
                    match(input,26,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getSevereEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMoniLog.g:2071:2: ( ( 'WARNING' ) )
                    {
                    // InternalMoniLog.g:2071:2: ( ( 'WARNING' ) )
                    // InternalMoniLog.g:2072:3: ( 'WARNING' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogLevelAccess().getWarningEnumLiteralDeclaration_6()); 
                    }
                    // InternalMoniLog.g:2073:3: ( 'WARNING' )
                    // InternalMoniLog.g:2073:4: 'WARNING'
                    {
                    match(input,27,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogLevelAccess().getWarningEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogLevel__Alternatives"


    // $ANTLR start "rule__TemporalPatternKind__Alternatives"
    // InternalMoniLog.g:2081:1: rule__TemporalPatternKind__Alternatives : ( ( ( 'S' ) ) | ( ( 'V' ) ) | ( ( 'nS' ) ) | ( ( 'nV' ) ) );
    public final void rule__TemporalPatternKind__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2085:1: ( ( ( 'S' ) ) | ( ( 'V' ) ) | ( ( 'nS' ) ) | ( ( 'nV' ) ) )
            int alt24=4;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt24=1;
                }
                break;
            case 29:
                {
                alt24=2;
                }
                break;
            case 30:
                {
                alt24=3;
                }
                break;
            case 31:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalMoniLog.g:2086:2: ( ( 'S' ) )
                    {
                    // InternalMoniLog.g:2086:2: ( ( 'S' ) )
                    // InternalMoniLog.g:2087:3: ( 'S' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalPatternKindAccess().getSEnumLiteralDeclaration_0()); 
                    }
                    // InternalMoniLog.g:2088:3: ( 'S' )
                    // InternalMoniLog.g:2088:4: 'S'
                    {
                    match(input,28,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalPatternKindAccess().getSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:2092:2: ( ( 'V' ) )
                    {
                    // InternalMoniLog.g:2092:2: ( ( 'V' ) )
                    // InternalMoniLog.g:2093:3: ( 'V' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalPatternKindAccess().getVEnumLiteralDeclaration_1()); 
                    }
                    // InternalMoniLog.g:2094:3: ( 'V' )
                    // InternalMoniLog.g:2094:4: 'V'
                    {
                    match(input,29,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalPatternKindAccess().getVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:2098:2: ( ( 'nS' ) )
                    {
                    // InternalMoniLog.g:2098:2: ( ( 'nS' ) )
                    // InternalMoniLog.g:2099:3: ( 'nS' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalPatternKindAccess().getNSEnumLiteralDeclaration_2()); 
                    }
                    // InternalMoniLog.g:2100:3: ( 'nS' )
                    // InternalMoniLog.g:2100:4: 'nS'
                    {
                    match(input,30,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalPatternKindAccess().getNSEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:2104:2: ( ( 'nV' ) )
                    {
                    // InternalMoniLog.g:2104:2: ( ( 'nV' ) )
                    // InternalMoniLog.g:2105:3: ( 'nV' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalPatternKindAccess().getNVEnumLiteralDeclaration_3()); 
                    }
                    // InternalMoniLog.g:2106:3: ( 'nV' )
                    // InternalMoniLog.g:2106:4: 'nV'
                    {
                    match(input,31,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalPatternKindAccess().getNVEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPatternKind__Alternatives"


    // $ANTLR start "rule__Document__Group__0"
    // InternalMoniLog.g:2114:1: rule__Document__Group__0 : rule__Document__Group__0__Impl rule__Document__Group__1 ;
    public final void rule__Document__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2118:1: ( rule__Document__Group__0__Impl rule__Document__Group__1 )
            // InternalMoniLog.g:2119:2: rule__Document__Group__0__Impl rule__Document__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Document__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Document__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__0"


    // $ANTLR start "rule__Document__Group__0__Impl"
    // InternalMoniLog.g:2126:1: rule__Document__Group__0__Impl : ( 'package' ) ;
    public final void rule__Document__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2130:1: ( ( 'package' ) )
            // InternalMoniLog.g:2131:1: ( 'package' )
            {
            // InternalMoniLog.g:2131:1: ( 'package' )
            // InternalMoniLog.g:2132:2: 'package'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getPackageKeyword_0()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getPackageKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__0__Impl"


    // $ANTLR start "rule__Document__Group__1"
    // InternalMoniLog.g:2141:1: rule__Document__Group__1 : rule__Document__Group__1__Impl rule__Document__Group__2 ;
    public final void rule__Document__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2145:1: ( rule__Document__Group__1__Impl rule__Document__Group__2 )
            // InternalMoniLog.g:2146:2: rule__Document__Group__1__Impl rule__Document__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Document__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Document__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__1"


    // $ANTLR start "rule__Document__Group__1__Impl"
    // InternalMoniLog.g:2153:1: rule__Document__Group__1__Impl : ( ( rule__Document__NameAssignment_1 ) ) ;
    public final void rule__Document__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2157:1: ( ( ( rule__Document__NameAssignment_1 ) ) )
            // InternalMoniLog.g:2158:1: ( ( rule__Document__NameAssignment_1 ) )
            {
            // InternalMoniLog.g:2158:1: ( ( rule__Document__NameAssignment_1 ) )
            // InternalMoniLog.g:2159:2: ( rule__Document__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getNameAssignment_1()); 
            }
            // InternalMoniLog.g:2160:2: ( rule__Document__NameAssignment_1 )
            // InternalMoniLog.g:2160:3: rule__Document__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Document__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__1__Impl"


    // $ANTLR start "rule__Document__Group__2"
    // InternalMoniLog.g:2168:1: rule__Document__Group__2 : rule__Document__Group__2__Impl rule__Document__Group__3 ;
    public final void rule__Document__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2172:1: ( rule__Document__Group__2__Impl rule__Document__Group__3 )
            // InternalMoniLog.g:2173:2: rule__Document__Group__2__Impl rule__Document__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__Document__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Document__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__2"


    // $ANTLR start "rule__Document__Group__2__Impl"
    // InternalMoniLog.g:2180:1: rule__Document__Group__2__Impl : ( ( rule__Document__ImportsAssignment_2 )* ) ;
    public final void rule__Document__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2184:1: ( ( ( rule__Document__ImportsAssignment_2 )* ) )
            // InternalMoniLog.g:2185:1: ( ( rule__Document__ImportsAssignment_2 )* )
            {
            // InternalMoniLog.g:2185:1: ( ( rule__Document__ImportsAssignment_2 )* )
            // InternalMoniLog.g:2186:2: ( rule__Document__ImportsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getImportsAssignment_2()); 
            }
            // InternalMoniLog.g:2187:2: ( rule__Document__ImportsAssignment_2 )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==33) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalMoniLog.g:2187:3: rule__Document__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Document__ImportsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getImportsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__2__Impl"


    // $ANTLR start "rule__Document__Group__3"
    // InternalMoniLog.g:2195:1: rule__Document__Group__3 : rule__Document__Group__3__Impl ;
    public final void rule__Document__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2199:1: ( rule__Document__Group__3__Impl )
            // InternalMoniLog.g:2200:2: rule__Document__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Document__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__3"


    // $ANTLR start "rule__Document__Group__3__Impl"
    // InternalMoniLog.g:2206:1: rule__Document__Group__3__Impl : ( ( rule__Document__UnorderedGroup_3 ) ) ;
    public final void rule__Document__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2210:1: ( ( ( rule__Document__UnorderedGroup_3 ) ) )
            // InternalMoniLog.g:2211:1: ( ( rule__Document__UnorderedGroup_3 ) )
            {
            // InternalMoniLog.g:2211:1: ( ( rule__Document__UnorderedGroup_3 ) )
            // InternalMoniLog.g:2212:2: ( rule__Document__UnorderedGroup_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getUnorderedGroup_3()); 
            }
            // InternalMoniLog.g:2213:2: ( rule__Document__UnorderedGroup_3 )
            // InternalMoniLog.g:2213:3: rule__Document__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Document__UnorderedGroup_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getUnorderedGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalMoniLog.g:2222:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2226:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalMoniLog.g:2227:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_3);
            rule__Import__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalMoniLog.g:2234:1: rule__Import__Group_0__0__Impl : ( 'import' ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2238:1: ( ( 'import' ) )
            // InternalMoniLog.g:2239:1: ( 'import' )
            {
            // InternalMoniLog.g:2239:1: ( 'import' )
            // InternalMoniLog.g:2240:2: 'import'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportKeyword_0_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalMoniLog.g:2249:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2253:1: ( rule__Import__Group_0__1__Impl )
            // InternalMoniLog.g:2254:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalMoniLog.g:2260:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamespaceAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2264:1: ( ( ( rule__Import__ImportedNamespaceAssignment_0_1 ) ) )
            // InternalMoniLog.g:2265:1: ( ( rule__Import__ImportedNamespaceAssignment_0_1 ) )
            {
            // InternalMoniLog.g:2265:1: ( ( rule__Import__ImportedNamespaceAssignment_0_1 ) )
            // InternalMoniLog.g:2266:2: ( rule__Import__ImportedNamespaceAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_0_1()); 
            }
            // InternalMoniLog.g:2267:2: ( rule__Import__ImportedNamespaceAssignment_0_1 )
            // InternalMoniLog.g:2267:3: rule__Import__ImportedNamespaceAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamespaceAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalMoniLog.g:2276:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2280:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalMoniLog.g:2281:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Import__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalMoniLog.g:2288:1: rule__Import__Group_1__0__Impl : ( 'import' ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2292:1: ( ( 'import' ) )
            // InternalMoniLog.g:2293:1: ( 'import' )
            {
            // InternalMoniLog.g:2293:1: ( 'import' )
            // InternalMoniLog.g:2294:2: 'import'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportKeyword_1_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalMoniLog.g:2303:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2307:1: ( rule__Import__Group_1__1__Impl )
            // InternalMoniLog.g:2308:2: rule__Import__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalMoniLog.g:2314:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__AliasAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2318:1: ( ( ( rule__Import__AliasAssignment_1_1 ) ) )
            // InternalMoniLog.g:2319:1: ( ( rule__Import__AliasAssignment_1_1 ) )
            {
            // InternalMoniLog.g:2319:1: ( ( rule__Import__AliasAssignment_1_1 ) )
            // InternalMoniLog.g:2320:2: ( rule__Import__AliasAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getAliasAssignment_1_1()); 
            }
            // InternalMoniLog.g:2321:2: ( rule__Import__AliasAssignment_1_1 )
            // InternalMoniLog.g:2321:3: rule__Import__AliasAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getAliasAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__FileAlias__Group__0"
    // InternalMoniLog.g:2330:1: rule__FileAlias__Group__0 : rule__FileAlias__Group__0__Impl rule__FileAlias__Group__1 ;
    public final void rule__FileAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2334:1: ( rule__FileAlias__Group__0__Impl rule__FileAlias__Group__1 )
            // InternalMoniLog.g:2335:2: rule__FileAlias__Group__0__Impl rule__FileAlias__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__FileAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FileAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__0"


    // $ANTLR start "rule__FileAlias__Group__0__Impl"
    // InternalMoniLog.g:2342:1: rule__FileAlias__Group__0__Impl : ( ( rule__FileAlias__FilePathAssignment_0 ) ) ;
    public final void rule__FileAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2346:1: ( ( ( rule__FileAlias__FilePathAssignment_0 ) ) )
            // InternalMoniLog.g:2347:1: ( ( rule__FileAlias__FilePathAssignment_0 ) )
            {
            // InternalMoniLog.g:2347:1: ( ( rule__FileAlias__FilePathAssignment_0 ) )
            // InternalMoniLog.g:2348:2: ( rule__FileAlias__FilePathAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getFilePathAssignment_0()); 
            }
            // InternalMoniLog.g:2349:2: ( rule__FileAlias__FilePathAssignment_0 )
            // InternalMoniLog.g:2349:3: rule__FileAlias__FilePathAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FileAlias__FilePathAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getFilePathAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__0__Impl"


    // $ANTLR start "rule__FileAlias__Group__1"
    // InternalMoniLog.g:2357:1: rule__FileAlias__Group__1 : rule__FileAlias__Group__1__Impl rule__FileAlias__Group__2 ;
    public final void rule__FileAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2361:1: ( rule__FileAlias__Group__1__Impl rule__FileAlias__Group__2 )
            // InternalMoniLog.g:2362:2: rule__FileAlias__Group__1__Impl rule__FileAlias__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__FileAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FileAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__1"


    // $ANTLR start "rule__FileAlias__Group__1__Impl"
    // InternalMoniLog.g:2369:1: rule__FileAlias__Group__1__Impl : ( 'as' ) ;
    public final void rule__FileAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2373:1: ( ( 'as' ) )
            // InternalMoniLog.g:2374:1: ( 'as' )
            {
            // InternalMoniLog.g:2374:1: ( 'as' )
            // InternalMoniLog.g:2375:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getAsKeyword_1()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getAsKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__1__Impl"


    // $ANTLR start "rule__FileAlias__Group__2"
    // InternalMoniLog.g:2384:1: rule__FileAlias__Group__2 : rule__FileAlias__Group__2__Impl ;
    public final void rule__FileAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2388:1: ( rule__FileAlias__Group__2__Impl )
            // InternalMoniLog.g:2389:2: rule__FileAlias__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FileAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__2"


    // $ANTLR start "rule__FileAlias__Group__2__Impl"
    // InternalMoniLog.g:2395:1: rule__FileAlias__Group__2__Impl : ( ( rule__FileAlias__NameAssignment_2 ) ) ;
    public final void rule__FileAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2399:1: ( ( ( rule__FileAlias__NameAssignment_2 ) ) )
            // InternalMoniLog.g:2400:1: ( ( rule__FileAlias__NameAssignment_2 ) )
            {
            // InternalMoniLog.g:2400:1: ( ( rule__FileAlias__NameAssignment_2 ) )
            // InternalMoniLog.g:2401:2: ( rule__FileAlias__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getNameAssignment_2()); 
            }
            // InternalMoniLog.g:2402:2: ( rule__FileAlias__NameAssignment_2 )
            // InternalMoniLog.g:2402:3: rule__FileAlias__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FileAlias__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__Group__2__Impl"


    // $ANTLR start "rule__LocalAppender__Group__0"
    // InternalMoniLog.g:2411:1: rule__LocalAppender__Group__0 : rule__LocalAppender__Group__0__Impl rule__LocalAppender__Group__1 ;
    public final void rule__LocalAppender__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2415:1: ( rule__LocalAppender__Group__0__Impl rule__LocalAppender__Group__1 )
            // InternalMoniLog.g:2416:2: rule__LocalAppender__Group__0__Impl rule__LocalAppender__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__LocalAppender__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__0"


    // $ANTLR start "rule__LocalAppender__Group__0__Impl"
    // InternalMoniLog.g:2423:1: rule__LocalAppender__Group__0__Impl : ( ( rule__LocalAppender__AnnotationsAssignment_0 )* ) ;
    public final void rule__LocalAppender__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2427:1: ( ( ( rule__LocalAppender__AnnotationsAssignment_0 )* ) )
            // InternalMoniLog.g:2428:1: ( ( rule__LocalAppender__AnnotationsAssignment_0 )* )
            {
            // InternalMoniLog.g:2428:1: ( ( rule__LocalAppender__AnnotationsAssignment_0 )* )
            // InternalMoniLog.g:2429:2: ( rule__LocalAppender__AnnotationsAssignment_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getAnnotationsAssignment_0()); 
            }
            // InternalMoniLog.g:2430:2: ( rule__LocalAppender__AnnotationsAssignment_0 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==13) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalMoniLog.g:2430:3: rule__LocalAppender__AnnotationsAssignment_0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__LocalAppender__AnnotationsAssignment_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getAnnotationsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__0__Impl"


    // $ANTLR start "rule__LocalAppender__Group__1"
    // InternalMoniLog.g:2438:1: rule__LocalAppender__Group__1 : rule__LocalAppender__Group__1__Impl rule__LocalAppender__Group__2 ;
    public final void rule__LocalAppender__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2442:1: ( rule__LocalAppender__Group__1__Impl rule__LocalAppender__Group__2 )
            // InternalMoniLog.g:2443:2: rule__LocalAppender__Group__1__Impl rule__LocalAppender__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__LocalAppender__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__1"


    // $ANTLR start "rule__LocalAppender__Group__1__Impl"
    // InternalMoniLog.g:2450:1: rule__LocalAppender__Group__1__Impl : ( 'appender' ) ;
    public final void rule__LocalAppender__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2454:1: ( ( 'appender' ) )
            // InternalMoniLog.g:2455:1: ( 'appender' )
            {
            // InternalMoniLog.g:2455:1: ( 'appender' )
            // InternalMoniLog.g:2456:2: 'appender'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getAppenderKeyword_1()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getAppenderKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__1__Impl"


    // $ANTLR start "rule__LocalAppender__Group__2"
    // InternalMoniLog.g:2465:1: rule__LocalAppender__Group__2 : rule__LocalAppender__Group__2__Impl rule__LocalAppender__Group__3 ;
    public final void rule__LocalAppender__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2469:1: ( rule__LocalAppender__Group__2__Impl rule__LocalAppender__Group__3 )
            // InternalMoniLog.g:2470:2: rule__LocalAppender__Group__2__Impl rule__LocalAppender__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__LocalAppender__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__2"


    // $ANTLR start "rule__LocalAppender__Group__2__Impl"
    // InternalMoniLog.g:2477:1: rule__LocalAppender__Group__2__Impl : ( ( rule__LocalAppender__NameAssignment_2 ) ) ;
    public final void rule__LocalAppender__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2481:1: ( ( ( rule__LocalAppender__NameAssignment_2 ) ) )
            // InternalMoniLog.g:2482:1: ( ( rule__LocalAppender__NameAssignment_2 ) )
            {
            // InternalMoniLog.g:2482:1: ( ( rule__LocalAppender__NameAssignment_2 ) )
            // InternalMoniLog.g:2483:2: ( rule__LocalAppender__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getNameAssignment_2()); 
            }
            // InternalMoniLog.g:2484:2: ( rule__LocalAppender__NameAssignment_2 )
            // InternalMoniLog.g:2484:3: rule__LocalAppender__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__2__Impl"


    // $ANTLR start "rule__LocalAppender__Group__3"
    // InternalMoniLog.g:2492:1: rule__LocalAppender__Group__3 : rule__LocalAppender__Group__3__Impl rule__LocalAppender__Group__4 ;
    public final void rule__LocalAppender__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2496:1: ( rule__LocalAppender__Group__3__Impl rule__LocalAppender__Group__4 )
            // InternalMoniLog.g:2497:2: rule__LocalAppender__Group__3__Impl rule__LocalAppender__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__LocalAppender__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__3"


    // $ANTLR start "rule__LocalAppender__Group__3__Impl"
    // InternalMoniLog.g:2504:1: rule__LocalAppender__Group__3__Impl : ( ( rule__LocalAppender__Group_3__0 )? ) ;
    public final void rule__LocalAppender__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2508:1: ( ( ( rule__LocalAppender__Group_3__0 )? ) )
            // InternalMoniLog.g:2509:1: ( ( rule__LocalAppender__Group_3__0 )? )
            {
            // InternalMoniLog.g:2509:1: ( ( rule__LocalAppender__Group_3__0 )? )
            // InternalMoniLog.g:2510:2: ( rule__LocalAppender__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:2511:2: ( rule__LocalAppender__Group_3__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==39) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalMoniLog.g:2511:3: rule__LocalAppender__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalAppender__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__3__Impl"


    // $ANTLR start "rule__LocalAppender__Group__4"
    // InternalMoniLog.g:2519:1: rule__LocalAppender__Group__4 : rule__LocalAppender__Group__4__Impl rule__LocalAppender__Group__5 ;
    public final void rule__LocalAppender__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2523:1: ( rule__LocalAppender__Group__4__Impl rule__LocalAppender__Group__5 )
            // InternalMoniLog.g:2524:2: rule__LocalAppender__Group__4__Impl rule__LocalAppender__Group__5
            {
            pushFollow(FOLLOW_3);
            rule__LocalAppender__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__4"


    // $ANTLR start "rule__LocalAppender__Group__4__Impl"
    // InternalMoniLog.g:2531:1: rule__LocalAppender__Group__4__Impl : ( '{' ) ;
    public final void rule__LocalAppender__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2535:1: ( ( '{' ) )
            // InternalMoniLog.g:2536:1: ( '{' )
            {
            // InternalMoniLog.g:2536:1: ( '{' )
            // InternalMoniLog.g:2537:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getLeftCurlyBracketKeyword_4()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getLeftCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__4__Impl"


    // $ANTLR start "rule__LocalAppender__Group__5"
    // InternalMoniLog.g:2546:1: rule__LocalAppender__Group__5 : rule__LocalAppender__Group__5__Impl rule__LocalAppender__Group__6 ;
    public final void rule__LocalAppender__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2550:1: ( rule__LocalAppender__Group__5__Impl rule__LocalAppender__Group__6 )
            // InternalMoniLog.g:2551:2: rule__LocalAppender__Group__5__Impl rule__LocalAppender__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__LocalAppender__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__5"


    // $ANTLR start "rule__LocalAppender__Group__5__Impl"
    // InternalMoniLog.g:2558:1: rule__LocalAppender__Group__5__Impl : ( ( rule__LocalAppender__CallsAssignment_5 ) ) ;
    public final void rule__LocalAppender__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2562:1: ( ( ( rule__LocalAppender__CallsAssignment_5 ) ) )
            // InternalMoniLog.g:2563:1: ( ( rule__LocalAppender__CallsAssignment_5 ) )
            {
            // InternalMoniLog.g:2563:1: ( ( rule__LocalAppender__CallsAssignment_5 ) )
            // InternalMoniLog.g:2564:2: ( rule__LocalAppender__CallsAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getCallsAssignment_5()); 
            }
            // InternalMoniLog.g:2565:2: ( rule__LocalAppender__CallsAssignment_5 )
            // InternalMoniLog.g:2565:3: rule__LocalAppender__CallsAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__CallsAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getCallsAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__5__Impl"


    // $ANTLR start "rule__LocalAppender__Group__6"
    // InternalMoniLog.g:2573:1: rule__LocalAppender__Group__6 : rule__LocalAppender__Group__6__Impl rule__LocalAppender__Group__7 ;
    public final void rule__LocalAppender__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2577:1: ( rule__LocalAppender__Group__6__Impl rule__LocalAppender__Group__7 )
            // InternalMoniLog.g:2578:2: rule__LocalAppender__Group__6__Impl rule__LocalAppender__Group__7
            {
            pushFollow(FOLLOW_11);
            rule__LocalAppender__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__6"


    // $ANTLR start "rule__LocalAppender__Group__6__Impl"
    // InternalMoniLog.g:2585:1: rule__LocalAppender__Group__6__Impl : ( ( rule__LocalAppender__Group_6__0 )* ) ;
    public final void rule__LocalAppender__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2589:1: ( ( ( rule__LocalAppender__Group_6__0 )* ) )
            // InternalMoniLog.g:2590:1: ( ( rule__LocalAppender__Group_6__0 )* )
            {
            // InternalMoniLog.g:2590:1: ( ( rule__LocalAppender__Group_6__0 )* )
            // InternalMoniLog.g:2591:2: ( rule__LocalAppender__Group_6__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getGroup_6()); 
            }
            // InternalMoniLog.g:2592:2: ( rule__LocalAppender__Group_6__0 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==37) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==RULE_ID) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // InternalMoniLog.g:2592:3: rule__LocalAppender__Group_6__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__LocalAppender__Group_6__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__6__Impl"


    // $ANTLR start "rule__LocalAppender__Group__7"
    // InternalMoniLog.g:2600:1: rule__LocalAppender__Group__7 : rule__LocalAppender__Group__7__Impl rule__LocalAppender__Group__8 ;
    public final void rule__LocalAppender__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2604:1: ( rule__LocalAppender__Group__7__Impl rule__LocalAppender__Group__8 )
            // InternalMoniLog.g:2605:2: rule__LocalAppender__Group__7__Impl rule__LocalAppender__Group__8
            {
            pushFollow(FOLLOW_11);
            rule__LocalAppender__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__7"


    // $ANTLR start "rule__LocalAppender__Group__7__Impl"
    // InternalMoniLog.g:2612:1: rule__LocalAppender__Group__7__Impl : ( ( ';' )? ) ;
    public final void rule__LocalAppender__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2616:1: ( ( ( ';' )? ) )
            // InternalMoniLog.g:2617:1: ( ( ';' )? )
            {
            // InternalMoniLog.g:2617:1: ( ( ';' )? )
            // InternalMoniLog.g:2618:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getSemicolonKeyword_7()); 
            }
            // InternalMoniLog.g:2619:2: ( ';' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==37) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalMoniLog.g:2619:3: ';'
                    {
                    match(input,37,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__7__Impl"


    // $ANTLR start "rule__LocalAppender__Group__8"
    // InternalMoniLog.g:2627:1: rule__LocalAppender__Group__8 : rule__LocalAppender__Group__8__Impl ;
    public final void rule__LocalAppender__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2631:1: ( rule__LocalAppender__Group__8__Impl )
            // InternalMoniLog.g:2632:2: rule__LocalAppender__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__8"


    // $ANTLR start "rule__LocalAppender__Group__8__Impl"
    // InternalMoniLog.g:2638:1: rule__LocalAppender__Group__8__Impl : ( '}' ) ;
    public final void rule__LocalAppender__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2642:1: ( ( '}' ) )
            // InternalMoniLog.g:2643:1: ( '}' )
            {
            // InternalMoniLog.g:2643:1: ( '}' )
            // InternalMoniLog.g:2644:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getRightCurlyBracketKeyword_8()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getRightCurlyBracketKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group__8__Impl"


    // $ANTLR start "rule__LocalAppender__Group_3__0"
    // InternalMoniLog.g:2654:1: rule__LocalAppender__Group_3__0 : rule__LocalAppender__Group_3__0__Impl rule__LocalAppender__Group_3__1 ;
    public final void rule__LocalAppender__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2658:1: ( rule__LocalAppender__Group_3__0__Impl rule__LocalAppender__Group_3__1 )
            // InternalMoniLog.g:2659:2: rule__LocalAppender__Group_3__0__Impl rule__LocalAppender__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__LocalAppender__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__0"


    // $ANTLR start "rule__LocalAppender__Group_3__0__Impl"
    // InternalMoniLog.g:2666:1: rule__LocalAppender__Group_3__0__Impl : ( '(' ) ;
    public final void rule__LocalAppender__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2670:1: ( ( '(' ) )
            // InternalMoniLog.g:2671:1: ( '(' )
            {
            // InternalMoniLog.g:2671:1: ( '(' )
            // InternalMoniLog.g:2672:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__0__Impl"


    // $ANTLR start "rule__LocalAppender__Group_3__1"
    // InternalMoniLog.g:2681:1: rule__LocalAppender__Group_3__1 : rule__LocalAppender__Group_3__1__Impl rule__LocalAppender__Group_3__2 ;
    public final void rule__LocalAppender__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2685:1: ( rule__LocalAppender__Group_3__1__Impl rule__LocalAppender__Group_3__2 )
            // InternalMoniLog.g:2686:2: rule__LocalAppender__Group_3__1__Impl rule__LocalAppender__Group_3__2
            {
            pushFollow(FOLLOW_13);
            rule__LocalAppender__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__1"


    // $ANTLR start "rule__LocalAppender__Group_3__1__Impl"
    // InternalMoniLog.g:2693:1: rule__LocalAppender__Group_3__1__Impl : ( ( rule__LocalAppender__ParameterDeclAssignment_3_1 ) ) ;
    public final void rule__LocalAppender__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2697:1: ( ( ( rule__LocalAppender__ParameterDeclAssignment_3_1 ) ) )
            // InternalMoniLog.g:2698:1: ( ( rule__LocalAppender__ParameterDeclAssignment_3_1 ) )
            {
            // InternalMoniLog.g:2698:1: ( ( rule__LocalAppender__ParameterDeclAssignment_3_1 ) )
            // InternalMoniLog.g:2699:2: ( rule__LocalAppender__ParameterDeclAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getParameterDeclAssignment_3_1()); 
            }
            // InternalMoniLog.g:2700:2: ( rule__LocalAppender__ParameterDeclAssignment_3_1 )
            // InternalMoniLog.g:2700:3: rule__LocalAppender__ParameterDeclAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__ParameterDeclAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getParameterDeclAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__1__Impl"


    // $ANTLR start "rule__LocalAppender__Group_3__2"
    // InternalMoniLog.g:2708:1: rule__LocalAppender__Group_3__2 : rule__LocalAppender__Group_3__2__Impl ;
    public final void rule__LocalAppender__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2712:1: ( rule__LocalAppender__Group_3__2__Impl )
            // InternalMoniLog.g:2713:2: rule__LocalAppender__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__2"


    // $ANTLR start "rule__LocalAppender__Group_3__2__Impl"
    // InternalMoniLog.g:2719:1: rule__LocalAppender__Group_3__2__Impl : ( ')' ) ;
    public final void rule__LocalAppender__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2723:1: ( ( ')' ) )
            // InternalMoniLog.g:2724:1: ( ')' )
            {
            // InternalMoniLog.g:2724:1: ( ')' )
            // InternalMoniLog.g:2725:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_3__2__Impl"


    // $ANTLR start "rule__LocalAppender__Group_6__0"
    // InternalMoniLog.g:2735:1: rule__LocalAppender__Group_6__0 : rule__LocalAppender__Group_6__0__Impl rule__LocalAppender__Group_6__1 ;
    public final void rule__LocalAppender__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2739:1: ( rule__LocalAppender__Group_6__0__Impl rule__LocalAppender__Group_6__1 )
            // InternalMoniLog.g:2740:2: rule__LocalAppender__Group_6__0__Impl rule__LocalAppender__Group_6__1
            {
            pushFollow(FOLLOW_3);
            rule__LocalAppender__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_6__0"


    // $ANTLR start "rule__LocalAppender__Group_6__0__Impl"
    // InternalMoniLog.g:2747:1: rule__LocalAppender__Group_6__0__Impl : ( ';' ) ;
    public final void rule__LocalAppender__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2751:1: ( ( ';' ) )
            // InternalMoniLog.g:2752:1: ( ';' )
            {
            // InternalMoniLog.g:2752:1: ( ';' )
            // InternalMoniLog.g:2753:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getSemicolonKeyword_6_0()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getSemicolonKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_6__0__Impl"


    // $ANTLR start "rule__LocalAppender__Group_6__1"
    // InternalMoniLog.g:2762:1: rule__LocalAppender__Group_6__1 : rule__LocalAppender__Group_6__1__Impl ;
    public final void rule__LocalAppender__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2766:1: ( rule__LocalAppender__Group_6__1__Impl )
            // InternalMoniLog.g:2767:2: rule__LocalAppender__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_6__1"


    // $ANTLR start "rule__LocalAppender__Group_6__1__Impl"
    // InternalMoniLog.g:2773:1: rule__LocalAppender__Group_6__1__Impl : ( ( rule__LocalAppender__CallsAssignment_6_1 ) ) ;
    public final void rule__LocalAppender__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2777:1: ( ( ( rule__LocalAppender__CallsAssignment_6_1 ) ) )
            // InternalMoniLog.g:2778:1: ( ( rule__LocalAppender__CallsAssignment_6_1 ) )
            {
            // InternalMoniLog.g:2778:1: ( ( rule__LocalAppender__CallsAssignment_6_1 ) )
            // InternalMoniLog.g:2779:2: ( rule__LocalAppender__CallsAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getCallsAssignment_6_1()); 
            }
            // InternalMoniLog.g:2780:2: ( rule__LocalAppender__CallsAssignment_6_1 )
            // InternalMoniLog.g:2780:3: rule__LocalAppender__CallsAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalAppender__CallsAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getCallsAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__Group_6__1__Impl"


    // $ANTLR start "rule__ExternalAppender__Group__0"
    // InternalMoniLog.g:2789:1: rule__ExternalAppender__Group__0 : rule__ExternalAppender__Group__0__Impl rule__ExternalAppender__Group__1 ;
    public final void rule__ExternalAppender__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2793:1: ( rule__ExternalAppender__Group__0__Impl rule__ExternalAppender__Group__1 )
            // InternalMoniLog.g:2794:2: rule__ExternalAppender__Group__0__Impl rule__ExternalAppender__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__ExternalAppender__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__0"


    // $ANTLR start "rule__ExternalAppender__Group__0__Impl"
    // InternalMoniLog.g:2801:1: rule__ExternalAppender__Group__0__Impl : ( 'appender' ) ;
    public final void rule__ExternalAppender__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2805:1: ( ( 'appender' ) )
            // InternalMoniLog.g:2806:1: ( 'appender' )
            {
            // InternalMoniLog.g:2806:1: ( 'appender' )
            // InternalMoniLog.g:2807:2: 'appender'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getAppenderKeyword_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getAppenderKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__0__Impl"


    // $ANTLR start "rule__ExternalAppender__Group__1"
    // InternalMoniLog.g:2816:1: rule__ExternalAppender__Group__1 : rule__ExternalAppender__Group__1__Impl rule__ExternalAppender__Group__2 ;
    public final void rule__ExternalAppender__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2820:1: ( rule__ExternalAppender__Group__1__Impl rule__ExternalAppender__Group__2 )
            // InternalMoniLog.g:2821:2: rule__ExternalAppender__Group__1__Impl rule__ExternalAppender__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__ExternalAppender__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__1"


    // $ANTLR start "rule__ExternalAppender__Group__1__Impl"
    // InternalMoniLog.g:2828:1: rule__ExternalAppender__Group__1__Impl : ( ( rule__ExternalAppender__NameAssignment_1 ) ) ;
    public final void rule__ExternalAppender__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2832:1: ( ( ( rule__ExternalAppender__NameAssignment_1 ) ) )
            // InternalMoniLog.g:2833:1: ( ( rule__ExternalAppender__NameAssignment_1 ) )
            {
            // InternalMoniLog.g:2833:1: ( ( rule__ExternalAppender__NameAssignment_1 ) )
            // InternalMoniLog.g:2834:2: ( rule__ExternalAppender__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getNameAssignment_1()); 
            }
            // InternalMoniLog.g:2835:2: ( rule__ExternalAppender__NameAssignment_1 )
            // InternalMoniLog.g:2835:3: rule__ExternalAppender__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__1__Impl"


    // $ANTLR start "rule__ExternalAppender__Group__2"
    // InternalMoniLog.g:2843:1: rule__ExternalAppender__Group__2 : rule__ExternalAppender__Group__2__Impl ;
    public final void rule__ExternalAppender__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2847:1: ( rule__ExternalAppender__Group__2__Impl )
            // InternalMoniLog.g:2848:2: rule__ExternalAppender__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__2"


    // $ANTLR start "rule__ExternalAppender__Group__2__Impl"
    // InternalMoniLog.g:2854:1: rule__ExternalAppender__Group__2__Impl : ( ( rule__ExternalAppender__Group_2__0 )? ) ;
    public final void rule__ExternalAppender__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2858:1: ( ( ( rule__ExternalAppender__Group_2__0 )? ) )
            // InternalMoniLog.g:2859:1: ( ( rule__ExternalAppender__Group_2__0 )? )
            {
            // InternalMoniLog.g:2859:1: ( ( rule__ExternalAppender__Group_2__0 )? )
            // InternalMoniLog.g:2860:2: ( rule__ExternalAppender__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getGroup_2()); 
            }
            // InternalMoniLog.g:2861:2: ( rule__ExternalAppender__Group_2__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==39) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalMoniLog.g:2861:3: rule__ExternalAppender__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExternalAppender__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group__2__Impl"


    // $ANTLR start "rule__ExternalAppender__Group_2__0"
    // InternalMoniLog.g:2870:1: rule__ExternalAppender__Group_2__0 : rule__ExternalAppender__Group_2__0__Impl rule__ExternalAppender__Group_2__1 ;
    public final void rule__ExternalAppender__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2874:1: ( rule__ExternalAppender__Group_2__0__Impl rule__ExternalAppender__Group_2__1 )
            // InternalMoniLog.g:2875:2: rule__ExternalAppender__Group_2__0__Impl rule__ExternalAppender__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__ExternalAppender__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__0"


    // $ANTLR start "rule__ExternalAppender__Group_2__0__Impl"
    // InternalMoniLog.g:2882:1: rule__ExternalAppender__Group_2__0__Impl : ( '(' ) ;
    public final void rule__ExternalAppender__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2886:1: ( ( '(' ) )
            // InternalMoniLog.g:2887:1: ( '(' )
            {
            // InternalMoniLog.g:2887:1: ( '(' )
            // InternalMoniLog.g:2888:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__0__Impl"


    // $ANTLR start "rule__ExternalAppender__Group_2__1"
    // InternalMoniLog.g:2897:1: rule__ExternalAppender__Group_2__1 : rule__ExternalAppender__Group_2__1__Impl rule__ExternalAppender__Group_2__2 ;
    public final void rule__ExternalAppender__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2901:1: ( rule__ExternalAppender__Group_2__1__Impl rule__ExternalAppender__Group_2__2 )
            // InternalMoniLog.g:2902:2: rule__ExternalAppender__Group_2__1__Impl rule__ExternalAppender__Group_2__2
            {
            pushFollow(FOLLOW_13);
            rule__ExternalAppender__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__1"


    // $ANTLR start "rule__ExternalAppender__Group_2__1__Impl"
    // InternalMoniLog.g:2909:1: rule__ExternalAppender__Group_2__1__Impl : ( ( rule__ExternalAppender__ParameterDeclAssignment_2_1 ) ) ;
    public final void rule__ExternalAppender__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2913:1: ( ( ( rule__ExternalAppender__ParameterDeclAssignment_2_1 ) ) )
            // InternalMoniLog.g:2914:1: ( ( rule__ExternalAppender__ParameterDeclAssignment_2_1 ) )
            {
            // InternalMoniLog.g:2914:1: ( ( rule__ExternalAppender__ParameterDeclAssignment_2_1 ) )
            // InternalMoniLog.g:2915:2: ( rule__ExternalAppender__ParameterDeclAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getParameterDeclAssignment_2_1()); 
            }
            // InternalMoniLog.g:2916:2: ( rule__ExternalAppender__ParameterDeclAssignment_2_1 )
            // InternalMoniLog.g:2916:3: rule__ExternalAppender__ParameterDeclAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__ParameterDeclAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getParameterDeclAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__1__Impl"


    // $ANTLR start "rule__ExternalAppender__Group_2__2"
    // InternalMoniLog.g:2924:1: rule__ExternalAppender__Group_2__2 : rule__ExternalAppender__Group_2__2__Impl ;
    public final void rule__ExternalAppender__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2928:1: ( rule__ExternalAppender__Group_2__2__Impl )
            // InternalMoniLog.g:2929:2: rule__ExternalAppender__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExternalAppender__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__2"


    // $ANTLR start "rule__ExternalAppender__Group_2__2__Impl"
    // InternalMoniLog.g:2935:1: rule__ExternalAppender__Group_2__2__Impl : ( ')' ) ;
    public final void rule__ExternalAppender__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2939:1: ( ( ')' ) )
            // InternalMoniLog.g:2940:1: ( ')' )
            {
            // InternalMoniLog.g:2940:1: ( ')' )
            // InternalMoniLog.g:2941:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__Group_2__2__Impl"


    // $ANTLR start "rule__LocalLayout__Group__0"
    // InternalMoniLog.g:2951:1: rule__LocalLayout__Group__0 : rule__LocalLayout__Group__0__Impl rule__LocalLayout__Group__1 ;
    public final void rule__LocalLayout__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2955:1: ( rule__LocalLayout__Group__0__Impl rule__LocalLayout__Group__1 )
            // InternalMoniLog.g:2956:2: rule__LocalLayout__Group__0__Impl rule__LocalLayout__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__LocalLayout__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__0"


    // $ANTLR start "rule__LocalLayout__Group__0__Impl"
    // InternalMoniLog.g:2963:1: rule__LocalLayout__Group__0__Impl : ( 'layout' ) ;
    public final void rule__LocalLayout__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2967:1: ( ( 'layout' ) )
            // InternalMoniLog.g:2968:1: ( 'layout' )
            {
            // InternalMoniLog.g:2968:1: ( 'layout' )
            // InternalMoniLog.g:2969:2: 'layout'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getLayoutKeyword_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getLayoutKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__0__Impl"


    // $ANTLR start "rule__LocalLayout__Group__1"
    // InternalMoniLog.g:2978:1: rule__LocalLayout__Group__1 : rule__LocalLayout__Group__1__Impl rule__LocalLayout__Group__2 ;
    public final void rule__LocalLayout__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2982:1: ( rule__LocalLayout__Group__1__Impl rule__LocalLayout__Group__2 )
            // InternalMoniLog.g:2983:2: rule__LocalLayout__Group__1__Impl rule__LocalLayout__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__LocalLayout__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__1"


    // $ANTLR start "rule__LocalLayout__Group__1__Impl"
    // InternalMoniLog.g:2990:1: rule__LocalLayout__Group__1__Impl : ( ( rule__LocalLayout__NameAssignment_1 ) ) ;
    public final void rule__LocalLayout__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:2994:1: ( ( ( rule__LocalLayout__NameAssignment_1 ) ) )
            // InternalMoniLog.g:2995:1: ( ( rule__LocalLayout__NameAssignment_1 ) )
            {
            // InternalMoniLog.g:2995:1: ( ( rule__LocalLayout__NameAssignment_1 ) )
            // InternalMoniLog.g:2996:2: ( rule__LocalLayout__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getNameAssignment_1()); 
            }
            // InternalMoniLog.g:2997:2: ( rule__LocalLayout__NameAssignment_1 )
            // InternalMoniLog.g:2997:3: rule__LocalLayout__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__1__Impl"


    // $ANTLR start "rule__LocalLayout__Group__2"
    // InternalMoniLog.g:3005:1: rule__LocalLayout__Group__2 : rule__LocalLayout__Group__2__Impl rule__LocalLayout__Group__3 ;
    public final void rule__LocalLayout__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3009:1: ( rule__LocalLayout__Group__2__Impl rule__LocalLayout__Group__3 )
            // InternalMoniLog.g:3010:2: rule__LocalLayout__Group__2__Impl rule__LocalLayout__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__LocalLayout__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__2"


    // $ANTLR start "rule__LocalLayout__Group__2__Impl"
    // InternalMoniLog.g:3017:1: rule__LocalLayout__Group__2__Impl : ( ( rule__LocalLayout__Group_2__0 )? ) ;
    public final void rule__LocalLayout__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3021:1: ( ( ( rule__LocalLayout__Group_2__0 )? ) )
            // InternalMoniLog.g:3022:1: ( ( rule__LocalLayout__Group_2__0 )? )
            {
            // InternalMoniLog.g:3022:1: ( ( rule__LocalLayout__Group_2__0 )? )
            // InternalMoniLog.g:3023:2: ( rule__LocalLayout__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getGroup_2()); 
            }
            // InternalMoniLog.g:3024:2: ( rule__LocalLayout__Group_2__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==39) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalMoniLog.g:3024:3: rule__LocalLayout__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalLayout__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__2__Impl"


    // $ANTLR start "rule__LocalLayout__Group__3"
    // InternalMoniLog.g:3032:1: rule__LocalLayout__Group__3 : rule__LocalLayout__Group__3__Impl rule__LocalLayout__Group__4 ;
    public final void rule__LocalLayout__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3036:1: ( rule__LocalLayout__Group__3__Impl rule__LocalLayout__Group__4 )
            // InternalMoniLog.g:3037:2: rule__LocalLayout__Group__3__Impl rule__LocalLayout__Group__4
            {
            pushFollow(FOLLOW_3);
            rule__LocalLayout__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__3"


    // $ANTLR start "rule__LocalLayout__Group__3__Impl"
    // InternalMoniLog.g:3044:1: rule__LocalLayout__Group__3__Impl : ( '{' ) ;
    public final void rule__LocalLayout__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3048:1: ( ( '{' ) )
            // InternalMoniLog.g:3049:1: ( '{' )
            {
            // InternalMoniLog.g:3049:1: ( '{' )
            // InternalMoniLog.g:3050:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__3__Impl"


    // $ANTLR start "rule__LocalLayout__Group__4"
    // InternalMoniLog.g:3059:1: rule__LocalLayout__Group__4 : rule__LocalLayout__Group__4__Impl rule__LocalLayout__Group__5 ;
    public final void rule__LocalLayout__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3063:1: ( rule__LocalLayout__Group__4__Impl rule__LocalLayout__Group__5 )
            // InternalMoniLog.g:3064:2: rule__LocalLayout__Group__4__Impl rule__LocalLayout__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__LocalLayout__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__4"


    // $ANTLR start "rule__LocalLayout__Group__4__Impl"
    // InternalMoniLog.g:3071:1: rule__LocalLayout__Group__4__Impl : ( ( rule__LocalLayout__CallAssignment_4 ) ) ;
    public final void rule__LocalLayout__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3075:1: ( ( ( rule__LocalLayout__CallAssignment_4 ) ) )
            // InternalMoniLog.g:3076:1: ( ( rule__LocalLayout__CallAssignment_4 ) )
            {
            // InternalMoniLog.g:3076:1: ( ( rule__LocalLayout__CallAssignment_4 ) )
            // InternalMoniLog.g:3077:2: ( rule__LocalLayout__CallAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getCallAssignment_4()); 
            }
            // InternalMoniLog.g:3078:2: ( rule__LocalLayout__CallAssignment_4 )
            // InternalMoniLog.g:3078:3: rule__LocalLayout__CallAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__CallAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getCallAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__4__Impl"


    // $ANTLR start "rule__LocalLayout__Group__5"
    // InternalMoniLog.g:3086:1: rule__LocalLayout__Group__5 : rule__LocalLayout__Group__5__Impl ;
    public final void rule__LocalLayout__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3090:1: ( rule__LocalLayout__Group__5__Impl )
            // InternalMoniLog.g:3091:2: rule__LocalLayout__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__5"


    // $ANTLR start "rule__LocalLayout__Group__5__Impl"
    // InternalMoniLog.g:3097:1: rule__LocalLayout__Group__5__Impl : ( '}' ) ;
    public final void rule__LocalLayout__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3101:1: ( ( '}' ) )
            // InternalMoniLog.g:3102:1: ( '}' )
            {
            // InternalMoniLog.g:3102:1: ( '}' )
            // InternalMoniLog.g:3103:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group__5__Impl"


    // $ANTLR start "rule__LocalLayout__Group_2__0"
    // InternalMoniLog.g:3113:1: rule__LocalLayout__Group_2__0 : rule__LocalLayout__Group_2__0__Impl rule__LocalLayout__Group_2__1 ;
    public final void rule__LocalLayout__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3117:1: ( rule__LocalLayout__Group_2__0__Impl rule__LocalLayout__Group_2__1 )
            // InternalMoniLog.g:3118:2: rule__LocalLayout__Group_2__0__Impl rule__LocalLayout__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__LocalLayout__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__0"


    // $ANTLR start "rule__LocalLayout__Group_2__0__Impl"
    // InternalMoniLog.g:3125:1: rule__LocalLayout__Group_2__0__Impl : ( '(' ) ;
    public final void rule__LocalLayout__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3129:1: ( ( '(' ) )
            // InternalMoniLog.g:3130:1: ( '(' )
            {
            // InternalMoniLog.g:3130:1: ( '(' )
            // InternalMoniLog.g:3131:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__0__Impl"


    // $ANTLR start "rule__LocalLayout__Group_2__1"
    // InternalMoniLog.g:3140:1: rule__LocalLayout__Group_2__1 : rule__LocalLayout__Group_2__1__Impl rule__LocalLayout__Group_2__2 ;
    public final void rule__LocalLayout__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3144:1: ( rule__LocalLayout__Group_2__1__Impl rule__LocalLayout__Group_2__2 )
            // InternalMoniLog.g:3145:2: rule__LocalLayout__Group_2__1__Impl rule__LocalLayout__Group_2__2
            {
            pushFollow(FOLLOW_13);
            rule__LocalLayout__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__1"


    // $ANTLR start "rule__LocalLayout__Group_2__1__Impl"
    // InternalMoniLog.g:3152:1: rule__LocalLayout__Group_2__1__Impl : ( ( rule__LocalLayout__ParameterDeclAssignment_2_1 ) ) ;
    public final void rule__LocalLayout__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3156:1: ( ( ( rule__LocalLayout__ParameterDeclAssignment_2_1 ) ) )
            // InternalMoniLog.g:3157:1: ( ( rule__LocalLayout__ParameterDeclAssignment_2_1 ) )
            {
            // InternalMoniLog.g:3157:1: ( ( rule__LocalLayout__ParameterDeclAssignment_2_1 ) )
            // InternalMoniLog.g:3158:2: ( rule__LocalLayout__ParameterDeclAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getParameterDeclAssignment_2_1()); 
            }
            // InternalMoniLog.g:3159:2: ( rule__LocalLayout__ParameterDeclAssignment_2_1 )
            // InternalMoniLog.g:3159:3: rule__LocalLayout__ParameterDeclAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__ParameterDeclAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getParameterDeclAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__1__Impl"


    // $ANTLR start "rule__LocalLayout__Group_2__2"
    // InternalMoniLog.g:3167:1: rule__LocalLayout__Group_2__2 : rule__LocalLayout__Group_2__2__Impl ;
    public final void rule__LocalLayout__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3171:1: ( rule__LocalLayout__Group_2__2__Impl )
            // InternalMoniLog.g:3172:2: rule__LocalLayout__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalLayout__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__2"


    // $ANTLR start "rule__LocalLayout__Group_2__2__Impl"
    // InternalMoniLog.g:3178:1: rule__LocalLayout__Group_2__2__Impl : ( ')' ) ;
    public final void rule__LocalLayout__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3182:1: ( ( ')' ) )
            // InternalMoniLog.g:3183:1: ( ')' )
            {
            // InternalMoniLog.g:3183:1: ( ')' )
            // InternalMoniLog.g:3184:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__Group_2__2__Impl"


    // $ANTLR start "rule__ExternalLayout__Group__0"
    // InternalMoniLog.g:3194:1: rule__ExternalLayout__Group__0 : rule__ExternalLayout__Group__0__Impl rule__ExternalLayout__Group__1 ;
    public final void rule__ExternalLayout__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3198:1: ( rule__ExternalLayout__Group__0__Impl rule__ExternalLayout__Group__1 )
            // InternalMoniLog.g:3199:2: rule__ExternalLayout__Group__0__Impl rule__ExternalLayout__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__ExternalLayout__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__0"


    // $ANTLR start "rule__ExternalLayout__Group__0__Impl"
    // InternalMoniLog.g:3206:1: rule__ExternalLayout__Group__0__Impl : ( 'layout' ) ;
    public final void rule__ExternalLayout__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3210:1: ( ( 'layout' ) )
            // InternalMoniLog.g:3211:1: ( 'layout' )
            {
            // InternalMoniLog.g:3211:1: ( 'layout' )
            // InternalMoniLog.g:3212:2: 'layout'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getLayoutKeyword_0()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getLayoutKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__0__Impl"


    // $ANTLR start "rule__ExternalLayout__Group__1"
    // InternalMoniLog.g:3221:1: rule__ExternalLayout__Group__1 : rule__ExternalLayout__Group__1__Impl rule__ExternalLayout__Group__2 ;
    public final void rule__ExternalLayout__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3225:1: ( rule__ExternalLayout__Group__1__Impl rule__ExternalLayout__Group__2 )
            // InternalMoniLog.g:3226:2: rule__ExternalLayout__Group__1__Impl rule__ExternalLayout__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__ExternalLayout__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__1"


    // $ANTLR start "rule__ExternalLayout__Group__1__Impl"
    // InternalMoniLog.g:3233:1: rule__ExternalLayout__Group__1__Impl : ( ( rule__ExternalLayout__NameAssignment_1 ) ) ;
    public final void rule__ExternalLayout__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3237:1: ( ( ( rule__ExternalLayout__NameAssignment_1 ) ) )
            // InternalMoniLog.g:3238:1: ( ( rule__ExternalLayout__NameAssignment_1 ) )
            {
            // InternalMoniLog.g:3238:1: ( ( rule__ExternalLayout__NameAssignment_1 ) )
            // InternalMoniLog.g:3239:2: ( rule__ExternalLayout__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getNameAssignment_1()); 
            }
            // InternalMoniLog.g:3240:2: ( rule__ExternalLayout__NameAssignment_1 )
            // InternalMoniLog.g:3240:3: rule__ExternalLayout__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__1__Impl"


    // $ANTLR start "rule__ExternalLayout__Group__2"
    // InternalMoniLog.g:3248:1: rule__ExternalLayout__Group__2 : rule__ExternalLayout__Group__2__Impl ;
    public final void rule__ExternalLayout__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3252:1: ( rule__ExternalLayout__Group__2__Impl )
            // InternalMoniLog.g:3253:2: rule__ExternalLayout__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__2"


    // $ANTLR start "rule__ExternalLayout__Group__2__Impl"
    // InternalMoniLog.g:3259:1: rule__ExternalLayout__Group__2__Impl : ( ( rule__ExternalLayout__Group_2__0 )? ) ;
    public final void rule__ExternalLayout__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3263:1: ( ( ( rule__ExternalLayout__Group_2__0 )? ) )
            // InternalMoniLog.g:3264:1: ( ( rule__ExternalLayout__Group_2__0 )? )
            {
            // InternalMoniLog.g:3264:1: ( ( rule__ExternalLayout__Group_2__0 )? )
            // InternalMoniLog.g:3265:2: ( rule__ExternalLayout__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getGroup_2()); 
            }
            // InternalMoniLog.g:3266:2: ( rule__ExternalLayout__Group_2__0 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==39) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalMoniLog.g:3266:3: rule__ExternalLayout__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExternalLayout__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group__2__Impl"


    // $ANTLR start "rule__ExternalLayout__Group_2__0"
    // InternalMoniLog.g:3275:1: rule__ExternalLayout__Group_2__0 : rule__ExternalLayout__Group_2__0__Impl rule__ExternalLayout__Group_2__1 ;
    public final void rule__ExternalLayout__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3279:1: ( rule__ExternalLayout__Group_2__0__Impl rule__ExternalLayout__Group_2__1 )
            // InternalMoniLog.g:3280:2: rule__ExternalLayout__Group_2__0__Impl rule__ExternalLayout__Group_2__1
            {
            pushFollow(FOLLOW_3);
            rule__ExternalLayout__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__0"


    // $ANTLR start "rule__ExternalLayout__Group_2__0__Impl"
    // InternalMoniLog.g:3287:1: rule__ExternalLayout__Group_2__0__Impl : ( '(' ) ;
    public final void rule__ExternalLayout__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3291:1: ( ( '(' ) )
            // InternalMoniLog.g:3292:1: ( '(' )
            {
            // InternalMoniLog.g:3292:1: ( '(' )
            // InternalMoniLog.g:3293:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__0__Impl"


    // $ANTLR start "rule__ExternalLayout__Group_2__1"
    // InternalMoniLog.g:3302:1: rule__ExternalLayout__Group_2__1 : rule__ExternalLayout__Group_2__1__Impl rule__ExternalLayout__Group_2__2 ;
    public final void rule__ExternalLayout__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3306:1: ( rule__ExternalLayout__Group_2__1__Impl rule__ExternalLayout__Group_2__2 )
            // InternalMoniLog.g:3307:2: rule__ExternalLayout__Group_2__1__Impl rule__ExternalLayout__Group_2__2
            {
            pushFollow(FOLLOW_13);
            rule__ExternalLayout__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__1"


    // $ANTLR start "rule__ExternalLayout__Group_2__1__Impl"
    // InternalMoniLog.g:3314:1: rule__ExternalLayout__Group_2__1__Impl : ( ( rule__ExternalLayout__ParameterDeclAssignment_2_1 ) ) ;
    public final void rule__ExternalLayout__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3318:1: ( ( ( rule__ExternalLayout__ParameterDeclAssignment_2_1 ) ) )
            // InternalMoniLog.g:3319:1: ( ( rule__ExternalLayout__ParameterDeclAssignment_2_1 ) )
            {
            // InternalMoniLog.g:3319:1: ( ( rule__ExternalLayout__ParameterDeclAssignment_2_1 ) )
            // InternalMoniLog.g:3320:2: ( rule__ExternalLayout__ParameterDeclAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getParameterDeclAssignment_2_1()); 
            }
            // InternalMoniLog.g:3321:2: ( rule__ExternalLayout__ParameterDeclAssignment_2_1 )
            // InternalMoniLog.g:3321:3: rule__ExternalLayout__ParameterDeclAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__ParameterDeclAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getParameterDeclAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__1__Impl"


    // $ANTLR start "rule__ExternalLayout__Group_2__2"
    // InternalMoniLog.g:3329:1: rule__ExternalLayout__Group_2__2 : rule__ExternalLayout__Group_2__2__Impl ;
    public final void rule__ExternalLayout__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3333:1: ( rule__ExternalLayout__Group_2__2__Impl )
            // InternalMoniLog.g:3334:2: rule__ExternalLayout__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExternalLayout__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__2"


    // $ANTLR start "rule__ExternalLayout__Group_2__2__Impl"
    // InternalMoniLog.g:3340:1: rule__ExternalLayout__Group_2__2__Impl : ( ')' ) ;
    public final void rule__ExternalLayout__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3344:1: ( ( ')' ) )
            // InternalMoniLog.g:3345:1: ( ')' )
            {
            // InternalMoniLog.g:3345:1: ( ')' )
            // InternalMoniLog.g:3346:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__Group_2__2__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group__0"
    // InternalMoniLog.g:3356:1: rule__ParameterDeclVarArgs__Group__0 : rule__ParameterDeclVarArgs__Group__0__Impl rule__ParameterDeclVarArgs__Group__1 ;
    public final void rule__ParameterDeclVarArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3360:1: ( rule__ParameterDeclVarArgs__Group__0__Impl rule__ParameterDeclVarArgs__Group__1 )
            // InternalMoniLog.g:3361:2: rule__ParameterDeclVarArgs__Group__0__Impl rule__ParameterDeclVarArgs__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__ParameterDeclVarArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group__0"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group__0__Impl"
    // InternalMoniLog.g:3368:1: rule__ParameterDeclVarArgs__Group__0__Impl : ( () ) ;
    public final void rule__ParameterDeclVarArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3372:1: ( ( () ) )
            // InternalMoniLog.g:3373:1: ( () )
            {
            // InternalMoniLog.g:3373:1: ( () )
            // InternalMoniLog.g:3374:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getParameterDeclAction_0()); 
            }
            // InternalMoniLog.g:3375:2: ()
            // InternalMoniLog.g:3375:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getParameterDeclAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group__1"
    // InternalMoniLog.g:3383:1: rule__ParameterDeclVarArgs__Group__1 : rule__ParameterDeclVarArgs__Group__1__Impl ;
    public final void rule__ParameterDeclVarArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3387:1: ( rule__ParameterDeclVarArgs__Group__1__Impl )
            // InternalMoniLog.g:3388:2: rule__ParameterDeclVarArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group__1"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group__1__Impl"
    // InternalMoniLog.g:3394:1: rule__ParameterDeclVarArgs__Group__1__Impl : ( ( rule__ParameterDeclVarArgs__Group_1__0 )? ) ;
    public final void rule__ParameterDeclVarArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3398:1: ( ( ( rule__ParameterDeclVarArgs__Group_1__0 )? ) )
            // InternalMoniLog.g:3399:1: ( ( rule__ParameterDeclVarArgs__Group_1__0 )? )
            {
            // InternalMoniLog.g:3399:1: ( ( rule__ParameterDeclVarArgs__Group_1__0 )? )
            // InternalMoniLog.g:3400:2: ( rule__ParameterDeclVarArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:3401:2: ( rule__ParameterDeclVarArgs__Group_1__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_ID) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalMoniLog.g:3401:3: rule__ParameterDeclVarArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterDeclVarArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group__1__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__0"
    // InternalMoniLog.g:3410:1: rule__ParameterDeclVarArgs__Group_1__0 : rule__ParameterDeclVarArgs__Group_1__0__Impl rule__ParameterDeclVarArgs__Group_1__1 ;
    public final void rule__ParameterDeclVarArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3414:1: ( rule__ParameterDeclVarArgs__Group_1__0__Impl rule__ParameterDeclVarArgs__Group_1__1 )
            // InternalMoniLog.g:3415:2: rule__ParameterDeclVarArgs__Group_1__0__Impl rule__ParameterDeclVarArgs__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ParameterDeclVarArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__0"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__0__Impl"
    // InternalMoniLog.g:3422:1: rule__ParameterDeclVarArgs__Group_1__0__Impl : ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 ) ) ;
    public final void rule__ParameterDeclVarArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3426:1: ( ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 ) ) )
            // InternalMoniLog.g:3427:1: ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 ) )
            {
            // InternalMoniLog.g:3427:1: ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 ) )
            // InternalMoniLog.g:3428:2: ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getParametersAssignment_1_0()); 
            }
            // InternalMoniLog.g:3429:2: ( rule__ParameterDeclVarArgs__ParametersAssignment_1_0 )
            // InternalMoniLog.g:3429:3: rule__ParameterDeclVarArgs__ParametersAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__ParametersAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getParametersAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__1"
    // InternalMoniLog.g:3437:1: rule__ParameterDeclVarArgs__Group_1__1 : rule__ParameterDeclVarArgs__Group_1__1__Impl rule__ParameterDeclVarArgs__Group_1__2 ;
    public final void rule__ParameterDeclVarArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3441:1: ( rule__ParameterDeclVarArgs__Group_1__1__Impl rule__ParameterDeclVarArgs__Group_1__2 )
            // InternalMoniLog.g:3442:2: rule__ParameterDeclVarArgs__Group_1__1__Impl rule__ParameterDeclVarArgs__Group_1__2
            {
            pushFollow(FOLLOW_16);
            rule__ParameterDeclVarArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__1"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__1__Impl"
    // InternalMoniLog.g:3449:1: rule__ParameterDeclVarArgs__Group_1__1__Impl : ( ( rule__ParameterDeclVarArgs__Group_1_1__0 )* ) ;
    public final void rule__ParameterDeclVarArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3453:1: ( ( ( rule__ParameterDeclVarArgs__Group_1_1__0 )* ) )
            // InternalMoniLog.g:3454:1: ( ( rule__ParameterDeclVarArgs__Group_1_1__0 )* )
            {
            // InternalMoniLog.g:3454:1: ( ( rule__ParameterDeclVarArgs__Group_1_1__0 )* )
            // InternalMoniLog.g:3455:2: ( rule__ParameterDeclVarArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1_1()); 
            }
            // InternalMoniLog.g:3456:2: ( rule__ParameterDeclVarArgs__Group_1_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==42) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==RULE_ID) ) {
                        int LA34_3 = input.LA(3);

                        if ( (LA34_3==EOF||LA34_3==40||LA34_3==42) ) {
                            alt34=1;
                        }


                    }


                }


                switch (alt34) {
            	case 1 :
            	    // InternalMoniLog.g:3456:3: rule__ParameterDeclVarArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__ParameterDeclVarArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__2"
    // InternalMoniLog.g:3464:1: rule__ParameterDeclVarArgs__Group_1__2 : rule__ParameterDeclVarArgs__Group_1__2__Impl ;
    public final void rule__ParameterDeclVarArgs__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3468:1: ( rule__ParameterDeclVarArgs__Group_1__2__Impl )
            // InternalMoniLog.g:3469:2: rule__ParameterDeclVarArgs__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__2"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1__2__Impl"
    // InternalMoniLog.g:3475:1: rule__ParameterDeclVarArgs__Group_1__2__Impl : ( ( rule__ParameterDeclVarArgs__Group_1_2__0 )? ) ;
    public final void rule__ParameterDeclVarArgs__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3479:1: ( ( ( rule__ParameterDeclVarArgs__Group_1_2__0 )? ) )
            // InternalMoniLog.g:3480:1: ( ( rule__ParameterDeclVarArgs__Group_1_2__0 )? )
            {
            // InternalMoniLog.g:3480:1: ( ( rule__ParameterDeclVarArgs__Group_1_2__0 )? )
            // InternalMoniLog.g:3481:2: ( rule__ParameterDeclVarArgs__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1_2()); 
            }
            // InternalMoniLog.g:3482:2: ( rule__ParameterDeclVarArgs__Group_1_2__0 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==42) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalMoniLog.g:3482:3: rule__ParameterDeclVarArgs__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterDeclVarArgs__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1__2__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_1__0"
    // InternalMoniLog.g:3491:1: rule__ParameterDeclVarArgs__Group_1_1__0 : rule__ParameterDeclVarArgs__Group_1_1__0__Impl rule__ParameterDeclVarArgs__Group_1_1__1 ;
    public final void rule__ParameterDeclVarArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3495:1: ( rule__ParameterDeclVarArgs__Group_1_1__0__Impl rule__ParameterDeclVarArgs__Group_1_1__1 )
            // InternalMoniLog.g:3496:2: rule__ParameterDeclVarArgs__Group_1_1__0__Impl rule__ParameterDeclVarArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_3);
            rule__ParameterDeclVarArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_1__0"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_1__0__Impl"
    // InternalMoniLog.g:3503:1: rule__ParameterDeclVarArgs__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterDeclVarArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3507:1: ( ( ',' ) )
            // InternalMoniLog.g:3508:1: ( ',' )
            {
            // InternalMoniLog.g:3508:1: ( ',' )
            // InternalMoniLog.g:3509:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_1__1"
    // InternalMoniLog.g:3518:1: rule__ParameterDeclVarArgs__Group_1_1__1 : rule__ParameterDeclVarArgs__Group_1_1__1__Impl ;
    public final void rule__ParameterDeclVarArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3522:1: ( rule__ParameterDeclVarArgs__Group_1_1__1__Impl )
            // InternalMoniLog.g:3523:2: rule__ParameterDeclVarArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_1__1"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_1__1__Impl"
    // InternalMoniLog.g:3529:1: rule__ParameterDeclVarArgs__Group_1_1__1__Impl : ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 ) ) ;
    public final void rule__ParameterDeclVarArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3533:1: ( ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 ) ) )
            // InternalMoniLog.g:3534:1: ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 ) )
            {
            // InternalMoniLog.g:3534:1: ( ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 ) )
            // InternalMoniLog.g:3535:2: ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getParametersAssignment_1_1_1()); 
            }
            // InternalMoniLog.g:3536:2: ( rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 )
            // InternalMoniLog.g:3536:3: rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getParametersAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__0"
    // InternalMoniLog.g:3545:1: rule__ParameterDeclVarArgs__Group_1_2__0 : rule__ParameterDeclVarArgs__Group_1_2__0__Impl rule__ParameterDeclVarArgs__Group_1_2__1 ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3549:1: ( rule__ParameterDeclVarArgs__Group_1_2__0__Impl rule__ParameterDeclVarArgs__Group_1_2__1 )
            // InternalMoniLog.g:3550:2: rule__ParameterDeclVarArgs__Group_1_2__0__Impl rule__ParameterDeclVarArgs__Group_1_2__1
            {
            pushFollow(FOLLOW_3);
            rule__ParameterDeclVarArgs__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__0"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__0__Impl"
    // InternalMoniLog.g:3557:1: rule__ParameterDeclVarArgs__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3561:1: ( ( ',' ) )
            // InternalMoniLog.g:3562:1: ( ',' )
            {
            // InternalMoniLog.g:3562:1: ( ',' )
            // InternalMoniLog.g:3563:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__0__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__1"
    // InternalMoniLog.g:3572:1: rule__ParameterDeclVarArgs__Group_1_2__1 : rule__ParameterDeclVarArgs__Group_1_2__1__Impl rule__ParameterDeclVarArgs__Group_1_2__2 ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3576:1: ( rule__ParameterDeclVarArgs__Group_1_2__1__Impl rule__ParameterDeclVarArgs__Group_1_2__2 )
            // InternalMoniLog.g:3577:2: rule__ParameterDeclVarArgs__Group_1_2__1__Impl rule__ParameterDeclVarArgs__Group_1_2__2
            {
            pushFollow(FOLLOW_18);
            rule__ParameterDeclVarArgs__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__1"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__1__Impl"
    // InternalMoniLog.g:3584:1: rule__ParameterDeclVarArgs__Group_1_2__1__Impl : ( ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 ) ) ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3588:1: ( ( ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 ) ) )
            // InternalMoniLog.g:3589:1: ( ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 ) )
            {
            // InternalMoniLog.g:3589:1: ( ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 ) )
            // InternalMoniLog.g:3590:2: ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getVarArgsAssignment_1_2_1()); 
            }
            // InternalMoniLog.g:3591:2: ( rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 )
            // InternalMoniLog.g:3591:3: rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getVarArgsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__2"
    // InternalMoniLog.g:3599:1: rule__ParameterDeclVarArgs__Group_1_2__2 : rule__ParameterDeclVarArgs__Group_1_2__2__Impl ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3603:1: ( rule__ParameterDeclVarArgs__Group_1_2__2__Impl )
            // InternalMoniLog.g:3604:2: rule__ParameterDeclVarArgs__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclVarArgs__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__2"


    // $ANTLR start "rule__ParameterDeclVarArgs__Group_1_2__2__Impl"
    // InternalMoniLog.g:3610:1: rule__ParameterDeclVarArgs__Group_1_2__2__Impl : ( '...' ) ;
    public final void rule__ParameterDeclVarArgs__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3614:1: ( ( '...' ) )
            // InternalMoniLog.g:3615:1: ( '...' )
            {
            // InternalMoniLog.g:3615:1: ( '...' )
            // InternalMoniLog.g:3616:2: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getFullStopFullStopFullStopKeyword_1_2_2()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getFullStopFullStopFullStopKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__Group_1_2__2__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group__0"
    // InternalMoniLog.g:3626:1: rule__ParameterDeclNoVarArgs__Group__0 : rule__ParameterDeclNoVarArgs__Group__0__Impl rule__ParameterDeclNoVarArgs__Group__1 ;
    public final void rule__ParameterDeclNoVarArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3630:1: ( rule__ParameterDeclNoVarArgs__Group__0__Impl rule__ParameterDeclNoVarArgs__Group__1 )
            // InternalMoniLog.g:3631:2: rule__ParameterDeclNoVarArgs__Group__0__Impl rule__ParameterDeclNoVarArgs__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__ParameterDeclNoVarArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group__0"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group__0__Impl"
    // InternalMoniLog.g:3638:1: rule__ParameterDeclNoVarArgs__Group__0__Impl : ( () ) ;
    public final void rule__ParameterDeclNoVarArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3642:1: ( ( () ) )
            // InternalMoniLog.g:3643:1: ( () )
            {
            // InternalMoniLog.g:3643:1: ( () )
            // InternalMoniLog.g:3644:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getParameterDeclAction_0()); 
            }
            // InternalMoniLog.g:3645:2: ()
            // InternalMoniLog.g:3645:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getParameterDeclAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group__1"
    // InternalMoniLog.g:3653:1: rule__ParameterDeclNoVarArgs__Group__1 : rule__ParameterDeclNoVarArgs__Group__1__Impl ;
    public final void rule__ParameterDeclNoVarArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3657:1: ( rule__ParameterDeclNoVarArgs__Group__1__Impl )
            // InternalMoniLog.g:3658:2: rule__ParameterDeclNoVarArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group__1"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group__1__Impl"
    // InternalMoniLog.g:3664:1: rule__ParameterDeclNoVarArgs__Group__1__Impl : ( ( rule__ParameterDeclNoVarArgs__Group_1__0 )? ) ;
    public final void rule__ParameterDeclNoVarArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3668:1: ( ( ( rule__ParameterDeclNoVarArgs__Group_1__0 )? ) )
            // InternalMoniLog.g:3669:1: ( ( rule__ParameterDeclNoVarArgs__Group_1__0 )? )
            {
            // InternalMoniLog.g:3669:1: ( ( rule__ParameterDeclNoVarArgs__Group_1__0 )? )
            // InternalMoniLog.g:3670:2: ( rule__ParameterDeclNoVarArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:3671:2: ( rule__ParameterDeclNoVarArgs__Group_1__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_ID) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalMoniLog.g:3671:3: rule__ParameterDeclNoVarArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterDeclNoVarArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group__1__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1__0"
    // InternalMoniLog.g:3680:1: rule__ParameterDeclNoVarArgs__Group_1__0 : rule__ParameterDeclNoVarArgs__Group_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1__1 ;
    public final void rule__ParameterDeclNoVarArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3684:1: ( rule__ParameterDeclNoVarArgs__Group_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1__1 )
            // InternalMoniLog.g:3685:2: rule__ParameterDeclNoVarArgs__Group_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ParameterDeclNoVarArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1__0"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1__0__Impl"
    // InternalMoniLog.g:3692:1: rule__ParameterDeclNoVarArgs__Group_1__0__Impl : ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 ) ) ;
    public final void rule__ParameterDeclNoVarArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3696:1: ( ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 ) ) )
            // InternalMoniLog.g:3697:1: ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 ) )
            {
            // InternalMoniLog.g:3697:1: ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 ) )
            // InternalMoniLog.g:3698:2: ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersAssignment_1_0()); 
            }
            // InternalMoniLog.g:3699:2: ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 )
            // InternalMoniLog.g:3699:3: rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1__1"
    // InternalMoniLog.g:3707:1: rule__ParameterDeclNoVarArgs__Group_1__1 : rule__ParameterDeclNoVarArgs__Group_1__1__Impl ;
    public final void rule__ParameterDeclNoVarArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3711:1: ( rule__ParameterDeclNoVarArgs__Group_1__1__Impl )
            // InternalMoniLog.g:3712:2: rule__ParameterDeclNoVarArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1__1"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1__1__Impl"
    // InternalMoniLog.g:3718:1: rule__ParameterDeclNoVarArgs__Group_1__1__Impl : ( ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )* ) ;
    public final void rule__ParameterDeclNoVarArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3722:1: ( ( ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )* ) )
            // InternalMoniLog.g:3723:1: ( ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )* )
            {
            // InternalMoniLog.g:3723:1: ( ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )* )
            // InternalMoniLog.g:3724:2: ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup_1_1()); 
            }
            // InternalMoniLog.g:3725:2: ( rule__ParameterDeclNoVarArgs__Group_1_1__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==42) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalMoniLog.g:3725:3: rule__ParameterDeclNoVarArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__ParameterDeclNoVarArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1_1__0"
    // InternalMoniLog.g:3734:1: rule__ParameterDeclNoVarArgs__Group_1_1__0 : rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1_1__1 ;
    public final void rule__ParameterDeclNoVarArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3738:1: ( rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1_1__1 )
            // InternalMoniLog.g:3739:2: rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl rule__ParameterDeclNoVarArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_3);
            rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1_1__0"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl"
    // InternalMoniLog.g:3746:1: rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3750:1: ( ( ',' ) )
            // InternalMoniLog.g:3751:1: ( ',' )
            {
            // InternalMoniLog.g:3751:1: ( ',' )
            // InternalMoniLog.g:3752:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1_1__1"
    // InternalMoniLog.g:3761:1: rule__ParameterDeclNoVarArgs__Group_1_1__1 : rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl ;
    public final void rule__ParameterDeclNoVarArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3765:1: ( rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl )
            // InternalMoniLog.g:3766:2: rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1_1__1"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl"
    // InternalMoniLog.g:3772:1: rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl : ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 ) ) ;
    public final void rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3776:1: ( ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 ) ) )
            // InternalMoniLog.g:3777:1: ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 ) )
            {
            // InternalMoniLog.g:3777:1: ( ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 ) )
            // InternalMoniLog.g:3778:2: ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersAssignment_1_1_1()); 
            }
            // InternalMoniLog.g:3779:2: ( rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 )
            // InternalMoniLog.g:3779:3: rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group__0"
    // InternalMoniLog.g:3788:1: rule__MoniLogger__Group__0 : rule__MoniLogger__Group__0__Impl rule__MoniLogger__Group__1 ;
    public final void rule__MoniLogger__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3792:1: ( rule__MoniLogger__Group__0__Impl rule__MoniLogger__Group__1 )
            // InternalMoniLog.g:3793:2: rule__MoniLogger__Group__0__Impl rule__MoniLogger__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__MoniLogger__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__0"


    // $ANTLR start "rule__MoniLogger__Group__0__Impl"
    // InternalMoniLog.g:3800:1: rule__MoniLogger__Group__0__Impl : ( ( rule__MoniLogger__AnnotationsAssignment_0 )* ) ;
    public final void rule__MoniLogger__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3804:1: ( ( ( rule__MoniLogger__AnnotationsAssignment_0 )* ) )
            // InternalMoniLog.g:3805:1: ( ( rule__MoniLogger__AnnotationsAssignment_0 )* )
            {
            // InternalMoniLog.g:3805:1: ( ( rule__MoniLogger__AnnotationsAssignment_0 )* )
            // InternalMoniLog.g:3806:2: ( rule__MoniLogger__AnnotationsAssignment_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getAnnotationsAssignment_0()); 
            }
            // InternalMoniLog.g:3807:2: ( rule__MoniLogger__AnnotationsAssignment_0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==12) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalMoniLog.g:3807:3: rule__MoniLogger__AnnotationsAssignment_0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__MoniLogger__AnnotationsAssignment_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getAnnotationsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group__1"
    // InternalMoniLog.g:3815:1: rule__MoniLogger__Group__1 : rule__MoniLogger__Group__1__Impl rule__MoniLogger__Group__2 ;
    public final void rule__MoniLogger__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3819:1: ( rule__MoniLogger__Group__1__Impl rule__MoniLogger__Group__2 )
            // InternalMoniLog.g:3820:2: rule__MoniLogger__Group__1__Impl rule__MoniLogger__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__1"


    // $ANTLR start "rule__MoniLogger__Group__1__Impl"
    // InternalMoniLog.g:3827:1: rule__MoniLogger__Group__1__Impl : ( 'monilogger' ) ;
    public final void rule__MoniLogger__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3831:1: ( ( 'monilogger' ) )
            // InternalMoniLog.g:3832:1: ( 'monilogger' )
            {
            // InternalMoniLog.g:3832:1: ( 'monilogger' )
            // InternalMoniLog.g:3833:2: 'monilogger'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getMoniloggerKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getMoniloggerKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group__2"
    // InternalMoniLog.g:3842:1: rule__MoniLogger__Group__2 : rule__MoniLogger__Group__2__Impl rule__MoniLogger__Group__3 ;
    public final void rule__MoniLogger__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3846:1: ( rule__MoniLogger__Group__2__Impl rule__MoniLogger__Group__3 )
            // InternalMoniLog.g:3847:2: rule__MoniLogger__Group__2__Impl rule__MoniLogger__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__MoniLogger__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__2"


    // $ANTLR start "rule__MoniLogger__Group__2__Impl"
    // InternalMoniLog.g:3854:1: rule__MoniLogger__Group__2__Impl : ( ( rule__MoniLogger__NameAssignment_2 ) ) ;
    public final void rule__MoniLogger__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3858:1: ( ( ( rule__MoniLogger__NameAssignment_2 ) ) )
            // InternalMoniLog.g:3859:1: ( ( rule__MoniLogger__NameAssignment_2 ) )
            {
            // InternalMoniLog.g:3859:1: ( ( rule__MoniLogger__NameAssignment_2 ) )
            // InternalMoniLog.g:3860:2: ( rule__MoniLogger__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getNameAssignment_2()); 
            }
            // InternalMoniLog.g:3861:2: ( rule__MoniLogger__NameAssignment_2 )
            // InternalMoniLog.g:3861:3: rule__MoniLogger__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__2__Impl"


    // $ANTLR start "rule__MoniLogger__Group__3"
    // InternalMoniLog.g:3869:1: rule__MoniLogger__Group__3 : rule__MoniLogger__Group__3__Impl rule__MoniLogger__Group__4 ;
    public final void rule__MoniLogger__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3873:1: ( rule__MoniLogger__Group__3__Impl rule__MoniLogger__Group__4 )
            // InternalMoniLog.g:3874:2: rule__MoniLogger__Group__3__Impl rule__MoniLogger__Group__4
            {
            pushFollow(FOLLOW_21);
            rule__MoniLogger__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__3"


    // $ANTLR start "rule__MoniLogger__Group__3__Impl"
    // InternalMoniLog.g:3881:1: rule__MoniLogger__Group__3__Impl : ( ( rule__MoniLogger__Group_3__0 )? ) ;
    public final void rule__MoniLogger__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3885:1: ( ( ( rule__MoniLogger__Group_3__0 )? ) )
            // InternalMoniLog.g:3886:1: ( ( rule__MoniLogger__Group_3__0 )? )
            {
            // InternalMoniLog.g:3886:1: ( ( rule__MoniLogger__Group_3__0 )? )
            // InternalMoniLog.g:3887:2: ( rule__MoniLogger__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:3888:2: ( rule__MoniLogger__Group_3__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==39) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalMoniLog.g:3888:3: rule__MoniLogger__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniLogger__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__3__Impl"


    // $ANTLR start "rule__MoniLogger__Group__4"
    // InternalMoniLog.g:3896:1: rule__MoniLogger__Group__4 : rule__MoniLogger__Group__4__Impl rule__MoniLogger__Group__5 ;
    public final void rule__MoniLogger__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3900:1: ( rule__MoniLogger__Group__4__Impl rule__MoniLogger__Group__5 )
            // InternalMoniLog.g:3901:2: rule__MoniLogger__Group__4__Impl rule__MoniLogger__Group__5
            {
            pushFollow(FOLLOW_21);
            rule__MoniLogger__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__4"


    // $ANTLR start "rule__MoniLogger__Group__4__Impl"
    // InternalMoniLog.g:3908:1: rule__MoniLogger__Group__4__Impl : ( ( rule__MoniLogger__Group_4__0 )? ) ;
    public final void rule__MoniLogger__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3912:1: ( ( ( rule__MoniLogger__Group_4__0 )? ) )
            // InternalMoniLog.g:3913:1: ( ( rule__MoniLogger__Group_4__0 )? )
            {
            // InternalMoniLog.g:3913:1: ( ( rule__MoniLogger__Group_4__0 )? )
            // InternalMoniLog.g:3914:2: ( rule__MoniLogger__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup_4()); 
            }
            // InternalMoniLog.g:3915:2: ( rule__MoniLogger__Group_4__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==47) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalMoniLog.g:3915:3: rule__MoniLogger__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniLogger__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__4__Impl"


    // $ANTLR start "rule__MoniLogger__Group__5"
    // InternalMoniLog.g:3923:1: rule__MoniLogger__Group__5 : rule__MoniLogger__Group__5__Impl rule__MoniLogger__Group__6 ;
    public final void rule__MoniLogger__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3927:1: ( rule__MoniLogger__Group__5__Impl rule__MoniLogger__Group__6 )
            // InternalMoniLog.g:3928:2: rule__MoniLogger__Group__5__Impl rule__MoniLogger__Group__6
            {
            pushFollow(FOLLOW_22);
            rule__MoniLogger__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__5"


    // $ANTLR start "rule__MoniLogger__Group__5__Impl"
    // InternalMoniLog.g:3935:1: rule__MoniLogger__Group__5__Impl : ( '{' ) ;
    public final void rule__MoniLogger__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3939:1: ( ( '{' ) )
            // InternalMoniLog.g:3940:1: ( '{' )
            {
            // InternalMoniLog.g:3940:1: ( '{' )
            // InternalMoniLog.g:3941:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_5()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__5__Impl"


    // $ANTLR start "rule__MoniLogger__Group__6"
    // InternalMoniLog.g:3950:1: rule__MoniLogger__Group__6 : rule__MoniLogger__Group__6__Impl rule__MoniLogger__Group__7 ;
    public final void rule__MoniLogger__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3954:1: ( rule__MoniLogger__Group__6__Impl rule__MoniLogger__Group__7 )
            // InternalMoniLog.g:3955:2: rule__MoniLogger__Group__6__Impl rule__MoniLogger__Group__7
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__6"


    // $ANTLR start "rule__MoniLogger__Group__6__Impl"
    // InternalMoniLog.g:3962:1: rule__MoniLogger__Group__6__Impl : ( 'event' ) ;
    public final void rule__MoniLogger__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3966:1: ( ( 'event' ) )
            // InternalMoniLog.g:3967:1: ( 'event' )
            {
            // InternalMoniLog.g:3967:1: ( 'event' )
            // InternalMoniLog.g:3968:2: 'event'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getEventKeyword_6()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getEventKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__6__Impl"


    // $ANTLR start "rule__MoniLogger__Group__7"
    // InternalMoniLog.g:3977:1: rule__MoniLogger__Group__7 : rule__MoniLogger__Group__7__Impl rule__MoniLogger__Group__8 ;
    public final void rule__MoniLogger__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3981:1: ( rule__MoniLogger__Group__7__Impl rule__MoniLogger__Group__8 )
            // InternalMoniLog.g:3982:2: rule__MoniLogger__Group__7__Impl rule__MoniLogger__Group__8
            {
            pushFollow(FOLLOW_23);
            rule__MoniLogger__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__7"


    // $ANTLR start "rule__MoniLogger__Group__7__Impl"
    // InternalMoniLog.g:3989:1: rule__MoniLogger__Group__7__Impl : ( ( rule__MoniLogger__StreamEventAssignment_7 ) ) ;
    public final void rule__MoniLogger__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:3993:1: ( ( ( rule__MoniLogger__StreamEventAssignment_7 ) ) )
            // InternalMoniLog.g:3994:1: ( ( rule__MoniLogger__StreamEventAssignment_7 ) )
            {
            // InternalMoniLog.g:3994:1: ( ( rule__MoniLogger__StreamEventAssignment_7 ) )
            // InternalMoniLog.g:3995:2: ( rule__MoniLogger__StreamEventAssignment_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getStreamEventAssignment_7()); 
            }
            // InternalMoniLog.g:3996:2: ( rule__MoniLogger__StreamEventAssignment_7 )
            // InternalMoniLog.g:3996:3: rule__MoniLogger__StreamEventAssignment_7
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__StreamEventAssignment_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getStreamEventAssignment_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__7__Impl"


    // $ANTLR start "rule__MoniLogger__Group__8"
    // InternalMoniLog.g:4004:1: rule__MoniLogger__Group__8 : rule__MoniLogger__Group__8__Impl rule__MoniLogger__Group__9 ;
    public final void rule__MoniLogger__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4008:1: ( rule__MoniLogger__Group__8__Impl rule__MoniLogger__Group__9 )
            // InternalMoniLog.g:4009:2: rule__MoniLogger__Group__8__Impl rule__MoniLogger__Group__9
            {
            pushFollow(FOLLOW_23);
            rule__MoniLogger__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__8"


    // $ANTLR start "rule__MoniLogger__Group__8__Impl"
    // InternalMoniLog.g:4016:1: rule__MoniLogger__Group__8__Impl : ( ( rule__MoniLogger__Group_8__0 )? ) ;
    public final void rule__MoniLogger__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4020:1: ( ( ( rule__MoniLogger__Group_8__0 )? ) )
            // InternalMoniLog.g:4021:1: ( ( rule__MoniLogger__Group_8__0 )? )
            {
            // InternalMoniLog.g:4021:1: ( ( rule__MoniLogger__Group_8__0 )? )
            // InternalMoniLog.g:4022:2: ( rule__MoniLogger__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup_8()); 
            }
            // InternalMoniLog.g:4023:2: ( rule__MoniLogger__Group_8__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==49) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalMoniLog.g:4023:3: rule__MoniLogger__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniLogger__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__8__Impl"


    // $ANTLR start "rule__MoniLogger__Group__9"
    // InternalMoniLog.g:4031:1: rule__MoniLogger__Group__9 : rule__MoniLogger__Group__9__Impl rule__MoniLogger__Group__10 ;
    public final void rule__MoniLogger__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4035:1: ( rule__MoniLogger__Group__9__Impl rule__MoniLogger__Group__10 )
            // InternalMoniLog.g:4036:2: rule__MoniLogger__Group__9__Impl rule__MoniLogger__Group__10
            {
            pushFollow(FOLLOW_24);
            rule__MoniLogger__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__9"


    // $ANTLR start "rule__MoniLogger__Group__9__Impl"
    // InternalMoniLog.g:4043:1: rule__MoniLogger__Group__9__Impl : ( 'actions' ) ;
    public final void rule__MoniLogger__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4047:1: ( ( 'actions' ) )
            // InternalMoniLog.g:4048:1: ( 'actions' )
            {
            // InternalMoniLog.g:4048:1: ( 'actions' )
            // InternalMoniLog.g:4049:2: 'actions'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getActionsKeyword_9()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getActionsKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__9__Impl"


    // $ANTLR start "rule__MoniLogger__Group__10"
    // InternalMoniLog.g:4058:1: rule__MoniLogger__Group__10 : rule__MoniLogger__Group__10__Impl rule__MoniLogger__Group__11 ;
    public final void rule__MoniLogger__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4062:1: ( rule__MoniLogger__Group__10__Impl rule__MoniLogger__Group__11 )
            // InternalMoniLog.g:4063:2: rule__MoniLogger__Group__10__Impl rule__MoniLogger__Group__11
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__10"


    // $ANTLR start "rule__MoniLogger__Group__10__Impl"
    // InternalMoniLog.g:4070:1: rule__MoniLogger__Group__10__Impl : ( '{' ) ;
    public final void rule__MoniLogger__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4074:1: ( ( '{' ) )
            // InternalMoniLog.g:4075:1: ( '{' )
            {
            // InternalMoniLog.g:4075:1: ( '{' )
            // InternalMoniLog.g:4076:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_10()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__10__Impl"


    // $ANTLR start "rule__MoniLogger__Group__11"
    // InternalMoniLog.g:4085:1: rule__MoniLogger__Group__11 : rule__MoniLogger__Group__11__Impl rule__MoniLogger__Group__12 ;
    public final void rule__MoniLogger__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4089:1: ( rule__MoniLogger__Group__11__Impl rule__MoniLogger__Group__12 )
            // InternalMoniLog.g:4090:2: rule__MoniLogger__Group__11__Impl rule__MoniLogger__Group__12
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__11"


    // $ANTLR start "rule__MoniLogger__Group__11__Impl"
    // InternalMoniLog.g:4097:1: rule__MoniLogger__Group__11__Impl : ( ( rule__MoniLogger__ActionsAssignment_11 ) ) ;
    public final void rule__MoniLogger__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4101:1: ( ( ( rule__MoniLogger__ActionsAssignment_11 ) ) )
            // InternalMoniLog.g:4102:1: ( ( rule__MoniLogger__ActionsAssignment_11 ) )
            {
            // InternalMoniLog.g:4102:1: ( ( rule__MoniLogger__ActionsAssignment_11 ) )
            // InternalMoniLog.g:4103:2: ( rule__MoniLogger__ActionsAssignment_11 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getActionsAssignment_11()); 
            }
            // InternalMoniLog.g:4104:2: ( rule__MoniLogger__ActionsAssignment_11 )
            // InternalMoniLog.g:4104:3: rule__MoniLogger__ActionsAssignment_11
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__ActionsAssignment_11();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getActionsAssignment_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__11__Impl"


    // $ANTLR start "rule__MoniLogger__Group__12"
    // InternalMoniLog.g:4112:1: rule__MoniLogger__Group__12 : rule__MoniLogger__Group__12__Impl rule__MoniLogger__Group__13 ;
    public final void rule__MoniLogger__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4116:1: ( rule__MoniLogger__Group__12__Impl rule__MoniLogger__Group__13 )
            // InternalMoniLog.g:4117:2: rule__MoniLogger__Group__12__Impl rule__MoniLogger__Group__13
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__13();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__12"


    // $ANTLR start "rule__MoniLogger__Group__12__Impl"
    // InternalMoniLog.g:4124:1: rule__MoniLogger__Group__12__Impl : ( ( rule__MoniLogger__Group_12__0 )* ) ;
    public final void rule__MoniLogger__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4128:1: ( ( ( rule__MoniLogger__Group_12__0 )* ) )
            // InternalMoniLog.g:4129:1: ( ( rule__MoniLogger__Group_12__0 )* )
            {
            // InternalMoniLog.g:4129:1: ( ( rule__MoniLogger__Group_12__0 )* )
            // InternalMoniLog.g:4130:2: ( rule__MoniLogger__Group_12__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup_12()); 
            }
            // InternalMoniLog.g:4131:2: ( rule__MoniLogger__Group_12__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==37) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==RULE_ID) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalMoniLog.g:4131:3: rule__MoniLogger__Group_12__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__MoniLogger__Group_12__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__12__Impl"


    // $ANTLR start "rule__MoniLogger__Group__13"
    // InternalMoniLog.g:4139:1: rule__MoniLogger__Group__13 : rule__MoniLogger__Group__13__Impl rule__MoniLogger__Group__14 ;
    public final void rule__MoniLogger__Group__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4143:1: ( rule__MoniLogger__Group__13__Impl rule__MoniLogger__Group__14 )
            // InternalMoniLog.g:4144:2: rule__MoniLogger__Group__13__Impl rule__MoniLogger__Group__14
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group__13__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__14();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__13"


    // $ANTLR start "rule__MoniLogger__Group__13__Impl"
    // InternalMoniLog.g:4151:1: rule__MoniLogger__Group__13__Impl : ( ( ';' )? ) ;
    public final void rule__MoniLogger__Group__13__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4155:1: ( ( ( ';' )? ) )
            // InternalMoniLog.g:4156:1: ( ( ';' )? )
            {
            // InternalMoniLog.g:4156:1: ( ( ';' )? )
            // InternalMoniLog.g:4157:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_13()); 
            }
            // InternalMoniLog.g:4158:2: ( ';' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==37) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalMoniLog.g:4158:3: ';'
                    {
                    match(input,37,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_13()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__13__Impl"


    // $ANTLR start "rule__MoniLogger__Group__14"
    // InternalMoniLog.g:4166:1: rule__MoniLogger__Group__14 : rule__MoniLogger__Group__14__Impl rule__MoniLogger__Group__15 ;
    public final void rule__MoniLogger__Group__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4170:1: ( rule__MoniLogger__Group__14__Impl rule__MoniLogger__Group__15 )
            // InternalMoniLog.g:4171:2: rule__MoniLogger__Group__14__Impl rule__MoniLogger__Group__15
            {
            pushFollow(FOLLOW_15);
            rule__MoniLogger__Group__14__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__15();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__14"


    // $ANTLR start "rule__MoniLogger__Group__14__Impl"
    // InternalMoniLog.g:4178:1: rule__MoniLogger__Group__14__Impl : ( '}' ) ;
    public final void rule__MoniLogger__Group__14__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4182:1: ( ( '}' ) )
            // InternalMoniLog.g:4183:1: ( '}' )
            {
            // InternalMoniLog.g:4183:1: ( '}' )
            // InternalMoniLog.g:4184:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_14()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_14()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__14__Impl"


    // $ANTLR start "rule__MoniLogger__Group__15"
    // InternalMoniLog.g:4193:1: rule__MoniLogger__Group__15 : rule__MoniLogger__Group__15__Impl ;
    public final void rule__MoniLogger__Group__15() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4197:1: ( rule__MoniLogger__Group__15__Impl )
            // InternalMoniLog.g:4198:2: rule__MoniLogger__Group__15__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group__15__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__15"


    // $ANTLR start "rule__MoniLogger__Group__15__Impl"
    // InternalMoniLog.g:4204:1: rule__MoniLogger__Group__15__Impl : ( '}' ) ;
    public final void rule__MoniLogger__Group__15__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4208:1: ( ( '}' ) )
            // InternalMoniLog.g:4209:1: ( '}' )
            {
            // InternalMoniLog.g:4209:1: ( '}' )
            // InternalMoniLog.g:4210:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_15()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_15()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group__15__Impl"


    // $ANTLR start "rule__MoniLogger__Group_3__0"
    // InternalMoniLog.g:4220:1: rule__MoniLogger__Group_3__0 : rule__MoniLogger__Group_3__0__Impl rule__MoniLogger__Group_3__1 ;
    public final void rule__MoniLogger__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4224:1: ( rule__MoniLogger__Group_3__0__Impl rule__MoniLogger__Group_3__1 )
            // InternalMoniLog.g:4225:2: rule__MoniLogger__Group_3__0__Impl rule__MoniLogger__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__0"


    // $ANTLR start "rule__MoniLogger__Group_3__0__Impl"
    // InternalMoniLog.g:4232:1: rule__MoniLogger__Group_3__0__Impl : ( '(' ) ;
    public final void rule__MoniLogger__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4236:1: ( ( '(' ) )
            // InternalMoniLog.g:4237:1: ( '(' )
            {
            // InternalMoniLog.g:4237:1: ( '(' )
            // InternalMoniLog.g:4238:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group_3__1"
    // InternalMoniLog.g:4247:1: rule__MoniLogger__Group_3__1 : rule__MoniLogger__Group_3__1__Impl rule__MoniLogger__Group_3__2 ;
    public final void rule__MoniLogger__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4251:1: ( rule__MoniLogger__Group_3__1__Impl rule__MoniLogger__Group_3__2 )
            // InternalMoniLog.g:4252:2: rule__MoniLogger__Group_3__1__Impl rule__MoniLogger__Group_3__2
            {
            pushFollow(FOLLOW_13);
            rule__MoniLogger__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__1"


    // $ANTLR start "rule__MoniLogger__Group_3__1__Impl"
    // InternalMoniLog.g:4259:1: rule__MoniLogger__Group_3__1__Impl : ( ( rule__MoniLogger__ParameterDeclAssignment_3_1 ) ) ;
    public final void rule__MoniLogger__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4263:1: ( ( ( rule__MoniLogger__ParameterDeclAssignment_3_1 ) ) )
            // InternalMoniLog.g:4264:1: ( ( rule__MoniLogger__ParameterDeclAssignment_3_1 ) )
            {
            // InternalMoniLog.g:4264:1: ( ( rule__MoniLogger__ParameterDeclAssignment_3_1 ) )
            // InternalMoniLog.g:4265:2: ( rule__MoniLogger__ParameterDeclAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getParameterDeclAssignment_3_1()); 
            }
            // InternalMoniLog.g:4266:2: ( rule__MoniLogger__ParameterDeclAssignment_3_1 )
            // InternalMoniLog.g:4266:3: rule__MoniLogger__ParameterDeclAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__ParameterDeclAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getParameterDeclAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group_3__2"
    // InternalMoniLog.g:4274:1: rule__MoniLogger__Group_3__2 : rule__MoniLogger__Group_3__2__Impl ;
    public final void rule__MoniLogger__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4278:1: ( rule__MoniLogger__Group_3__2__Impl )
            // InternalMoniLog.g:4279:2: rule__MoniLogger__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__2"


    // $ANTLR start "rule__MoniLogger__Group_3__2__Impl"
    // InternalMoniLog.g:4285:1: rule__MoniLogger__Group_3__2__Impl : ( ')' ) ;
    public final void rule__MoniLogger__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4289:1: ( ( ')' ) )
            // InternalMoniLog.g:4290:1: ( ')' )
            {
            // InternalMoniLog.g:4290:1: ( ')' )
            // InternalMoniLog.g:4291:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_3__2__Impl"


    // $ANTLR start "rule__MoniLogger__Group_4__0"
    // InternalMoniLog.g:4301:1: rule__MoniLogger__Group_4__0 : rule__MoniLogger__Group_4__0__Impl rule__MoniLogger__Group_4__1 ;
    public final void rule__MoniLogger__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4305:1: ( rule__MoniLogger__Group_4__0__Impl rule__MoniLogger__Group_4__1 )
            // InternalMoniLog.g:4306:2: rule__MoniLogger__Group_4__0__Impl rule__MoniLogger__Group_4__1
            {
            pushFollow(FOLLOW_25);
            rule__MoniLogger__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__0"


    // $ANTLR start "rule__MoniLogger__Group_4__0__Impl"
    // InternalMoniLog.g:4313:1: rule__MoniLogger__Group_4__0__Impl : ( '[' ) ;
    public final void rule__MoniLogger__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4317:1: ( ( '[' ) )
            // InternalMoniLog.g:4318:1: ( '[' )
            {
            // InternalMoniLog.g:4318:1: ( '[' )
            // InternalMoniLog.g:4319:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLeftSquareBracketKeyword_4_0()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLeftSquareBracketKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group_4__1"
    // InternalMoniLog.g:4328:1: rule__MoniLogger__Group_4__1 : rule__MoniLogger__Group_4__1__Impl rule__MoniLogger__Group_4__2 ;
    public final void rule__MoniLogger__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4332:1: ( rule__MoniLogger__Group_4__1__Impl rule__MoniLogger__Group_4__2 )
            // InternalMoniLog.g:4333:2: rule__MoniLogger__Group_4__1__Impl rule__MoniLogger__Group_4__2
            {
            pushFollow(FOLLOW_26);
            rule__MoniLogger__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__1"


    // $ANTLR start "rule__MoniLogger__Group_4__1__Impl"
    // InternalMoniLog.g:4340:1: rule__MoniLogger__Group_4__1__Impl : ( ( rule__MoniLogger__LevelAssignment_4_1 ) ) ;
    public final void rule__MoniLogger__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4344:1: ( ( ( rule__MoniLogger__LevelAssignment_4_1 ) ) )
            // InternalMoniLog.g:4345:1: ( ( rule__MoniLogger__LevelAssignment_4_1 ) )
            {
            // InternalMoniLog.g:4345:1: ( ( rule__MoniLogger__LevelAssignment_4_1 ) )
            // InternalMoniLog.g:4346:2: ( rule__MoniLogger__LevelAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLevelAssignment_4_1()); 
            }
            // InternalMoniLog.g:4347:2: ( rule__MoniLogger__LevelAssignment_4_1 )
            // InternalMoniLog.g:4347:3: rule__MoniLogger__LevelAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__LevelAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLevelAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group_4__2"
    // InternalMoniLog.g:4355:1: rule__MoniLogger__Group_4__2 : rule__MoniLogger__Group_4__2__Impl ;
    public final void rule__MoniLogger__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4359:1: ( rule__MoniLogger__Group_4__2__Impl )
            // InternalMoniLog.g:4360:2: rule__MoniLogger__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__2"


    // $ANTLR start "rule__MoniLogger__Group_4__2__Impl"
    // InternalMoniLog.g:4366:1: rule__MoniLogger__Group_4__2__Impl : ( ']' ) ;
    public final void rule__MoniLogger__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4370:1: ( ( ']' ) )
            // InternalMoniLog.g:4371:1: ( ']' )
            {
            // InternalMoniLog.g:4371:1: ( ']' )
            // InternalMoniLog.g:4372:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getRightSquareBracketKeyword_4_2()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getRightSquareBracketKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_4__2__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__0"
    // InternalMoniLog.g:4382:1: rule__MoniLogger__Group_8__0 : rule__MoniLogger__Group_8__0__Impl rule__MoniLogger__Group_8__1 ;
    public final void rule__MoniLogger__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4386:1: ( rule__MoniLogger__Group_8__0__Impl rule__MoniLogger__Group_8__1 )
            // InternalMoniLog.g:4387:2: rule__MoniLogger__Group_8__0__Impl rule__MoniLogger__Group_8__1
            {
            pushFollow(FOLLOW_24);
            rule__MoniLogger__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__0"


    // $ANTLR start "rule__MoniLogger__Group_8__0__Impl"
    // InternalMoniLog.g:4394:1: rule__MoniLogger__Group_8__0__Impl : ( 'conditions' ) ;
    public final void rule__MoniLogger__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4398:1: ( ( 'conditions' ) )
            // InternalMoniLog.g:4399:1: ( 'conditions' )
            {
            // InternalMoniLog.g:4399:1: ( 'conditions' )
            // InternalMoniLog.g:4400:2: 'conditions'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getConditionsKeyword_8_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getConditionsKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__1"
    // InternalMoniLog.g:4409:1: rule__MoniLogger__Group_8__1 : rule__MoniLogger__Group_8__1__Impl rule__MoniLogger__Group_8__2 ;
    public final void rule__MoniLogger__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4413:1: ( rule__MoniLogger__Group_8__1__Impl rule__MoniLogger__Group_8__2 )
            // InternalMoniLog.g:4414:2: rule__MoniLogger__Group_8__1__Impl rule__MoniLogger__Group_8__2
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__1"


    // $ANTLR start "rule__MoniLogger__Group_8__1__Impl"
    // InternalMoniLog.g:4421:1: rule__MoniLogger__Group_8__1__Impl : ( '{' ) ;
    public final void rule__MoniLogger__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4425:1: ( ( '{' ) )
            // InternalMoniLog.g:4426:1: ( '{' )
            {
            // InternalMoniLog.g:4426:1: ( '{' )
            // InternalMoniLog.g:4427:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_8_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLeftCurlyBracketKeyword_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__2"
    // InternalMoniLog.g:4436:1: rule__MoniLogger__Group_8__2 : rule__MoniLogger__Group_8__2__Impl rule__MoniLogger__Group_8__3 ;
    public final void rule__MoniLogger__Group_8__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4440:1: ( rule__MoniLogger__Group_8__2__Impl rule__MoniLogger__Group_8__3 )
            // InternalMoniLog.g:4441:2: rule__MoniLogger__Group_8__2__Impl rule__MoniLogger__Group_8__3
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group_8__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__2"


    // $ANTLR start "rule__MoniLogger__Group_8__2__Impl"
    // InternalMoniLog.g:4448:1: rule__MoniLogger__Group_8__2__Impl : ( ( rule__MoniLogger__ConditionsAssignment_8_2 ) ) ;
    public final void rule__MoniLogger__Group_8__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4452:1: ( ( ( rule__MoniLogger__ConditionsAssignment_8_2 ) ) )
            // InternalMoniLog.g:4453:1: ( ( rule__MoniLogger__ConditionsAssignment_8_2 ) )
            {
            // InternalMoniLog.g:4453:1: ( ( rule__MoniLogger__ConditionsAssignment_8_2 ) )
            // InternalMoniLog.g:4454:2: ( rule__MoniLogger__ConditionsAssignment_8_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_2()); 
            }
            // InternalMoniLog.g:4455:2: ( rule__MoniLogger__ConditionsAssignment_8_2 )
            // InternalMoniLog.g:4455:3: rule__MoniLogger__ConditionsAssignment_8_2
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__ConditionsAssignment_8_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__2__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__3"
    // InternalMoniLog.g:4463:1: rule__MoniLogger__Group_8__3 : rule__MoniLogger__Group_8__3__Impl rule__MoniLogger__Group_8__4 ;
    public final void rule__MoniLogger__Group_8__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4467:1: ( rule__MoniLogger__Group_8__3__Impl rule__MoniLogger__Group_8__4 )
            // InternalMoniLog.g:4468:2: rule__MoniLogger__Group_8__3__Impl rule__MoniLogger__Group_8__4
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group_8__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__3"


    // $ANTLR start "rule__MoniLogger__Group_8__3__Impl"
    // InternalMoniLog.g:4475:1: rule__MoniLogger__Group_8__3__Impl : ( ( rule__MoniLogger__Group_8_3__0 )* ) ;
    public final void rule__MoniLogger__Group_8__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4479:1: ( ( ( rule__MoniLogger__Group_8_3__0 )* ) )
            // InternalMoniLog.g:4480:1: ( ( rule__MoniLogger__Group_8_3__0 )* )
            {
            // InternalMoniLog.g:4480:1: ( ( rule__MoniLogger__Group_8_3__0 )* )
            // InternalMoniLog.g:4481:2: ( rule__MoniLogger__Group_8_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getGroup_8_3()); 
            }
            // InternalMoniLog.g:4482:2: ( rule__MoniLogger__Group_8_3__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==37) ) {
                    int LA44_1 = input.LA(2);

                    if ( (LA44_1==RULE_ID) ) {
                        alt44=1;
                    }


                }


                switch (alt44) {
            	case 1 :
            	    // InternalMoniLog.g:4482:3: rule__MoniLogger__Group_8_3__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__MoniLogger__Group_8_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getGroup_8_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__3__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__4"
    // InternalMoniLog.g:4490:1: rule__MoniLogger__Group_8__4 : rule__MoniLogger__Group_8__4__Impl rule__MoniLogger__Group_8__5 ;
    public final void rule__MoniLogger__Group_8__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4494:1: ( rule__MoniLogger__Group_8__4__Impl rule__MoniLogger__Group_8__5 )
            // InternalMoniLog.g:4495:2: rule__MoniLogger__Group_8__4__Impl rule__MoniLogger__Group_8__5
            {
            pushFollow(FOLLOW_11);
            rule__MoniLogger__Group_8__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__4"


    // $ANTLR start "rule__MoniLogger__Group_8__4__Impl"
    // InternalMoniLog.g:4502:1: rule__MoniLogger__Group_8__4__Impl : ( ( ';' )? ) ;
    public final void rule__MoniLogger__Group_8__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4506:1: ( ( ( ';' )? ) )
            // InternalMoniLog.g:4507:1: ( ( ';' )? )
            {
            // InternalMoniLog.g:4507:1: ( ( ';' )? )
            // InternalMoniLog.g:4508:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_8_4()); 
            }
            // InternalMoniLog.g:4509:2: ( ';' )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==37) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalMoniLog.g:4509:3: ';'
                    {
                    match(input,37,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_8_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__4__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8__5"
    // InternalMoniLog.g:4517:1: rule__MoniLogger__Group_8__5 : rule__MoniLogger__Group_8__5__Impl ;
    public final void rule__MoniLogger__Group_8__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4521:1: ( rule__MoniLogger__Group_8__5__Impl )
            // InternalMoniLog.g:4522:2: rule__MoniLogger__Group_8__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__5"


    // $ANTLR start "rule__MoniLogger__Group_8__5__Impl"
    // InternalMoniLog.g:4528:1: rule__MoniLogger__Group_8__5__Impl : ( '}' ) ;
    public final void rule__MoniLogger__Group_8__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4532:1: ( ( '}' ) )
            // InternalMoniLog.g:4533:1: ( '}' )
            {
            // InternalMoniLog.g:4533:1: ( '}' )
            // InternalMoniLog.g:4534:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_8_5()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getRightCurlyBracketKeyword_8_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8__5__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8_3__0"
    // InternalMoniLog.g:4544:1: rule__MoniLogger__Group_8_3__0 : rule__MoniLogger__Group_8_3__0__Impl rule__MoniLogger__Group_8_3__1 ;
    public final void rule__MoniLogger__Group_8_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4548:1: ( rule__MoniLogger__Group_8_3__0__Impl rule__MoniLogger__Group_8_3__1 )
            // InternalMoniLog.g:4549:2: rule__MoniLogger__Group_8_3__0__Impl rule__MoniLogger__Group_8_3__1
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group_8_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8_3__0"


    // $ANTLR start "rule__MoniLogger__Group_8_3__0__Impl"
    // InternalMoniLog.g:4556:1: rule__MoniLogger__Group_8_3__0__Impl : ( ';' ) ;
    public final void rule__MoniLogger__Group_8_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4560:1: ( ( ';' ) )
            // InternalMoniLog.g:4561:1: ( ';' )
            {
            // InternalMoniLog.g:4561:1: ( ';' )
            // InternalMoniLog.g:4562:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_8_3_0()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_8_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8_3__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group_8_3__1"
    // InternalMoniLog.g:4571:1: rule__MoniLogger__Group_8_3__1 : rule__MoniLogger__Group_8_3__1__Impl ;
    public final void rule__MoniLogger__Group_8_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4575:1: ( rule__MoniLogger__Group_8_3__1__Impl )
            // InternalMoniLog.g:4576:2: rule__MoniLogger__Group_8_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_8_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8_3__1"


    // $ANTLR start "rule__MoniLogger__Group_8_3__1__Impl"
    // InternalMoniLog.g:4582:1: rule__MoniLogger__Group_8_3__1__Impl : ( ( rule__MoniLogger__ConditionsAssignment_8_3_1 ) ) ;
    public final void rule__MoniLogger__Group_8_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4586:1: ( ( ( rule__MoniLogger__ConditionsAssignment_8_3_1 ) ) )
            // InternalMoniLog.g:4587:1: ( ( rule__MoniLogger__ConditionsAssignment_8_3_1 ) )
            {
            // InternalMoniLog.g:4587:1: ( ( rule__MoniLogger__ConditionsAssignment_8_3_1 ) )
            // InternalMoniLog.g:4588:2: ( rule__MoniLogger__ConditionsAssignment_8_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_3_1()); 
            }
            // InternalMoniLog.g:4589:2: ( rule__MoniLogger__ConditionsAssignment_8_3_1 )
            // InternalMoniLog.g:4589:3: rule__MoniLogger__ConditionsAssignment_8_3_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__ConditionsAssignment_8_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getConditionsAssignment_8_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_8_3__1__Impl"


    // $ANTLR start "rule__MoniLogger__Group_12__0"
    // InternalMoniLog.g:4598:1: rule__MoniLogger__Group_12__0 : rule__MoniLogger__Group_12__0__Impl rule__MoniLogger__Group_12__1 ;
    public final void rule__MoniLogger__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4602:1: ( rule__MoniLogger__Group_12__0__Impl rule__MoniLogger__Group_12__1 )
            // InternalMoniLog.g:4603:2: rule__MoniLogger__Group_12__0__Impl rule__MoniLogger__Group_12__1
            {
            pushFollow(FOLLOW_3);
            rule__MoniLogger__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_12__0"


    // $ANTLR start "rule__MoniLogger__Group_12__0__Impl"
    // InternalMoniLog.g:4610:1: rule__MoniLogger__Group_12__0__Impl : ( ';' ) ;
    public final void rule__MoniLogger__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4614:1: ( ( ';' ) )
            // InternalMoniLog.g:4615:1: ( ';' )
            {
            // InternalMoniLog.g:4615:1: ( ';' )
            // InternalMoniLog.g:4616:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_12_0()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getSemicolonKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_12__0__Impl"


    // $ANTLR start "rule__MoniLogger__Group_12__1"
    // InternalMoniLog.g:4625:1: rule__MoniLogger__Group_12__1 : rule__MoniLogger__Group_12__1__Impl ;
    public final void rule__MoniLogger__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4629:1: ( rule__MoniLogger__Group_12__1__Impl )
            // InternalMoniLog.g:4630:2: rule__MoniLogger__Group_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_12__1"


    // $ANTLR start "rule__MoniLogger__Group_12__1__Impl"
    // InternalMoniLog.g:4636:1: rule__MoniLogger__Group_12__1__Impl : ( ( rule__MoniLogger__ActionsAssignment_12_1 ) ) ;
    public final void rule__MoniLogger__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4640:1: ( ( ( rule__MoniLogger__ActionsAssignment_12_1 ) ) )
            // InternalMoniLog.g:4641:1: ( ( rule__MoniLogger__ActionsAssignment_12_1 ) )
            {
            // InternalMoniLog.g:4641:1: ( ( rule__MoniLogger__ActionsAssignment_12_1 ) )
            // InternalMoniLog.g:4642:2: ( rule__MoniLogger__ActionsAssignment_12_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getActionsAssignment_12_1()); 
            }
            // InternalMoniLog.g:4643:2: ( rule__MoniLogger__ActionsAssignment_12_1 )
            // InternalMoniLog.g:4643:3: rule__MoniLogger__ActionsAssignment_12_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogger__ActionsAssignment_12_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getActionsAssignment_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__Group_12__1__Impl"


    // $ANTLR start "rule__Event__Group_0__0"
    // InternalMoniLog.g:4652:1: rule__Event__Group_0__0 : rule__Event__Group_0__0__Impl rule__Event__Group_0__1 ;
    public final void rule__Event__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4656:1: ( rule__Event__Group_0__0__Impl rule__Event__Group_0__1 )
            // InternalMoniLog.g:4657:2: rule__Event__Group_0__0__Impl rule__Event__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__Event__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__0"


    // $ANTLR start "rule__Event__Group_0__0__Impl"
    // InternalMoniLog.g:4664:1: rule__Event__Group_0__0__Impl : ( () ) ;
    public final void rule__Event__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4668:1: ( ( () ) )
            // InternalMoniLog.g:4669:1: ( () )
            {
            // InternalMoniLog.g:4669:1: ( () )
            // InternalMoniLog.g:4670:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getASTEventAction_0_0()); 
            }
            // InternalMoniLog.g:4671:2: ()
            // InternalMoniLog.g:4671:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getASTEventAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__0__Impl"


    // $ANTLR start "rule__Event__Group_0__1"
    // InternalMoniLog.g:4679:1: rule__Event__Group_0__1 : rule__Event__Group_0__1__Impl rule__Event__Group_0__2 ;
    public final void rule__Event__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4683:1: ( rule__Event__Group_0__1__Impl rule__Event__Group_0__2 )
            // InternalMoniLog.g:4684:2: rule__Event__Group_0__1__Impl rule__Event__Group_0__2
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__1"


    // $ANTLR start "rule__Event__Group_0__1__Impl"
    // InternalMoniLog.g:4691:1: rule__Event__Group_0__1__Impl : ( 'call' ) ;
    public final void rule__Event__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4695:1: ( ( 'call' ) )
            // InternalMoniLog.g:4696:1: ( 'call' )
            {
            // InternalMoniLog.g:4696:1: ( 'call' )
            // InternalMoniLog.g:4697:2: 'call'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getCallKeyword_0_1()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getCallKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__1__Impl"


    // $ANTLR start "rule__Event__Group_0__2"
    // InternalMoniLog.g:4706:1: rule__Event__Group_0__2 : rule__Event__Group_0__2__Impl rule__Event__Group_0__3 ;
    public final void rule__Event__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4710:1: ( rule__Event__Group_0__2__Impl rule__Event__Group_0__3 )
            // InternalMoniLog.g:4711:2: rule__Event__Group_0__2__Impl rule__Event__Group_0__3
            {
            pushFollow(FOLLOW_10);
            rule__Event__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__2"


    // $ANTLR start "rule__Event__Group_0__2__Impl"
    // InternalMoniLog.g:4718:1: rule__Event__Group_0__2__Impl : ( ( rule__Event__NameAssignment_0_2 ) ) ;
    public final void rule__Event__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4722:1: ( ( ( rule__Event__NameAssignment_0_2 ) ) )
            // InternalMoniLog.g:4723:1: ( ( rule__Event__NameAssignment_0_2 ) )
            {
            // InternalMoniLog.g:4723:1: ( ( rule__Event__NameAssignment_0_2 ) )
            // InternalMoniLog.g:4724:2: ( rule__Event__NameAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameAssignment_0_2()); 
            }
            // InternalMoniLog.g:4725:2: ( rule__Event__NameAssignment_0_2 )
            // InternalMoniLog.g:4725:3: rule__Event__NameAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Event__NameAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__2__Impl"


    // $ANTLR start "rule__Event__Group_0__3"
    // InternalMoniLog.g:4733:1: rule__Event__Group_0__3 : rule__Event__Group_0__3__Impl rule__Event__Group_0__4 ;
    public final void rule__Event__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4737:1: ( rule__Event__Group_0__3__Impl rule__Event__Group_0__4 )
            // InternalMoniLog.g:4738:2: rule__Event__Group_0__3__Impl rule__Event__Group_0__4
            {
            pushFollow(FOLLOW_10);
            rule__Event__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__3"


    // $ANTLR start "rule__Event__Group_0__3__Impl"
    // InternalMoniLog.g:4745:1: rule__Event__Group_0__3__Impl : ( ( rule__Event__Group_0_3__0 )? ) ;
    public final void rule__Event__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4749:1: ( ( ( rule__Event__Group_0_3__0 )? ) )
            // InternalMoniLog.g:4750:1: ( ( rule__Event__Group_0_3__0 )? )
            {
            // InternalMoniLog.g:4750:1: ( ( rule__Event__Group_0_3__0 )? )
            // InternalMoniLog.g:4751:2: ( rule__Event__Group_0_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getGroup_0_3()); 
            }
            // InternalMoniLog.g:4752:2: ( rule__Event__Group_0_3__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==39) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalMoniLog.g:4752:3: rule__Event__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getGroup_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__3__Impl"


    // $ANTLR start "rule__Event__Group_0__4"
    // InternalMoniLog.g:4760:1: rule__Event__Group_0__4 : rule__Event__Group_0__4__Impl rule__Event__Group_0__5 ;
    public final void rule__Event__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4764:1: ( rule__Event__Group_0__4__Impl rule__Event__Group_0__5 )
            // InternalMoniLog.g:4765:2: rule__Event__Group_0__4__Impl rule__Event__Group_0__5
            {
            pushFollow(FOLLOW_28);
            rule__Event__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__4"


    // $ANTLR start "rule__Event__Group_0__4__Impl"
    // InternalMoniLog.g:4772:1: rule__Event__Group_0__4__Impl : ( '{' ) ;
    public final void rule__Event__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4776:1: ( ( '{' ) )
            // InternalMoniLog.g:4777:1: ( '{' )
            {
            // InternalMoniLog.g:4777:1: ( '{' )
            // InternalMoniLog.g:4778:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_0_4()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__4__Impl"


    // $ANTLR start "rule__Event__Group_0__5"
    // InternalMoniLog.g:4787:1: rule__Event__Group_0__5 : rule__Event__Group_0__5__Impl rule__Event__Group_0__6 ;
    public final void rule__Event__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4791:1: ( rule__Event__Group_0__5__Impl rule__Event__Group_0__6 )
            // InternalMoniLog.g:4792:2: rule__Event__Group_0__5__Impl rule__Event__Group_0__6
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__5"


    // $ANTLR start "rule__Event__Group_0__5__Impl"
    // InternalMoniLog.g:4799:1: rule__Event__Group_0__5__Impl : ( ( rule__Event__KindAssignment_0_5 ) ) ;
    public final void rule__Event__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4803:1: ( ( ( rule__Event__KindAssignment_0_5 ) ) )
            // InternalMoniLog.g:4804:1: ( ( rule__Event__KindAssignment_0_5 ) )
            {
            // InternalMoniLog.g:4804:1: ( ( rule__Event__KindAssignment_0_5 ) )
            // InternalMoniLog.g:4805:2: ( rule__Event__KindAssignment_0_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getKindAssignment_0_5()); 
            }
            // InternalMoniLog.g:4806:2: ( rule__Event__KindAssignment_0_5 )
            // InternalMoniLog.g:4806:3: rule__Event__KindAssignment_0_5
            {
            pushFollow(FOLLOW_2);
            rule__Event__KindAssignment_0_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getKindAssignment_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__5__Impl"


    // $ANTLR start "rule__Event__Group_0__6"
    // InternalMoniLog.g:4814:1: rule__Event__Group_0__6 : rule__Event__Group_0__6__Impl rule__Event__Group_0__7 ;
    public final void rule__Event__Group_0__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4818:1: ( rule__Event__Group_0__6__Impl rule__Event__Group_0__7 )
            // InternalMoniLog.g:4819:2: rule__Event__Group_0__6__Impl rule__Event__Group_0__7
            {
            pushFollow(FOLLOW_15);
            rule__Event__Group_0__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__6"


    // $ANTLR start "rule__Event__Group_0__6__Impl"
    // InternalMoniLog.g:4826:1: rule__Event__Group_0__6__Impl : ( ( rule__Event__RuleIDAssignment_0_6 ) ) ;
    public final void rule__Event__Group_0__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4830:1: ( ( ( rule__Event__RuleIDAssignment_0_6 ) ) )
            // InternalMoniLog.g:4831:1: ( ( rule__Event__RuleIDAssignment_0_6 ) )
            {
            // InternalMoniLog.g:4831:1: ( ( rule__Event__RuleIDAssignment_0_6 ) )
            // InternalMoniLog.g:4832:2: ( rule__Event__RuleIDAssignment_0_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRuleIDAssignment_0_6()); 
            }
            // InternalMoniLog.g:4833:2: ( rule__Event__RuleIDAssignment_0_6 )
            // InternalMoniLog.g:4833:3: rule__Event__RuleIDAssignment_0_6
            {
            pushFollow(FOLLOW_2);
            rule__Event__RuleIDAssignment_0_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRuleIDAssignment_0_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__6__Impl"


    // $ANTLR start "rule__Event__Group_0__7"
    // InternalMoniLog.g:4841:1: rule__Event__Group_0__7 : rule__Event__Group_0__7__Impl ;
    public final void rule__Event__Group_0__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4845:1: ( rule__Event__Group_0__7__Impl )
            // InternalMoniLog.g:4846:2: rule__Event__Group_0__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_0__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__7"


    // $ANTLR start "rule__Event__Group_0__7__Impl"
    // InternalMoniLog.g:4852:1: rule__Event__Group_0__7__Impl : ( '}' ) ;
    public final void rule__Event__Group_0__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4856:1: ( ( '}' ) )
            // InternalMoniLog.g:4857:1: ( '}' )
            {
            // InternalMoniLog.g:4857:1: ( '}' )
            // InternalMoniLog.g:4858:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_0_7()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_0_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0__7__Impl"


    // $ANTLR start "rule__Event__Group_0_3__0"
    // InternalMoniLog.g:4868:1: rule__Event__Group_0_3__0 : rule__Event__Group_0_3__0__Impl rule__Event__Group_0_3__1 ;
    public final void rule__Event__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4872:1: ( rule__Event__Group_0_3__0__Impl rule__Event__Group_0_3__1 )
            // InternalMoniLog.g:4873:2: rule__Event__Group_0_3__0__Impl rule__Event__Group_0_3__1
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__0"


    // $ANTLR start "rule__Event__Group_0_3__0__Impl"
    // InternalMoniLog.g:4880:1: rule__Event__Group_0_3__0__Impl : ( '(' ) ;
    public final void rule__Event__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4884:1: ( ( '(' ) )
            // InternalMoniLog.g:4885:1: ( '(' )
            {
            // InternalMoniLog.g:4885:1: ( '(' )
            // InternalMoniLog.g:4886:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftParenthesisKeyword_0_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftParenthesisKeyword_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__0__Impl"


    // $ANTLR start "rule__Event__Group_0_3__1"
    // InternalMoniLog.g:4895:1: rule__Event__Group_0_3__1 : rule__Event__Group_0_3__1__Impl rule__Event__Group_0_3__2 ;
    public final void rule__Event__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4899:1: ( rule__Event__Group_0_3__1__Impl rule__Event__Group_0_3__2 )
            // InternalMoniLog.g:4900:2: rule__Event__Group_0_3__1__Impl rule__Event__Group_0_3__2
            {
            pushFollow(FOLLOW_13);
            rule__Event__Group_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_0_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__1"


    // $ANTLR start "rule__Event__Group_0_3__1__Impl"
    // InternalMoniLog.g:4907:1: rule__Event__Group_0_3__1__Impl : ( ( rule__Event__ParameterDeclAssignment_0_3_1 ) ) ;
    public final void rule__Event__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4911:1: ( ( ( rule__Event__ParameterDeclAssignment_0_3_1 ) ) )
            // InternalMoniLog.g:4912:1: ( ( rule__Event__ParameterDeclAssignment_0_3_1 ) )
            {
            // InternalMoniLog.g:4912:1: ( ( rule__Event__ParameterDeclAssignment_0_3_1 ) )
            // InternalMoniLog.g:4913:2: ( rule__Event__ParameterDeclAssignment_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclAssignment_0_3_1()); 
            }
            // InternalMoniLog.g:4914:2: ( rule__Event__ParameterDeclAssignment_0_3_1 )
            // InternalMoniLog.g:4914:3: rule__Event__ParameterDeclAssignment_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Event__ParameterDeclAssignment_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclAssignment_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__1__Impl"


    // $ANTLR start "rule__Event__Group_0_3__2"
    // InternalMoniLog.g:4922:1: rule__Event__Group_0_3__2 : rule__Event__Group_0_3__2__Impl ;
    public final void rule__Event__Group_0_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4926:1: ( rule__Event__Group_0_3__2__Impl )
            // InternalMoniLog.g:4927:2: rule__Event__Group_0_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_0_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__2"


    // $ANTLR start "rule__Event__Group_0_3__2__Impl"
    // InternalMoniLog.g:4933:1: rule__Event__Group_0_3__2__Impl : ( ')' ) ;
    public final void rule__Event__Group_0_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4937:1: ( ( ')' ) )
            // InternalMoniLog.g:4938:1: ( ')' )
            {
            // InternalMoniLog.g:4938:1: ( ')' )
            // InternalMoniLog.g:4939:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightParenthesisKeyword_0_3_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightParenthesisKeyword_0_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_0_3__2__Impl"


    // $ANTLR start "rule__Event__Group_1__0"
    // InternalMoniLog.g:4949:1: rule__Event__Group_1__0 : rule__Event__Group_1__0__Impl rule__Event__Group_1__1 ;
    public final void rule__Event__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4953:1: ( rule__Event__Group_1__0__Impl rule__Event__Group_1__1 )
            // InternalMoniLog.g:4954:2: rule__Event__Group_1__0__Impl rule__Event__Group_1__1
            {
            pushFollow(FOLLOW_29);
            rule__Event__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__0"


    // $ANTLR start "rule__Event__Group_1__0__Impl"
    // InternalMoniLog.g:4961:1: rule__Event__Group_1__0__Impl : ( () ) ;
    public final void rule__Event__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4965:1: ( ( () ) )
            // InternalMoniLog.g:4966:1: ( () )
            {
            // InternalMoniLog.g:4966:1: ( () )
            // InternalMoniLog.g:4967:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getComplexEventAction_1_0()); 
            }
            // InternalMoniLog.g:4968:2: ()
            // InternalMoniLog.g:4968:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getComplexEventAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__0__Impl"


    // $ANTLR start "rule__Event__Group_1__1"
    // InternalMoniLog.g:4976:1: rule__Event__Group_1__1 : rule__Event__Group_1__1__Impl rule__Event__Group_1__2 ;
    public final void rule__Event__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4980:1: ( rule__Event__Group_1__1__Impl rule__Event__Group_1__2 )
            // InternalMoniLog.g:4981:2: rule__Event__Group_1__1__Impl rule__Event__Group_1__2
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__1"


    // $ANTLR start "rule__Event__Group_1__1__Impl"
    // InternalMoniLog.g:4988:1: rule__Event__Group_1__1__Impl : ( 'complex' ) ;
    public final void rule__Event__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:4992:1: ( ( 'complex' ) )
            // InternalMoniLog.g:4993:1: ( 'complex' )
            {
            // InternalMoniLog.g:4993:1: ( 'complex' )
            // InternalMoniLog.g:4994:2: 'complex'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getComplexKeyword_1_1()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getComplexKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__1__Impl"


    // $ANTLR start "rule__Event__Group_1__2"
    // InternalMoniLog.g:5003:1: rule__Event__Group_1__2 : rule__Event__Group_1__2__Impl rule__Event__Group_1__3 ;
    public final void rule__Event__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5007:1: ( rule__Event__Group_1__2__Impl rule__Event__Group_1__3 )
            // InternalMoniLog.g:5008:2: rule__Event__Group_1__2__Impl rule__Event__Group_1__3
            {
            pushFollow(FOLLOW_21);
            rule__Event__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__2"


    // $ANTLR start "rule__Event__Group_1__2__Impl"
    // InternalMoniLog.g:5015:1: rule__Event__Group_1__2__Impl : ( ( rule__Event__NameAssignment_1_2 ) ) ;
    public final void rule__Event__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5019:1: ( ( ( rule__Event__NameAssignment_1_2 ) ) )
            // InternalMoniLog.g:5020:1: ( ( rule__Event__NameAssignment_1_2 ) )
            {
            // InternalMoniLog.g:5020:1: ( ( rule__Event__NameAssignment_1_2 ) )
            // InternalMoniLog.g:5021:2: ( rule__Event__NameAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameAssignment_1_2()); 
            }
            // InternalMoniLog.g:5022:2: ( rule__Event__NameAssignment_1_2 )
            // InternalMoniLog.g:5022:3: rule__Event__NameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Event__NameAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__2__Impl"


    // $ANTLR start "rule__Event__Group_1__3"
    // InternalMoniLog.g:5030:1: rule__Event__Group_1__3 : rule__Event__Group_1__3__Impl rule__Event__Group_1__4 ;
    public final void rule__Event__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5034:1: ( rule__Event__Group_1__3__Impl rule__Event__Group_1__4 )
            // InternalMoniLog.g:5035:2: rule__Event__Group_1__3__Impl rule__Event__Group_1__4
            {
            pushFollow(FOLLOW_21);
            rule__Event__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__3"


    // $ANTLR start "rule__Event__Group_1__3__Impl"
    // InternalMoniLog.g:5042:1: rule__Event__Group_1__3__Impl : ( ( rule__Event__Group_1_3__0 )? ) ;
    public final void rule__Event__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5046:1: ( ( ( rule__Event__Group_1_3__0 )? ) )
            // InternalMoniLog.g:5047:1: ( ( rule__Event__Group_1_3__0 )? )
            {
            // InternalMoniLog.g:5047:1: ( ( rule__Event__Group_1_3__0 )? )
            // InternalMoniLog.g:5048:2: ( rule__Event__Group_1_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getGroup_1_3()); 
            }
            // InternalMoniLog.g:5049:2: ( rule__Event__Group_1_3__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==47) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalMoniLog.g:5049:3: rule__Event__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getGroup_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__3__Impl"


    // $ANTLR start "rule__Event__Group_1__4"
    // InternalMoniLog.g:5057:1: rule__Event__Group_1__4 : rule__Event__Group_1__4__Impl rule__Event__Group_1__5 ;
    public final void rule__Event__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5061:1: ( rule__Event__Group_1__4__Impl rule__Event__Group_1__5 )
            // InternalMoniLog.g:5062:2: rule__Event__Group_1__4__Impl rule__Event__Group_1__5
            {
            pushFollow(FOLLOW_21);
            rule__Event__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__4"


    // $ANTLR start "rule__Event__Group_1__4__Impl"
    // InternalMoniLog.g:5069:1: rule__Event__Group_1__4__Impl : ( ( rule__Event__Group_1_4__0 )? ) ;
    public final void rule__Event__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5073:1: ( ( ( rule__Event__Group_1_4__0 )? ) )
            // InternalMoniLog.g:5074:1: ( ( rule__Event__Group_1_4__0 )? )
            {
            // InternalMoniLog.g:5074:1: ( ( rule__Event__Group_1_4__0 )? )
            // InternalMoniLog.g:5075:2: ( rule__Event__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getGroup_1_4()); 
            }
            // InternalMoniLog.g:5076:2: ( rule__Event__Group_1_4__0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==39) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalMoniLog.g:5076:3: rule__Event__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__4__Impl"


    // $ANTLR start "rule__Event__Group_1__5"
    // InternalMoniLog.g:5084:1: rule__Event__Group_1__5 : rule__Event__Group_1__5__Impl rule__Event__Group_1__6 ;
    public final void rule__Event__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5088:1: ( rule__Event__Group_1__5__Impl rule__Event__Group_1__6 )
            // InternalMoniLog.g:5089:2: rule__Event__Group_1__5__Impl rule__Event__Group_1__6
            {
            pushFollow(FOLLOW_30);
            rule__Event__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__5"


    // $ANTLR start "rule__Event__Group_1__5__Impl"
    // InternalMoniLog.g:5096:1: rule__Event__Group_1__5__Impl : ( '{' ) ;
    public final void rule__Event__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5100:1: ( ( '{' ) )
            // InternalMoniLog.g:5101:1: ( '{' )
            {
            // InternalMoniLog.g:5101:1: ( '{' )
            // InternalMoniLog.g:5102:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_1_5()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__5__Impl"


    // $ANTLR start "rule__Event__Group_1__6"
    // InternalMoniLog.g:5111:1: rule__Event__Group_1__6 : rule__Event__Group_1__6__Impl rule__Event__Group_1__7 ;
    public final void rule__Event__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5115:1: ( rule__Event__Group_1__6__Impl rule__Event__Group_1__7 )
            // InternalMoniLog.g:5116:2: rule__Event__Group_1__6__Impl rule__Event__Group_1__7
            {
            pushFollow(FOLLOW_15);
            rule__Event__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__6"


    // $ANTLR start "rule__Event__Group_1__6__Impl"
    // InternalMoniLog.g:5123:1: rule__Event__Group_1__6__Impl : ( ( rule__Event__PatternAssignment_1_6 ) ) ;
    public final void rule__Event__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5127:1: ( ( ( rule__Event__PatternAssignment_1_6 ) ) )
            // InternalMoniLog.g:5128:1: ( ( rule__Event__PatternAssignment_1_6 ) )
            {
            // InternalMoniLog.g:5128:1: ( ( rule__Event__PatternAssignment_1_6 ) )
            // InternalMoniLog.g:5129:2: ( rule__Event__PatternAssignment_1_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getPatternAssignment_1_6()); 
            }
            // InternalMoniLog.g:5130:2: ( rule__Event__PatternAssignment_1_6 )
            // InternalMoniLog.g:5130:3: rule__Event__PatternAssignment_1_6
            {
            pushFollow(FOLLOW_2);
            rule__Event__PatternAssignment_1_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getPatternAssignment_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__6__Impl"


    // $ANTLR start "rule__Event__Group_1__7"
    // InternalMoniLog.g:5138:1: rule__Event__Group_1__7 : rule__Event__Group_1__7__Impl ;
    public final void rule__Event__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5142:1: ( rule__Event__Group_1__7__Impl )
            // InternalMoniLog.g:5143:2: rule__Event__Group_1__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__7"


    // $ANTLR start "rule__Event__Group_1__7__Impl"
    // InternalMoniLog.g:5149:1: rule__Event__Group_1__7__Impl : ( '}' ) ;
    public final void rule__Event__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5153:1: ( ( '}' ) )
            // InternalMoniLog.g:5154:1: ( '}' )
            {
            // InternalMoniLog.g:5154:1: ( '}' )
            // InternalMoniLog.g:5155:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_1_7()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1__7__Impl"


    // $ANTLR start "rule__Event__Group_1_3__0"
    // InternalMoniLog.g:5165:1: rule__Event__Group_1_3__0 : rule__Event__Group_1_3__0__Impl rule__Event__Group_1_3__1 ;
    public final void rule__Event__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5169:1: ( rule__Event__Group_1_3__0__Impl rule__Event__Group_1_3__1 )
            // InternalMoniLog.g:5170:2: rule__Event__Group_1_3__0__Impl rule__Event__Group_1_3__1
            {
            pushFollow(FOLLOW_31);
            rule__Event__Group_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__0"


    // $ANTLR start "rule__Event__Group_1_3__0__Impl"
    // InternalMoniLog.g:5177:1: rule__Event__Group_1_3__0__Impl : ( '[' ) ;
    public final void rule__Event__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5181:1: ( ( '[' ) )
            // InternalMoniLog.g:5182:1: ( '[' )
            {
            // InternalMoniLog.g:5182:1: ( '[' )
            // InternalMoniLog.g:5183:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftSquareBracketKeyword_1_3_0()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftSquareBracketKeyword_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__0__Impl"


    // $ANTLR start "rule__Event__Group_1_3__1"
    // InternalMoniLog.g:5192:1: rule__Event__Group_1_3__1 : rule__Event__Group_1_3__1__Impl rule__Event__Group_1_3__2 ;
    public final void rule__Event__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5196:1: ( rule__Event__Group_1_3__1__Impl rule__Event__Group_1_3__2 )
            // InternalMoniLog.g:5197:2: rule__Event__Group_1_3__1__Impl rule__Event__Group_1_3__2
            {
            pushFollow(FOLLOW_26);
            rule__Event__Group_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__1"


    // $ANTLR start "rule__Event__Group_1_3__1__Impl"
    // InternalMoniLog.g:5204:1: rule__Event__Group_1_3__1__Impl : ( ( rule__Event__KindAssignment_1_3_1 ) ) ;
    public final void rule__Event__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5208:1: ( ( ( rule__Event__KindAssignment_1_3_1 ) ) )
            // InternalMoniLog.g:5209:1: ( ( rule__Event__KindAssignment_1_3_1 ) )
            {
            // InternalMoniLog.g:5209:1: ( ( rule__Event__KindAssignment_1_3_1 ) )
            // InternalMoniLog.g:5210:2: ( rule__Event__KindAssignment_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getKindAssignment_1_3_1()); 
            }
            // InternalMoniLog.g:5211:2: ( rule__Event__KindAssignment_1_3_1 )
            // InternalMoniLog.g:5211:3: rule__Event__KindAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Event__KindAssignment_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getKindAssignment_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__1__Impl"


    // $ANTLR start "rule__Event__Group_1_3__2"
    // InternalMoniLog.g:5219:1: rule__Event__Group_1_3__2 : rule__Event__Group_1_3__2__Impl ;
    public final void rule__Event__Group_1_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5223:1: ( rule__Event__Group_1_3__2__Impl )
            // InternalMoniLog.g:5224:2: rule__Event__Group_1_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__2"


    // $ANTLR start "rule__Event__Group_1_3__2__Impl"
    // InternalMoniLog.g:5230:1: rule__Event__Group_1_3__2__Impl : ( ']' ) ;
    public final void rule__Event__Group_1_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5234:1: ( ( ']' ) )
            // InternalMoniLog.g:5235:1: ( ']' )
            {
            // InternalMoniLog.g:5235:1: ( ']' )
            // InternalMoniLog.g:5236:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightSquareBracketKeyword_1_3_2()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightSquareBracketKeyword_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_3__2__Impl"


    // $ANTLR start "rule__Event__Group_1_4__0"
    // InternalMoniLog.g:5246:1: rule__Event__Group_1_4__0 : rule__Event__Group_1_4__0__Impl rule__Event__Group_1_4__1 ;
    public final void rule__Event__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5250:1: ( rule__Event__Group_1_4__0__Impl rule__Event__Group_1_4__1 )
            // InternalMoniLog.g:5251:2: rule__Event__Group_1_4__0__Impl rule__Event__Group_1_4__1
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__0"


    // $ANTLR start "rule__Event__Group_1_4__0__Impl"
    // InternalMoniLog.g:5258:1: rule__Event__Group_1_4__0__Impl : ( '(' ) ;
    public final void rule__Event__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5262:1: ( ( '(' ) )
            // InternalMoniLog.g:5263:1: ( '(' )
            {
            // InternalMoniLog.g:5263:1: ( '(' )
            // InternalMoniLog.g:5264:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftParenthesisKeyword_1_4_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftParenthesisKeyword_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__0__Impl"


    // $ANTLR start "rule__Event__Group_1_4__1"
    // InternalMoniLog.g:5273:1: rule__Event__Group_1_4__1 : rule__Event__Group_1_4__1__Impl rule__Event__Group_1_4__2 ;
    public final void rule__Event__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5277:1: ( rule__Event__Group_1_4__1__Impl rule__Event__Group_1_4__2 )
            // InternalMoniLog.g:5278:2: rule__Event__Group_1_4__1__Impl rule__Event__Group_1_4__2
            {
            pushFollow(FOLLOW_13);
            rule__Event__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__1"


    // $ANTLR start "rule__Event__Group_1_4__1__Impl"
    // InternalMoniLog.g:5285:1: rule__Event__Group_1_4__1__Impl : ( ( rule__Event__ParameterDeclAssignment_1_4_1 ) ) ;
    public final void rule__Event__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5289:1: ( ( ( rule__Event__ParameterDeclAssignment_1_4_1 ) ) )
            // InternalMoniLog.g:5290:1: ( ( rule__Event__ParameterDeclAssignment_1_4_1 ) )
            {
            // InternalMoniLog.g:5290:1: ( ( rule__Event__ParameterDeclAssignment_1_4_1 ) )
            // InternalMoniLog.g:5291:2: ( rule__Event__ParameterDeclAssignment_1_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclAssignment_1_4_1()); 
            }
            // InternalMoniLog.g:5292:2: ( rule__Event__ParameterDeclAssignment_1_4_1 )
            // InternalMoniLog.g:5292:3: rule__Event__ParameterDeclAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Event__ParameterDeclAssignment_1_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclAssignment_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__1__Impl"


    // $ANTLR start "rule__Event__Group_1_4__2"
    // InternalMoniLog.g:5300:1: rule__Event__Group_1_4__2 : rule__Event__Group_1_4__2__Impl ;
    public final void rule__Event__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5304:1: ( rule__Event__Group_1_4__2__Impl )
            // InternalMoniLog.g:5305:2: rule__Event__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__2"


    // $ANTLR start "rule__Event__Group_1_4__2__Impl"
    // InternalMoniLog.g:5311:1: rule__Event__Group_1_4__2__Impl : ( ')' ) ;
    public final void rule__Event__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5315:1: ( ( ')' ) )
            // InternalMoniLog.g:5316:1: ( ')' )
            {
            // InternalMoniLog.g:5316:1: ( ')' )
            // InternalMoniLog.g:5317:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_1_4__2__Impl"


    // $ANTLR start "rule__Event__Group_2__0"
    // InternalMoniLog.g:5327:1: rule__Event__Group_2__0 : rule__Event__Group_2__0__Impl rule__Event__Group_2__1 ;
    public final void rule__Event__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5331:1: ( rule__Event__Group_2__0__Impl rule__Event__Group_2__1 )
            // InternalMoniLog.g:5332:2: rule__Event__Group_2__0__Impl rule__Event__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__Event__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__0"


    // $ANTLR start "rule__Event__Group_2__0__Impl"
    // InternalMoniLog.g:5339:1: rule__Event__Group_2__0__Impl : ( () ) ;
    public final void rule__Event__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5343:1: ( ( () ) )
            // InternalMoniLog.g:5344:1: ( () )
            {
            // InternalMoniLog.g:5344:1: ( () )
            // InternalMoniLog.g:5345:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getUserEventAction_2_0()); 
            }
            // InternalMoniLog.g:5346:2: ()
            // InternalMoniLog.g:5346:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getUserEventAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__0__Impl"


    // $ANTLR start "rule__Event__Group_2__1"
    // InternalMoniLog.g:5354:1: rule__Event__Group_2__1 : rule__Event__Group_2__1__Impl rule__Event__Group_2__2 ;
    public final void rule__Event__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5358:1: ( rule__Event__Group_2__1__Impl rule__Event__Group_2__2 )
            // InternalMoniLog.g:5359:2: rule__Event__Group_2__1__Impl rule__Event__Group_2__2
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__1"


    // $ANTLR start "rule__Event__Group_2__1__Impl"
    // InternalMoniLog.g:5366:1: rule__Event__Group_2__1__Impl : ( 'custom' ) ;
    public final void rule__Event__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5370:1: ( ( 'custom' ) )
            // InternalMoniLog.g:5371:1: ( 'custom' )
            {
            // InternalMoniLog.g:5371:1: ( 'custom' )
            // InternalMoniLog.g:5372:2: 'custom'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getCustomKeyword_2_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getCustomKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__1__Impl"


    // $ANTLR start "rule__Event__Group_2__2"
    // InternalMoniLog.g:5381:1: rule__Event__Group_2__2 : rule__Event__Group_2__2__Impl rule__Event__Group_2__3 ;
    public final void rule__Event__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5385:1: ( rule__Event__Group_2__2__Impl rule__Event__Group_2__3 )
            // InternalMoniLog.g:5386:2: rule__Event__Group_2__2__Impl rule__Event__Group_2__3
            {
            pushFollow(FOLLOW_14);
            rule__Event__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__2"


    // $ANTLR start "rule__Event__Group_2__2__Impl"
    // InternalMoniLog.g:5393:1: rule__Event__Group_2__2__Impl : ( ( rule__Event__NameAssignment_2_2 ) ) ;
    public final void rule__Event__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5397:1: ( ( ( rule__Event__NameAssignment_2_2 ) ) )
            // InternalMoniLog.g:5398:1: ( ( rule__Event__NameAssignment_2_2 ) )
            {
            // InternalMoniLog.g:5398:1: ( ( rule__Event__NameAssignment_2_2 ) )
            // InternalMoniLog.g:5399:2: ( rule__Event__NameAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameAssignment_2_2()); 
            }
            // InternalMoniLog.g:5400:2: ( rule__Event__NameAssignment_2_2 )
            // InternalMoniLog.g:5400:3: rule__Event__NameAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Event__NameAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__2__Impl"


    // $ANTLR start "rule__Event__Group_2__3"
    // InternalMoniLog.g:5408:1: rule__Event__Group_2__3 : rule__Event__Group_2__3__Impl ;
    public final void rule__Event__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5412:1: ( rule__Event__Group_2__3__Impl )
            // InternalMoniLog.g:5413:2: rule__Event__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__3"


    // $ANTLR start "rule__Event__Group_2__3__Impl"
    // InternalMoniLog.g:5419:1: rule__Event__Group_2__3__Impl : ( ( rule__Event__Group_2_3__0 )? ) ;
    public final void rule__Event__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5423:1: ( ( ( rule__Event__Group_2_3__0 )? ) )
            // InternalMoniLog.g:5424:1: ( ( rule__Event__Group_2_3__0 )? )
            {
            // InternalMoniLog.g:5424:1: ( ( rule__Event__Group_2_3__0 )? )
            // InternalMoniLog.g:5425:2: ( rule__Event__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getGroup_2_3()); 
            }
            // InternalMoniLog.g:5426:2: ( rule__Event__Group_2_3__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==39) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalMoniLog.g:5426:3: rule__Event__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Event__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2__3__Impl"


    // $ANTLR start "rule__Event__Group_2_3__0"
    // InternalMoniLog.g:5435:1: rule__Event__Group_2_3__0 : rule__Event__Group_2_3__0__Impl rule__Event__Group_2_3__1 ;
    public final void rule__Event__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5439:1: ( rule__Event__Group_2_3__0__Impl rule__Event__Group_2_3__1 )
            // InternalMoniLog.g:5440:2: rule__Event__Group_2_3__0__Impl rule__Event__Group_2_3__1
            {
            pushFollow(FOLLOW_3);
            rule__Event__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__0"


    // $ANTLR start "rule__Event__Group_2_3__0__Impl"
    // InternalMoniLog.g:5447:1: rule__Event__Group_2_3__0__Impl : ( '(' ) ;
    public final void rule__Event__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5451:1: ( ( '(' ) )
            // InternalMoniLog.g:5452:1: ( '(' )
            {
            // InternalMoniLog.g:5452:1: ( '(' )
            // InternalMoniLog.g:5453:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getLeftParenthesisKeyword_2_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getLeftParenthesisKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__0__Impl"


    // $ANTLR start "rule__Event__Group_2_3__1"
    // InternalMoniLog.g:5462:1: rule__Event__Group_2_3__1 : rule__Event__Group_2_3__1__Impl rule__Event__Group_2_3__2 ;
    public final void rule__Event__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5466:1: ( rule__Event__Group_2_3__1__Impl rule__Event__Group_2_3__2 )
            // InternalMoniLog.g:5467:2: rule__Event__Group_2_3__1__Impl rule__Event__Group_2_3__2
            {
            pushFollow(FOLLOW_13);
            rule__Event__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Event__Group_2_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__1"


    // $ANTLR start "rule__Event__Group_2_3__1__Impl"
    // InternalMoniLog.g:5474:1: rule__Event__Group_2_3__1__Impl : ( ( rule__Event__ParameterDeclAssignment_2_3_1 ) ) ;
    public final void rule__Event__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5478:1: ( ( ( rule__Event__ParameterDeclAssignment_2_3_1 ) ) )
            // InternalMoniLog.g:5479:1: ( ( rule__Event__ParameterDeclAssignment_2_3_1 ) )
            {
            // InternalMoniLog.g:5479:1: ( ( rule__Event__ParameterDeclAssignment_2_3_1 ) )
            // InternalMoniLog.g:5480:2: ( rule__Event__ParameterDeclAssignment_2_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclAssignment_2_3_1()); 
            }
            // InternalMoniLog.g:5481:2: ( rule__Event__ParameterDeclAssignment_2_3_1 )
            // InternalMoniLog.g:5481:3: rule__Event__ParameterDeclAssignment_2_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Event__ParameterDeclAssignment_2_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclAssignment_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__1__Impl"


    // $ANTLR start "rule__Event__Group_2_3__2"
    // InternalMoniLog.g:5489:1: rule__Event__Group_2_3__2 : rule__Event__Group_2_3__2__Impl ;
    public final void rule__Event__Group_2_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5493:1: ( rule__Event__Group_2_3__2__Impl )
            // InternalMoniLog.g:5494:2: rule__Event__Group_2_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Event__Group_2_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__2"


    // $ANTLR start "rule__Event__Group_2_3__2__Impl"
    // InternalMoniLog.g:5500:1: rule__Event__Group_2_3__2__Impl : ( ')' ) ;
    public final void rule__Event__Group_2_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5504:1: ( ( ')' ) )
            // InternalMoniLog.g:5505:1: ( ')' )
            {
            // InternalMoniLog.g:5505:1: ( ')' )
            // InternalMoniLog.g:5506:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRightParenthesisKeyword_2_3_2()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRightParenthesisKeyword_2_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__Group_2_3__2__Impl"


    // $ANTLR start "rule__ASTEventKind__Group_0__0"
    // InternalMoniLog.g:5516:1: rule__ASTEventKind__Group_0__0 : rule__ASTEventKind__Group_0__0__Impl rule__ASTEventKind__Group_0__1 ;
    public final void rule__ASTEventKind__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5520:1: ( rule__ASTEventKind__Group_0__0__Impl rule__ASTEventKind__Group_0__1 )
            // InternalMoniLog.g:5521:2: rule__ASTEventKind__Group_0__0__Impl rule__ASTEventKind__Group_0__1
            {
            pushFollow(FOLLOW_33);
            rule__ASTEventKind__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTEventKind__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_0__0"


    // $ANTLR start "rule__ASTEventKind__Group_0__0__Impl"
    // InternalMoniLog.g:5528:1: rule__ASTEventKind__Group_0__0__Impl : ( () ) ;
    public final void rule__ASTEventKind__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5532:1: ( ( () ) )
            // InternalMoniLog.g:5533:1: ( () )
            {
            // InternalMoniLog.g:5533:1: ( () )
            // InternalMoniLog.g:5534:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindAccess().getBeforeASTEventAction_0_0()); 
            }
            // InternalMoniLog.g:5535:2: ()
            // InternalMoniLog.g:5535:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindAccess().getBeforeASTEventAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_0__0__Impl"


    // $ANTLR start "rule__ASTEventKind__Group_0__1"
    // InternalMoniLog.g:5543:1: rule__ASTEventKind__Group_0__1 : rule__ASTEventKind__Group_0__1__Impl ;
    public final void rule__ASTEventKind__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5547:1: ( rule__ASTEventKind__Group_0__1__Impl )
            // InternalMoniLog.g:5548:2: rule__ASTEventKind__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTEventKind__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_0__1"


    // $ANTLR start "rule__ASTEventKind__Group_0__1__Impl"
    // InternalMoniLog.g:5554:1: rule__ASTEventKind__Group_0__1__Impl : ( 'before' ) ;
    public final void rule__ASTEventKind__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5558:1: ( ( 'before' ) )
            // InternalMoniLog.g:5559:1: ( 'before' )
            {
            // InternalMoniLog.g:5559:1: ( 'before' )
            // InternalMoniLog.g:5560:2: 'before'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindAccess().getBeforeKeyword_0_1()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindAccess().getBeforeKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_0__1__Impl"


    // $ANTLR start "rule__ASTEventKind__Group_1__0"
    // InternalMoniLog.g:5570:1: rule__ASTEventKind__Group_1__0 : rule__ASTEventKind__Group_1__0__Impl rule__ASTEventKind__Group_1__1 ;
    public final void rule__ASTEventKind__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5574:1: ( rule__ASTEventKind__Group_1__0__Impl rule__ASTEventKind__Group_1__1 )
            // InternalMoniLog.g:5575:2: rule__ASTEventKind__Group_1__0__Impl rule__ASTEventKind__Group_1__1
            {
            pushFollow(FOLLOW_28);
            rule__ASTEventKind__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTEventKind__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_1__0"


    // $ANTLR start "rule__ASTEventKind__Group_1__0__Impl"
    // InternalMoniLog.g:5582:1: rule__ASTEventKind__Group_1__0__Impl : ( () ) ;
    public final void rule__ASTEventKind__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5586:1: ( ( () ) )
            // InternalMoniLog.g:5587:1: ( () )
            {
            // InternalMoniLog.g:5587:1: ( () )
            // InternalMoniLog.g:5588:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindAccess().getAfterASTEventAction_1_0()); 
            }
            // InternalMoniLog.g:5589:2: ()
            // InternalMoniLog.g:5589:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindAccess().getAfterASTEventAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_1__0__Impl"


    // $ANTLR start "rule__ASTEventKind__Group_1__1"
    // InternalMoniLog.g:5597:1: rule__ASTEventKind__Group_1__1 : rule__ASTEventKind__Group_1__1__Impl ;
    public final void rule__ASTEventKind__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5601:1: ( rule__ASTEventKind__Group_1__1__Impl )
            // InternalMoniLog.g:5602:2: rule__ASTEventKind__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTEventKind__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_1__1"


    // $ANTLR start "rule__ASTEventKind__Group_1__1__Impl"
    // InternalMoniLog.g:5608:1: rule__ASTEventKind__Group_1__1__Impl : ( 'after' ) ;
    public final void rule__ASTEventKind__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5612:1: ( ( 'after' ) )
            // InternalMoniLog.g:5613:1: ( 'after' )
            {
            // InternalMoniLog.g:5613:1: ( 'after' )
            // InternalMoniLog.g:5614:2: 'after'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTEventKindAccess().getAfterKeyword_1_1()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTEventKindAccess().getAfterKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTEventKind__Group_1__1__Impl"


    // $ANTLR start "rule__TemporalPattern__Group__0"
    // InternalMoniLog.g:5624:1: rule__TemporalPattern__Group__0 : rule__TemporalPattern__Group__0__Impl rule__TemporalPattern__Group__1 ;
    public final void rule__TemporalPattern__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5628:1: ( rule__TemporalPattern__Group__0__Impl rule__TemporalPattern__Group__1 )
            // InternalMoniLog.g:5629:2: rule__TemporalPattern__Group__0__Impl rule__TemporalPattern__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__TemporalPattern__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalPattern__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__Group__0"


    // $ANTLR start "rule__TemporalPattern__Group__0__Impl"
    // InternalMoniLog.g:5636:1: rule__TemporalPattern__Group__0__Impl : ( ( rule__TemporalPattern__PatternAssignment_0 ) ) ;
    public final void rule__TemporalPattern__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5640:1: ( ( ( rule__TemporalPattern__PatternAssignment_0 ) ) )
            // InternalMoniLog.g:5641:1: ( ( rule__TemporalPattern__PatternAssignment_0 ) )
            {
            // InternalMoniLog.g:5641:1: ( ( rule__TemporalPattern__PatternAssignment_0 ) )
            // InternalMoniLog.g:5642:2: ( rule__TemporalPattern__PatternAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternAccess().getPatternAssignment_0()); 
            }
            // InternalMoniLog.g:5643:2: ( rule__TemporalPattern__PatternAssignment_0 )
            // InternalMoniLog.g:5643:3: rule__TemporalPattern__PatternAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TemporalPattern__PatternAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternAccess().getPatternAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__Group__0__Impl"


    // $ANTLR start "rule__TemporalPattern__Group__1"
    // InternalMoniLog.g:5651:1: rule__TemporalPattern__Group__1 : rule__TemporalPattern__Group__1__Impl ;
    public final void rule__TemporalPattern__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5655:1: ( rule__TemporalPattern__Group__1__Impl )
            // InternalMoniLog.g:5656:2: rule__TemporalPattern__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalPattern__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__Group__1"


    // $ANTLR start "rule__TemporalPattern__Group__1__Impl"
    // InternalMoniLog.g:5662:1: rule__TemporalPattern__Group__1__Impl : ( ( rule__TemporalPattern__ScopeAssignment_1 ) ) ;
    public final void rule__TemporalPattern__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5666:1: ( ( ( rule__TemporalPattern__ScopeAssignment_1 ) ) )
            // InternalMoniLog.g:5667:1: ( ( rule__TemporalPattern__ScopeAssignment_1 ) )
            {
            // InternalMoniLog.g:5667:1: ( ( rule__TemporalPattern__ScopeAssignment_1 ) )
            // InternalMoniLog.g:5668:2: ( rule__TemporalPattern__ScopeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternAccess().getScopeAssignment_1()); 
            }
            // InternalMoniLog.g:5669:2: ( rule__TemporalPattern__ScopeAssignment_1 )
            // InternalMoniLog.g:5669:3: rule__TemporalPattern__ScopeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TemporalPattern__ScopeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternAccess().getScopeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__Group__1__Impl"


    // $ANTLR start "rule__Pattern__Group_0__0"
    // InternalMoniLog.g:5678:1: rule__Pattern__Group_0__0 : rule__Pattern__Group_0__0__Impl rule__Pattern__Group_0__1 ;
    public final void rule__Pattern__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5682:1: ( rule__Pattern__Group_0__0__Impl rule__Pattern__Group_0__1 )
            // InternalMoniLog.g:5683:2: rule__Pattern__Group_0__0__Impl rule__Pattern__Group_0__1
            {
            pushFollow(FOLLOW_35);
            rule__Pattern__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__0"


    // $ANTLR start "rule__Pattern__Group_0__0__Impl"
    // InternalMoniLog.g:5690:1: rule__Pattern__Group_0__0__Impl : ( () ) ;
    public final void rule__Pattern__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5694:1: ( ( () ) )
            // InternalMoniLog.g:5695:1: ( () )
            {
            // InternalMoniLog.g:5695:1: ( () )
            // InternalMoniLog.g:5696:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getExistenceAction_0_0()); 
            }
            // InternalMoniLog.g:5697:2: ()
            // InternalMoniLog.g:5697:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getExistenceAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__0__Impl"


    // $ANTLR start "rule__Pattern__Group_0__1"
    // InternalMoniLog.g:5705:1: rule__Pattern__Group_0__1 : rule__Pattern__Group_0__1__Impl rule__Pattern__Group_0__2 ;
    public final void rule__Pattern__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5709:1: ( rule__Pattern__Group_0__1__Impl rule__Pattern__Group_0__2 )
            // InternalMoniLog.g:5710:2: rule__Pattern__Group_0__1__Impl rule__Pattern__Group_0__2
            {
            pushFollow(FOLLOW_35);
            rule__Pattern__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__1"


    // $ANTLR start "rule__Pattern__Group_0__1__Impl"
    // InternalMoniLog.g:5717:1: rule__Pattern__Group_0__1__Impl : ( ( 'exists' )? ) ;
    public final void rule__Pattern__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5721:1: ( ( ( 'exists' )? ) )
            // InternalMoniLog.g:5722:1: ( ( 'exists' )? )
            {
            // InternalMoniLog.g:5722:1: ( ( 'exists' )? )
            // InternalMoniLog.g:5723:2: ( 'exists' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getExistsKeyword_0_1()); 
            }
            // InternalMoniLog.g:5724:2: ( 'exists' )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==55) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalMoniLog.g:5724:3: 'exists'
                    {
                    match(input,55,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getExistsKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__1__Impl"


    // $ANTLR start "rule__Pattern__Group_0__2"
    // InternalMoniLog.g:5732:1: rule__Pattern__Group_0__2 : rule__Pattern__Group_0__2__Impl rule__Pattern__Group_0__3 ;
    public final void rule__Pattern__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5736:1: ( rule__Pattern__Group_0__2__Impl rule__Pattern__Group_0__3 )
            // InternalMoniLog.g:5737:2: rule__Pattern__Group_0__2__Impl rule__Pattern__Group_0__3
            {
            pushFollow(FOLLOW_35);
            rule__Pattern__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__2"


    // $ANTLR start "rule__Pattern__Group_0__2__Impl"
    // InternalMoniLog.g:5744:1: rule__Pattern__Group_0__2__Impl : ( ( rule__Pattern__BoundAssignment_0_2 )? ) ;
    public final void rule__Pattern__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5748:1: ( ( ( rule__Pattern__BoundAssignment_0_2 )? ) )
            // InternalMoniLog.g:5749:1: ( ( rule__Pattern__BoundAssignment_0_2 )? )
            {
            // InternalMoniLog.g:5749:1: ( ( rule__Pattern__BoundAssignment_0_2 )? )
            // InternalMoniLog.g:5750:2: ( rule__Pattern__BoundAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getBoundAssignment_0_2()); 
            }
            // InternalMoniLog.g:5751:2: ( rule__Pattern__BoundAssignment_0_2 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_INT||(LA51_0>=60 && LA51_0<=61)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalMoniLog.g:5751:3: rule__Pattern__BoundAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Pattern__BoundAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getBoundAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__2__Impl"


    // $ANTLR start "rule__Pattern__Group_0__3"
    // InternalMoniLog.g:5759:1: rule__Pattern__Group_0__3 : rule__Pattern__Group_0__3__Impl ;
    public final void rule__Pattern__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5763:1: ( rule__Pattern__Group_0__3__Impl )
            // InternalMoniLog.g:5764:2: rule__Pattern__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__3"


    // $ANTLR start "rule__Pattern__Group_0__3__Impl"
    // InternalMoniLog.g:5770:1: rule__Pattern__Group_0__3__Impl : ( ( rule__Pattern__EventAssignment_0_3 ) ) ;
    public final void rule__Pattern__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5774:1: ( ( ( rule__Pattern__EventAssignment_0_3 ) ) )
            // InternalMoniLog.g:5775:1: ( ( rule__Pattern__EventAssignment_0_3 ) )
            {
            // InternalMoniLog.g:5775:1: ( ( rule__Pattern__EventAssignment_0_3 ) )
            // InternalMoniLog.g:5776:2: ( rule__Pattern__EventAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventAssignment_0_3()); 
            }
            // InternalMoniLog.g:5777:2: ( rule__Pattern__EventAssignment_0_3 )
            // InternalMoniLog.g:5777:3: rule__Pattern__EventAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__EventAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_0__3__Impl"


    // $ANTLR start "rule__Pattern__Group_1__0"
    // InternalMoniLog.g:5786:1: rule__Pattern__Group_1__0 : rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1 ;
    public final void rule__Pattern__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5790:1: ( rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1 )
            // InternalMoniLog.g:5791:2: rule__Pattern__Group_1__0__Impl rule__Pattern__Group_1__1
            {
            pushFollow(FOLLOW_36);
            rule__Pattern__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__0"


    // $ANTLR start "rule__Pattern__Group_1__0__Impl"
    // InternalMoniLog.g:5798:1: rule__Pattern__Group_1__0__Impl : ( () ) ;
    public final void rule__Pattern__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5802:1: ( ( () ) )
            // InternalMoniLog.g:5803:1: ( () )
            {
            // InternalMoniLog.g:5803:1: ( () )
            // InternalMoniLog.g:5804:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getUniversalityAction_1_0()); 
            }
            // InternalMoniLog.g:5805:2: ()
            // InternalMoniLog.g:5805:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getUniversalityAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__0__Impl"


    // $ANTLR start "rule__Pattern__Group_1__1"
    // InternalMoniLog.g:5813:1: rule__Pattern__Group_1__1 : rule__Pattern__Group_1__1__Impl rule__Pattern__Group_1__2 ;
    public final void rule__Pattern__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5817:1: ( rule__Pattern__Group_1__1__Impl rule__Pattern__Group_1__2 )
            // InternalMoniLog.g:5818:2: rule__Pattern__Group_1__1__Impl rule__Pattern__Group_1__2
            {
            pushFollow(FOLLOW_3);
            rule__Pattern__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__1"


    // $ANTLR start "rule__Pattern__Group_1__1__Impl"
    // InternalMoniLog.g:5825:1: rule__Pattern__Group_1__1__Impl : ( 'always' ) ;
    public final void rule__Pattern__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5829:1: ( ( 'always' ) )
            // InternalMoniLog.g:5830:1: ( 'always' )
            {
            // InternalMoniLog.g:5830:1: ( 'always' )
            // InternalMoniLog.g:5831:2: 'always'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getAlwaysKeyword_1_1()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getAlwaysKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__1__Impl"


    // $ANTLR start "rule__Pattern__Group_1__2"
    // InternalMoniLog.g:5840:1: rule__Pattern__Group_1__2 : rule__Pattern__Group_1__2__Impl ;
    public final void rule__Pattern__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5844:1: ( rule__Pattern__Group_1__2__Impl )
            // InternalMoniLog.g:5845:2: rule__Pattern__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__2"


    // $ANTLR start "rule__Pattern__Group_1__2__Impl"
    // InternalMoniLog.g:5851:1: rule__Pattern__Group_1__2__Impl : ( ( rule__Pattern__EventAssignment_1_2 ) ) ;
    public final void rule__Pattern__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5855:1: ( ( ( rule__Pattern__EventAssignment_1_2 ) ) )
            // InternalMoniLog.g:5856:1: ( ( rule__Pattern__EventAssignment_1_2 ) )
            {
            // InternalMoniLog.g:5856:1: ( ( rule__Pattern__EventAssignment_1_2 ) )
            // InternalMoniLog.g:5857:2: ( rule__Pattern__EventAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventAssignment_1_2()); 
            }
            // InternalMoniLog.g:5858:2: ( rule__Pattern__EventAssignment_1_2 )
            // InternalMoniLog.g:5858:3: rule__Pattern__EventAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__EventAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_1__2__Impl"


    // $ANTLR start "rule__Pattern__Group_2__0"
    // InternalMoniLog.g:5867:1: rule__Pattern__Group_2__0 : rule__Pattern__Group_2__0__Impl rule__Pattern__Group_2__1 ;
    public final void rule__Pattern__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5871:1: ( rule__Pattern__Group_2__0__Impl rule__Pattern__Group_2__1 )
            // InternalMoniLog.g:5872:2: rule__Pattern__Group_2__0__Impl rule__Pattern__Group_2__1
            {
            pushFollow(FOLLOW_37);
            rule__Pattern__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__0"


    // $ANTLR start "rule__Pattern__Group_2__0__Impl"
    // InternalMoniLog.g:5879:1: rule__Pattern__Group_2__0__Impl : ( () ) ;
    public final void rule__Pattern__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5883:1: ( ( () ) )
            // InternalMoniLog.g:5884:1: ( () )
            {
            // InternalMoniLog.g:5884:1: ( () )
            // InternalMoniLog.g:5885:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getAbsenceAction_2_0()); 
            }
            // InternalMoniLog.g:5886:2: ()
            // InternalMoniLog.g:5886:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getAbsenceAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__0__Impl"


    // $ANTLR start "rule__Pattern__Group_2__1"
    // InternalMoniLog.g:5894:1: rule__Pattern__Group_2__1 : rule__Pattern__Group_2__1__Impl rule__Pattern__Group_2__2 ;
    public final void rule__Pattern__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5898:1: ( rule__Pattern__Group_2__1__Impl rule__Pattern__Group_2__2 )
            // InternalMoniLog.g:5899:2: rule__Pattern__Group_2__1__Impl rule__Pattern__Group_2__2
            {
            pushFollow(FOLLOW_3);
            rule__Pattern__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__1"


    // $ANTLR start "rule__Pattern__Group_2__1__Impl"
    // InternalMoniLog.g:5906:1: rule__Pattern__Group_2__1__Impl : ( 'never' ) ;
    public final void rule__Pattern__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5910:1: ( ( 'never' ) )
            // InternalMoniLog.g:5911:1: ( 'never' )
            {
            // InternalMoniLog.g:5911:1: ( 'never' )
            // InternalMoniLog.g:5912:2: 'never'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getNeverKeyword_2_1()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getNeverKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__1__Impl"


    // $ANTLR start "rule__Pattern__Group_2__2"
    // InternalMoniLog.g:5921:1: rule__Pattern__Group_2__2 : rule__Pattern__Group_2__2__Impl ;
    public final void rule__Pattern__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5925:1: ( rule__Pattern__Group_2__2__Impl )
            // InternalMoniLog.g:5926:2: rule__Pattern__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__2"


    // $ANTLR start "rule__Pattern__Group_2__2__Impl"
    // InternalMoniLog.g:5932:1: rule__Pattern__Group_2__2__Impl : ( ( rule__Pattern__EventAssignment_2_2 ) ) ;
    public final void rule__Pattern__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5936:1: ( ( ( rule__Pattern__EventAssignment_2_2 ) ) )
            // InternalMoniLog.g:5937:1: ( ( rule__Pattern__EventAssignment_2_2 ) )
            {
            // InternalMoniLog.g:5937:1: ( ( rule__Pattern__EventAssignment_2_2 ) )
            // InternalMoniLog.g:5938:2: ( rule__Pattern__EventAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventAssignment_2_2()); 
            }
            // InternalMoniLog.g:5939:2: ( rule__Pattern__EventAssignment_2_2 )
            // InternalMoniLog.g:5939:3: rule__Pattern__EventAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__EventAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_2__2__Impl"


    // $ANTLR start "rule__Pattern__Group_3__0"
    // InternalMoniLog.g:5948:1: rule__Pattern__Group_3__0 : rule__Pattern__Group_3__0__Impl rule__Pattern__Group_3__1 ;
    public final void rule__Pattern__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5952:1: ( rule__Pattern__Group_3__0__Impl rule__Pattern__Group_3__1 )
            // InternalMoniLog.g:5953:2: rule__Pattern__Group_3__0__Impl rule__Pattern__Group_3__1
            {
            pushFollow(FOLLOW_3);
            rule__Pattern__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__0"


    // $ANTLR start "rule__Pattern__Group_3__0__Impl"
    // InternalMoniLog.g:5960:1: rule__Pattern__Group_3__0__Impl : ( () ) ;
    public final void rule__Pattern__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5964:1: ( ( () ) )
            // InternalMoniLog.g:5965:1: ( () )
            {
            // InternalMoniLog.g:5965:1: ( () )
            // InternalMoniLog.g:5966:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPrecedenceAction_3_0()); 
            }
            // InternalMoniLog.g:5967:2: ()
            // InternalMoniLog.g:5967:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPrecedenceAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__0__Impl"


    // $ANTLR start "rule__Pattern__Group_3__1"
    // InternalMoniLog.g:5975:1: rule__Pattern__Group_3__1 : rule__Pattern__Group_3__1__Impl rule__Pattern__Group_3__2 ;
    public final void rule__Pattern__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5979:1: ( rule__Pattern__Group_3__1__Impl rule__Pattern__Group_3__2 )
            // InternalMoniLog.g:5980:2: rule__Pattern__Group_3__1__Impl rule__Pattern__Group_3__2
            {
            pushFollow(FOLLOW_38);
            rule__Pattern__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__1"


    // $ANTLR start "rule__Pattern__Group_3__1__Impl"
    // InternalMoniLog.g:5987:1: rule__Pattern__Group_3__1__Impl : ( ( rule__Pattern__PredecessorAssignment_3_1 ) ) ;
    public final void rule__Pattern__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:5991:1: ( ( ( rule__Pattern__PredecessorAssignment_3_1 ) ) )
            // InternalMoniLog.g:5992:1: ( ( rule__Pattern__PredecessorAssignment_3_1 ) )
            {
            // InternalMoniLog.g:5992:1: ( ( rule__Pattern__PredecessorAssignment_3_1 ) )
            // InternalMoniLog.g:5993:2: ( rule__Pattern__PredecessorAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPredecessorAssignment_3_1()); 
            }
            // InternalMoniLog.g:5994:2: ( rule__Pattern__PredecessorAssignment_3_1 )
            // InternalMoniLog.g:5994:3: rule__Pattern__PredecessorAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__PredecessorAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPredecessorAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__1__Impl"


    // $ANTLR start "rule__Pattern__Group_3__2"
    // InternalMoniLog.g:6002:1: rule__Pattern__Group_3__2 : rule__Pattern__Group_3__2__Impl rule__Pattern__Group_3__3 ;
    public final void rule__Pattern__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6006:1: ( rule__Pattern__Group_3__2__Impl rule__Pattern__Group_3__3 )
            // InternalMoniLog.g:6007:2: rule__Pattern__Group_3__2__Impl rule__Pattern__Group_3__3
            {
            pushFollow(FOLLOW_3);
            rule__Pattern__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__2"


    // $ANTLR start "rule__Pattern__Group_3__2__Impl"
    // InternalMoniLog.g:6014:1: rule__Pattern__Group_3__2__Impl : ( 'precedes' ) ;
    public final void rule__Pattern__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6018:1: ( ( 'precedes' ) )
            // InternalMoniLog.g:6019:1: ( 'precedes' )
            {
            // InternalMoniLog.g:6019:1: ( 'precedes' )
            // InternalMoniLog.g:6020:2: 'precedes'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPrecedesKeyword_3_2()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPrecedesKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__2__Impl"


    // $ANTLR start "rule__Pattern__Group_3__3"
    // InternalMoniLog.g:6029:1: rule__Pattern__Group_3__3 : rule__Pattern__Group_3__3__Impl ;
    public final void rule__Pattern__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6033:1: ( rule__Pattern__Group_3__3__Impl )
            // InternalMoniLog.g:6034:2: rule__Pattern__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__3"


    // $ANTLR start "rule__Pattern__Group_3__3__Impl"
    // InternalMoniLog.g:6040:1: rule__Pattern__Group_3__3__Impl : ( ( rule__Pattern__SuccessorAssignment_3_3 ) ) ;
    public final void rule__Pattern__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6044:1: ( ( ( rule__Pattern__SuccessorAssignment_3_3 ) ) )
            // InternalMoniLog.g:6045:1: ( ( rule__Pattern__SuccessorAssignment_3_3 ) )
            {
            // InternalMoniLog.g:6045:1: ( ( rule__Pattern__SuccessorAssignment_3_3 ) )
            // InternalMoniLog.g:6046:2: ( rule__Pattern__SuccessorAssignment_3_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getSuccessorAssignment_3_3()); 
            }
            // InternalMoniLog.g:6047:2: ( rule__Pattern__SuccessorAssignment_3_3 )
            // InternalMoniLog.g:6047:3: rule__Pattern__SuccessorAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__SuccessorAssignment_3_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getSuccessorAssignment_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_3__3__Impl"


    // $ANTLR start "rule__Pattern__Group_4__0"
    // InternalMoniLog.g:6056:1: rule__Pattern__Group_4__0 : rule__Pattern__Group_4__0__Impl rule__Pattern__Group_4__1 ;
    public final void rule__Pattern__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6060:1: ( rule__Pattern__Group_4__0__Impl rule__Pattern__Group_4__1 )
            // InternalMoniLog.g:6061:2: rule__Pattern__Group_4__0__Impl rule__Pattern__Group_4__1
            {
            pushFollow(FOLLOW_30);
            rule__Pattern__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__0"


    // $ANTLR start "rule__Pattern__Group_4__0__Impl"
    // InternalMoniLog.g:6068:1: rule__Pattern__Group_4__0__Impl : ( () ) ;
    public final void rule__Pattern__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6072:1: ( ( () ) )
            // InternalMoniLog.g:6073:1: ( () )
            {
            // InternalMoniLog.g:6073:1: ( () )
            // InternalMoniLog.g:6074:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getResponseAction_4_0()); 
            }
            // InternalMoniLog.g:6075:2: ()
            // InternalMoniLog.g:6075:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getResponseAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__0__Impl"


    // $ANTLR start "rule__Pattern__Group_4__1"
    // InternalMoniLog.g:6083:1: rule__Pattern__Group_4__1 : rule__Pattern__Group_4__1__Impl rule__Pattern__Group_4__2 ;
    public final void rule__Pattern__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6087:1: ( rule__Pattern__Group_4__1__Impl rule__Pattern__Group_4__2 )
            // InternalMoniLog.g:6088:2: rule__Pattern__Group_4__1__Impl rule__Pattern__Group_4__2
            {
            pushFollow(FOLLOW_39);
            rule__Pattern__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__1"


    // $ANTLR start "rule__Pattern__Group_4__1__Impl"
    // InternalMoniLog.g:6095:1: rule__Pattern__Group_4__1__Impl : ( ( rule__Pattern__EventAssignment_4_1 ) ) ;
    public final void rule__Pattern__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6099:1: ( ( ( rule__Pattern__EventAssignment_4_1 ) ) )
            // InternalMoniLog.g:6100:1: ( ( rule__Pattern__EventAssignment_4_1 ) )
            {
            // InternalMoniLog.g:6100:1: ( ( rule__Pattern__EventAssignment_4_1 ) )
            // InternalMoniLog.g:6101:2: ( rule__Pattern__EventAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventAssignment_4_1()); 
            }
            // InternalMoniLog.g:6102:2: ( rule__Pattern__EventAssignment_4_1 )
            // InternalMoniLog.g:6102:3: rule__Pattern__EventAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__EventAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__1__Impl"


    // $ANTLR start "rule__Pattern__Group_4__2"
    // InternalMoniLog.g:6110:1: rule__Pattern__Group_4__2 : rule__Pattern__Group_4__2__Impl rule__Pattern__Group_4__3 ;
    public final void rule__Pattern__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6114:1: ( rule__Pattern__Group_4__2__Impl rule__Pattern__Group_4__3 )
            // InternalMoniLog.g:6115:2: rule__Pattern__Group_4__2__Impl rule__Pattern__Group_4__3
            {
            pushFollow(FOLLOW_3);
            rule__Pattern__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__2"


    // $ANTLR start "rule__Pattern__Group_4__2__Impl"
    // InternalMoniLog.g:6122:1: rule__Pattern__Group_4__2__Impl : ( 'respondsTo' ) ;
    public final void rule__Pattern__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6126:1: ( ( 'respondsTo' ) )
            // InternalMoniLog.g:6127:1: ( 'respondsTo' )
            {
            // InternalMoniLog.g:6127:1: ( 'respondsTo' )
            // InternalMoniLog.g:6128:2: 'respondsTo'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getRespondsToKeyword_4_2()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getRespondsToKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__2__Impl"


    // $ANTLR start "rule__Pattern__Group_4__3"
    // InternalMoniLog.g:6137:1: rule__Pattern__Group_4__3 : rule__Pattern__Group_4__3__Impl ;
    public final void rule__Pattern__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6141:1: ( rule__Pattern__Group_4__3__Impl )
            // InternalMoniLog.g:6142:2: rule__Pattern__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__3"


    // $ANTLR start "rule__Pattern__Group_4__3__Impl"
    // InternalMoniLog.g:6148:1: rule__Pattern__Group_4__3__Impl : ( ( rule__Pattern__TriggerAssignment_4_3 ) ) ;
    public final void rule__Pattern__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6152:1: ( ( ( rule__Pattern__TriggerAssignment_4_3 ) ) )
            // InternalMoniLog.g:6153:1: ( ( rule__Pattern__TriggerAssignment_4_3 ) )
            {
            // InternalMoniLog.g:6153:1: ( ( rule__Pattern__TriggerAssignment_4_3 ) )
            // InternalMoniLog.g:6154:2: ( rule__Pattern__TriggerAssignment_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getTriggerAssignment_4_3()); 
            }
            // InternalMoniLog.g:6155:2: ( rule__Pattern__TriggerAssignment_4_3 )
            // InternalMoniLog.g:6155:3: rule__Pattern__TriggerAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__Pattern__TriggerAssignment_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getTriggerAssignment_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__Group_4__3__Impl"


    // $ANTLR start "rule__LowerBound__Group__0"
    // InternalMoniLog.g:6164:1: rule__LowerBound__Group__0 : rule__LowerBound__Group__0__Impl rule__LowerBound__Group__1 ;
    public final void rule__LowerBound__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6168:1: ( rule__LowerBound__Group__0__Impl rule__LowerBound__Group__1 )
            // InternalMoniLog.g:6169:2: rule__LowerBound__Group__0__Impl rule__LowerBound__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__LowerBound__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LowerBound__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LowerBound__Group__0"


    // $ANTLR start "rule__LowerBound__Group__0__Impl"
    // InternalMoniLog.g:6176:1: rule__LowerBound__Group__0__Impl : ( 'atleast' ) ;
    public final void rule__LowerBound__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6180:1: ( ( 'atleast' ) )
            // InternalMoniLog.g:6181:1: ( 'atleast' )
            {
            // InternalMoniLog.g:6181:1: ( 'atleast' )
            // InternalMoniLog.g:6182:2: 'atleast'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLowerBoundAccess().getAtleastKeyword_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLowerBoundAccess().getAtleastKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LowerBound__Group__0__Impl"


    // $ANTLR start "rule__LowerBound__Group__1"
    // InternalMoniLog.g:6191:1: rule__LowerBound__Group__1 : rule__LowerBound__Group__1__Impl ;
    public final void rule__LowerBound__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6195:1: ( rule__LowerBound__Group__1__Impl )
            // InternalMoniLog.g:6196:2: rule__LowerBound__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LowerBound__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LowerBound__Group__1"


    // $ANTLR start "rule__LowerBound__Group__1__Impl"
    // InternalMoniLog.g:6202:1: rule__LowerBound__Group__1__Impl : ( ( rule__LowerBound__NAssignment_1 ) ) ;
    public final void rule__LowerBound__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6206:1: ( ( ( rule__LowerBound__NAssignment_1 ) ) )
            // InternalMoniLog.g:6207:1: ( ( rule__LowerBound__NAssignment_1 ) )
            {
            // InternalMoniLog.g:6207:1: ( ( rule__LowerBound__NAssignment_1 ) )
            // InternalMoniLog.g:6208:2: ( rule__LowerBound__NAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLowerBoundAccess().getNAssignment_1()); 
            }
            // InternalMoniLog.g:6209:2: ( rule__LowerBound__NAssignment_1 )
            // InternalMoniLog.g:6209:3: rule__LowerBound__NAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LowerBound__NAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLowerBoundAccess().getNAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LowerBound__Group__1__Impl"


    // $ANTLR start "rule__UpperBound__Group__0"
    // InternalMoniLog.g:6218:1: rule__UpperBound__Group__0 : rule__UpperBound__Group__0__Impl rule__UpperBound__Group__1 ;
    public final void rule__UpperBound__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6222:1: ( rule__UpperBound__Group__0__Impl rule__UpperBound__Group__1 )
            // InternalMoniLog.g:6223:2: rule__UpperBound__Group__0__Impl rule__UpperBound__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__UpperBound__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UpperBound__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UpperBound__Group__0"


    // $ANTLR start "rule__UpperBound__Group__0__Impl"
    // InternalMoniLog.g:6230:1: rule__UpperBound__Group__0__Impl : ( 'atmost' ) ;
    public final void rule__UpperBound__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6234:1: ( ( 'atmost' ) )
            // InternalMoniLog.g:6235:1: ( 'atmost' )
            {
            // InternalMoniLog.g:6235:1: ( 'atmost' )
            // InternalMoniLog.g:6236:2: 'atmost'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUpperBoundAccess().getAtmostKeyword_0()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUpperBoundAccess().getAtmostKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UpperBound__Group__0__Impl"


    // $ANTLR start "rule__UpperBound__Group__1"
    // InternalMoniLog.g:6245:1: rule__UpperBound__Group__1 : rule__UpperBound__Group__1__Impl ;
    public final void rule__UpperBound__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6249:1: ( rule__UpperBound__Group__1__Impl )
            // InternalMoniLog.g:6250:2: rule__UpperBound__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UpperBound__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UpperBound__Group__1"


    // $ANTLR start "rule__UpperBound__Group__1__Impl"
    // InternalMoniLog.g:6256:1: rule__UpperBound__Group__1__Impl : ( ( rule__UpperBound__NAssignment_1 ) ) ;
    public final void rule__UpperBound__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6260:1: ( ( ( rule__UpperBound__NAssignment_1 ) ) )
            // InternalMoniLog.g:6261:1: ( ( rule__UpperBound__NAssignment_1 ) )
            {
            // InternalMoniLog.g:6261:1: ( ( rule__UpperBound__NAssignment_1 ) )
            // InternalMoniLog.g:6262:2: ( rule__UpperBound__NAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUpperBoundAccess().getNAssignment_1()); 
            }
            // InternalMoniLog.g:6263:2: ( rule__UpperBound__NAssignment_1 )
            // InternalMoniLog.g:6263:3: rule__UpperBound__NAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UpperBound__NAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUpperBoundAccess().getNAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UpperBound__Group__1__Impl"


    // $ANTLR start "rule__Scope__Group_0__0"
    // InternalMoniLog.g:6272:1: rule__Scope__Group_0__0 : rule__Scope__Group_0__0__Impl rule__Scope__Group_0__1 ;
    public final void rule__Scope__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6276:1: ( rule__Scope__Group_0__0__Impl rule__Scope__Group_0__1 )
            // InternalMoniLog.g:6277:2: rule__Scope__Group_0__0__Impl rule__Scope__Group_0__1
            {
            pushFollow(FOLLOW_41);
            rule__Scope__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_0__0"


    // $ANTLR start "rule__Scope__Group_0__0__Impl"
    // InternalMoniLog.g:6284:1: rule__Scope__Group_0__0__Impl : ( () ) ;
    public final void rule__Scope__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6288:1: ( ( () ) )
            // InternalMoniLog.g:6289:1: ( () )
            {
            // InternalMoniLog.g:6289:1: ( () )
            // InternalMoniLog.g:6290:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getGloballyAction_0_0()); 
            }
            // InternalMoniLog.g:6291:2: ()
            // InternalMoniLog.g:6291:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getGloballyAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_0__0__Impl"


    // $ANTLR start "rule__Scope__Group_0__1"
    // InternalMoniLog.g:6299:1: rule__Scope__Group_0__1 : rule__Scope__Group_0__1__Impl ;
    public final void rule__Scope__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6303:1: ( rule__Scope__Group_0__1__Impl )
            // InternalMoniLog.g:6304:2: rule__Scope__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_0__1"


    // $ANTLR start "rule__Scope__Group_0__1__Impl"
    // InternalMoniLog.g:6310:1: rule__Scope__Group_0__1__Impl : ( ( 'globally' )? ) ;
    public final void rule__Scope__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6314:1: ( ( ( 'globally' )? ) )
            // InternalMoniLog.g:6315:1: ( ( 'globally' )? )
            {
            // InternalMoniLog.g:6315:1: ( ( 'globally' )? )
            // InternalMoniLog.g:6316:2: ( 'globally' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); 
            }
            // InternalMoniLog.g:6317:2: ( 'globally' )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==62) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalMoniLog.g:6317:3: 'globally'
                    {
                    match(input,62,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_0__1__Impl"


    // $ANTLR start "rule__Scope__Group_1__0"
    // InternalMoniLog.g:6326:1: rule__Scope__Group_1__0 : rule__Scope__Group_1__0__Impl rule__Scope__Group_1__1 ;
    public final void rule__Scope__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6330:1: ( rule__Scope__Group_1__0__Impl rule__Scope__Group_1__1 )
            // InternalMoniLog.g:6331:2: rule__Scope__Group_1__0__Impl rule__Scope__Group_1__1
            {
            pushFollow(FOLLOW_42);
            rule__Scope__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__0"


    // $ANTLR start "rule__Scope__Group_1__0__Impl"
    // InternalMoniLog.g:6338:1: rule__Scope__Group_1__0__Impl : ( () ) ;
    public final void rule__Scope__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6342:1: ( ( () ) )
            // InternalMoniLog.g:6343:1: ( () )
            {
            // InternalMoniLog.g:6343:1: ( () )
            // InternalMoniLog.g:6344:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAfterAction_1_0()); 
            }
            // InternalMoniLog.g:6345:2: ()
            // InternalMoniLog.g:6345:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAfterAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__0__Impl"


    // $ANTLR start "rule__Scope__Group_1__1"
    // InternalMoniLog.g:6353:1: rule__Scope__Group_1__1 : rule__Scope__Group_1__1__Impl rule__Scope__Group_1__2 ;
    public final void rule__Scope__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6357:1: ( rule__Scope__Group_1__1__Impl rule__Scope__Group_1__2 )
            // InternalMoniLog.g:6358:2: rule__Scope__Group_1__1__Impl rule__Scope__Group_1__2
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__1"


    // $ANTLR start "rule__Scope__Group_1__1__Impl"
    // InternalMoniLog.g:6365:1: rule__Scope__Group_1__1__Impl : ( 'after' ) ;
    public final void rule__Scope__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6369:1: ( ( 'after' ) )
            // InternalMoniLog.g:6370:1: ( 'after' )
            {
            // InternalMoniLog.g:6370:1: ( 'after' )
            // InternalMoniLog.g:6371:2: 'after'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAfterKeyword_1_1()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAfterKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__1__Impl"


    // $ANTLR start "rule__Scope__Group_1__2"
    // InternalMoniLog.g:6380:1: rule__Scope__Group_1__2 : rule__Scope__Group_1__2__Impl ;
    public final void rule__Scope__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6384:1: ( rule__Scope__Group_1__2__Impl )
            // InternalMoniLog.g:6385:2: rule__Scope__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__2"


    // $ANTLR start "rule__Scope__Group_1__2__Impl"
    // InternalMoniLog.g:6391:1: rule__Scope__Group_1__2__Impl : ( ( rule__Scope__LowerBoundAssignment_1_2 ) ) ;
    public final void rule__Scope__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6395:1: ( ( ( rule__Scope__LowerBoundAssignment_1_2 ) ) )
            // InternalMoniLog.g:6396:1: ( ( rule__Scope__LowerBoundAssignment_1_2 ) )
            {
            // InternalMoniLog.g:6396:1: ( ( rule__Scope__LowerBoundAssignment_1_2 ) )
            // InternalMoniLog.g:6397:2: ( rule__Scope__LowerBoundAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundAssignment_1_2()); 
            }
            // InternalMoniLog.g:6398:2: ( rule__Scope__LowerBoundAssignment_1_2 )
            // InternalMoniLog.g:6398:3: rule__Scope__LowerBoundAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Scope__LowerBoundAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_1__2__Impl"


    // $ANTLR start "rule__Scope__Group_2__0"
    // InternalMoniLog.g:6407:1: rule__Scope__Group_2__0 : rule__Scope__Group_2__0__Impl rule__Scope__Group_2__1 ;
    public final void rule__Scope__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6411:1: ( rule__Scope__Group_2__0__Impl rule__Scope__Group_2__1 )
            // InternalMoniLog.g:6412:2: rule__Scope__Group_2__0__Impl rule__Scope__Group_2__1
            {
            pushFollow(FOLLOW_33);
            rule__Scope__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__0"


    // $ANTLR start "rule__Scope__Group_2__0__Impl"
    // InternalMoniLog.g:6419:1: rule__Scope__Group_2__0__Impl : ( () ) ;
    public final void rule__Scope__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6423:1: ( ( () ) )
            // InternalMoniLog.g:6424:1: ( () )
            {
            // InternalMoniLog.g:6424:1: ( () )
            // InternalMoniLog.g:6425:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getBeforeAction_2_0()); 
            }
            // InternalMoniLog.g:6426:2: ()
            // InternalMoniLog.g:6426:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getBeforeAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__0__Impl"


    // $ANTLR start "rule__Scope__Group_2__1"
    // InternalMoniLog.g:6434:1: rule__Scope__Group_2__1 : rule__Scope__Group_2__1__Impl rule__Scope__Group_2__2 ;
    public final void rule__Scope__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6438:1: ( rule__Scope__Group_2__1__Impl rule__Scope__Group_2__2 )
            // InternalMoniLog.g:6439:2: rule__Scope__Group_2__1__Impl rule__Scope__Group_2__2
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__1"


    // $ANTLR start "rule__Scope__Group_2__1__Impl"
    // InternalMoniLog.g:6446:1: rule__Scope__Group_2__1__Impl : ( 'before' ) ;
    public final void rule__Scope__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6450:1: ( ( 'before' ) )
            // InternalMoniLog.g:6451:1: ( 'before' )
            {
            // InternalMoniLog.g:6451:1: ( 'before' )
            // InternalMoniLog.g:6452:2: 'before'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getBeforeKeyword_2_1()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getBeforeKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__1__Impl"


    // $ANTLR start "rule__Scope__Group_2__2"
    // InternalMoniLog.g:6461:1: rule__Scope__Group_2__2 : rule__Scope__Group_2__2__Impl ;
    public final void rule__Scope__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6465:1: ( rule__Scope__Group_2__2__Impl )
            // InternalMoniLog.g:6466:2: rule__Scope__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__2"


    // $ANTLR start "rule__Scope__Group_2__2__Impl"
    // InternalMoniLog.g:6472:1: rule__Scope__Group_2__2__Impl : ( ( rule__Scope__UpperBoundAssignment_2_2 ) ) ;
    public final void rule__Scope__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6476:1: ( ( ( rule__Scope__UpperBoundAssignment_2_2 ) ) )
            // InternalMoniLog.g:6477:1: ( ( rule__Scope__UpperBoundAssignment_2_2 ) )
            {
            // InternalMoniLog.g:6477:1: ( ( rule__Scope__UpperBoundAssignment_2_2 ) )
            // InternalMoniLog.g:6478:2: ( rule__Scope__UpperBoundAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundAssignment_2_2()); 
            }
            // InternalMoniLog.g:6479:2: ( rule__Scope__UpperBoundAssignment_2_2 )
            // InternalMoniLog.g:6479:3: rule__Scope__UpperBoundAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Scope__UpperBoundAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_2__2__Impl"


    // $ANTLR start "rule__Scope__Group_3__0"
    // InternalMoniLog.g:6488:1: rule__Scope__Group_3__0 : rule__Scope__Group_3__0__Impl rule__Scope__Group_3__1 ;
    public final void rule__Scope__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6492:1: ( rule__Scope__Group_3__0__Impl rule__Scope__Group_3__1 )
            // InternalMoniLog.g:6493:2: rule__Scope__Group_3__0__Impl rule__Scope__Group_3__1
            {
            pushFollow(FOLLOW_43);
            rule__Scope__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__0"


    // $ANTLR start "rule__Scope__Group_3__0__Impl"
    // InternalMoniLog.g:6500:1: rule__Scope__Group_3__0__Impl : ( () ) ;
    public final void rule__Scope__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6504:1: ( ( () ) )
            // InternalMoniLog.g:6505:1: ( () )
            {
            // InternalMoniLog.g:6505:1: ( () )
            // InternalMoniLog.g:6506:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getBetweenAction_3_0()); 
            }
            // InternalMoniLog.g:6507:2: ()
            // InternalMoniLog.g:6507:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getBetweenAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__0__Impl"


    // $ANTLR start "rule__Scope__Group_3__1"
    // InternalMoniLog.g:6515:1: rule__Scope__Group_3__1 : rule__Scope__Group_3__1__Impl rule__Scope__Group_3__2 ;
    public final void rule__Scope__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6519:1: ( rule__Scope__Group_3__1__Impl rule__Scope__Group_3__2 )
            // InternalMoniLog.g:6520:2: rule__Scope__Group_3__1__Impl rule__Scope__Group_3__2
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__1"


    // $ANTLR start "rule__Scope__Group_3__1__Impl"
    // InternalMoniLog.g:6527:1: rule__Scope__Group_3__1__Impl : ( 'between' ) ;
    public final void rule__Scope__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6531:1: ( ( 'between' ) )
            // InternalMoniLog.g:6532:1: ( 'between' )
            {
            // InternalMoniLog.g:6532:1: ( 'between' )
            // InternalMoniLog.g:6533:2: 'between'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__1__Impl"


    // $ANTLR start "rule__Scope__Group_3__2"
    // InternalMoniLog.g:6542:1: rule__Scope__Group_3__2 : rule__Scope__Group_3__2__Impl rule__Scope__Group_3__3 ;
    public final void rule__Scope__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6546:1: ( rule__Scope__Group_3__2__Impl rule__Scope__Group_3__3 )
            // InternalMoniLog.g:6547:2: rule__Scope__Group_3__2__Impl rule__Scope__Group_3__3
            {
            pushFollow(FOLLOW_44);
            rule__Scope__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__2"


    // $ANTLR start "rule__Scope__Group_3__2__Impl"
    // InternalMoniLog.g:6554:1: rule__Scope__Group_3__2__Impl : ( ( rule__Scope__LowerBoundAssignment_3_2 ) ) ;
    public final void rule__Scope__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6558:1: ( ( ( rule__Scope__LowerBoundAssignment_3_2 ) ) )
            // InternalMoniLog.g:6559:1: ( ( rule__Scope__LowerBoundAssignment_3_2 ) )
            {
            // InternalMoniLog.g:6559:1: ( ( rule__Scope__LowerBoundAssignment_3_2 ) )
            // InternalMoniLog.g:6560:2: ( rule__Scope__LowerBoundAssignment_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundAssignment_3_2()); 
            }
            // InternalMoniLog.g:6561:2: ( rule__Scope__LowerBoundAssignment_3_2 )
            // InternalMoniLog.g:6561:3: rule__Scope__LowerBoundAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Scope__LowerBoundAssignment_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundAssignment_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__2__Impl"


    // $ANTLR start "rule__Scope__Group_3__3"
    // InternalMoniLog.g:6569:1: rule__Scope__Group_3__3 : rule__Scope__Group_3__3__Impl rule__Scope__Group_3__4 ;
    public final void rule__Scope__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6573:1: ( rule__Scope__Group_3__3__Impl rule__Scope__Group_3__4 )
            // InternalMoniLog.g:6574:2: rule__Scope__Group_3__3__Impl rule__Scope__Group_3__4
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_3__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__3"


    // $ANTLR start "rule__Scope__Group_3__3__Impl"
    // InternalMoniLog.g:6581:1: rule__Scope__Group_3__3__Impl : ( 'and' ) ;
    public final void rule__Scope__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6585:1: ( ( 'and' ) )
            // InternalMoniLog.g:6586:1: ( 'and' )
            {
            // InternalMoniLog.g:6586:1: ( 'and' )
            // InternalMoniLog.g:6587:2: 'and'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAndKeyword_3_3()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAndKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__3__Impl"


    // $ANTLR start "rule__Scope__Group_3__4"
    // InternalMoniLog.g:6596:1: rule__Scope__Group_3__4 : rule__Scope__Group_3__4__Impl ;
    public final void rule__Scope__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6600:1: ( rule__Scope__Group_3__4__Impl )
            // InternalMoniLog.g:6601:2: rule__Scope__Group_3__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Group_3__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__4"


    // $ANTLR start "rule__Scope__Group_3__4__Impl"
    // InternalMoniLog.g:6607:1: rule__Scope__Group_3__4__Impl : ( ( rule__Scope__UpperBoundAssignment_3_4 ) ) ;
    public final void rule__Scope__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6611:1: ( ( ( rule__Scope__UpperBoundAssignment_3_4 ) ) )
            // InternalMoniLog.g:6612:1: ( ( rule__Scope__UpperBoundAssignment_3_4 ) )
            {
            // InternalMoniLog.g:6612:1: ( ( rule__Scope__UpperBoundAssignment_3_4 ) )
            // InternalMoniLog.g:6613:2: ( rule__Scope__UpperBoundAssignment_3_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundAssignment_3_4()); 
            }
            // InternalMoniLog.g:6614:2: ( rule__Scope__UpperBoundAssignment_3_4 )
            // InternalMoniLog.g:6614:3: rule__Scope__UpperBoundAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__Scope__UpperBoundAssignment_3_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundAssignment_3_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_3__4__Impl"


    // $ANTLR start "rule__Scope__Group_4__0"
    // InternalMoniLog.g:6623:1: rule__Scope__Group_4__0 : rule__Scope__Group_4__0__Impl rule__Scope__Group_4__1 ;
    public final void rule__Scope__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6627:1: ( rule__Scope__Group_4__0__Impl rule__Scope__Group_4__1 )
            // InternalMoniLog.g:6628:2: rule__Scope__Group_4__0__Impl rule__Scope__Group_4__1
            {
            pushFollow(FOLLOW_34);
            rule__Scope__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__0"


    // $ANTLR start "rule__Scope__Group_4__0__Impl"
    // InternalMoniLog.g:6635:1: rule__Scope__Group_4__0__Impl : ( () ) ;
    public final void rule__Scope__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6639:1: ( ( () ) )
            // InternalMoniLog.g:6640:1: ( () )
            {
            // InternalMoniLog.g:6640:1: ( () )
            // InternalMoniLog.g:6641:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAfterUntilAction_4_0()); 
            }
            // InternalMoniLog.g:6642:2: ()
            // InternalMoniLog.g:6642:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAfterUntilAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__0__Impl"


    // $ANTLR start "rule__Scope__Group_4__1"
    // InternalMoniLog.g:6650:1: rule__Scope__Group_4__1 : rule__Scope__Group_4__1__Impl rule__Scope__Group_4__2 ;
    public final void rule__Scope__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6654:1: ( rule__Scope__Group_4__1__Impl rule__Scope__Group_4__2 )
            // InternalMoniLog.g:6655:2: rule__Scope__Group_4__1__Impl rule__Scope__Group_4__2
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__1"


    // $ANTLR start "rule__Scope__Group_4__1__Impl"
    // InternalMoniLog.g:6662:1: rule__Scope__Group_4__1__Impl : ( 'after' ) ;
    public final void rule__Scope__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6666:1: ( ( 'after' ) )
            // InternalMoniLog.g:6667:1: ( 'after' )
            {
            // InternalMoniLog.g:6667:1: ( 'after' )
            // InternalMoniLog.g:6668:2: 'after'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__1__Impl"


    // $ANTLR start "rule__Scope__Group_4__2"
    // InternalMoniLog.g:6677:1: rule__Scope__Group_4__2 : rule__Scope__Group_4__2__Impl rule__Scope__Group_4__3 ;
    public final void rule__Scope__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6681:1: ( rule__Scope__Group_4__2__Impl rule__Scope__Group_4__3 )
            // InternalMoniLog.g:6682:2: rule__Scope__Group_4__2__Impl rule__Scope__Group_4__3
            {
            pushFollow(FOLLOW_45);
            rule__Scope__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__2"


    // $ANTLR start "rule__Scope__Group_4__2__Impl"
    // InternalMoniLog.g:6689:1: rule__Scope__Group_4__2__Impl : ( ( rule__Scope__LowerBoundAssignment_4_2 ) ) ;
    public final void rule__Scope__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6693:1: ( ( ( rule__Scope__LowerBoundAssignment_4_2 ) ) )
            // InternalMoniLog.g:6694:1: ( ( rule__Scope__LowerBoundAssignment_4_2 ) )
            {
            // InternalMoniLog.g:6694:1: ( ( rule__Scope__LowerBoundAssignment_4_2 ) )
            // InternalMoniLog.g:6695:2: ( rule__Scope__LowerBoundAssignment_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundAssignment_4_2()); 
            }
            // InternalMoniLog.g:6696:2: ( rule__Scope__LowerBoundAssignment_4_2 )
            // InternalMoniLog.g:6696:3: rule__Scope__LowerBoundAssignment_4_2
            {
            pushFollow(FOLLOW_2);
            rule__Scope__LowerBoundAssignment_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__2__Impl"


    // $ANTLR start "rule__Scope__Group_4__3"
    // InternalMoniLog.g:6704:1: rule__Scope__Group_4__3 : rule__Scope__Group_4__3__Impl rule__Scope__Group_4__4 ;
    public final void rule__Scope__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6708:1: ( rule__Scope__Group_4__3__Impl rule__Scope__Group_4__4 )
            // InternalMoniLog.g:6709:2: rule__Scope__Group_4__3__Impl rule__Scope__Group_4__4
            {
            pushFollow(FOLLOW_3);
            rule__Scope__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Scope__Group_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__3"


    // $ANTLR start "rule__Scope__Group_4__3__Impl"
    // InternalMoniLog.g:6716:1: rule__Scope__Group_4__3__Impl : ( 'until' ) ;
    public final void rule__Scope__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6720:1: ( ( 'until' ) )
            // InternalMoniLog.g:6721:1: ( 'until' )
            {
            // InternalMoniLog.g:6721:1: ( 'until' )
            // InternalMoniLog.g:6722:2: 'until'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUntilKeyword_4_3()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUntilKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__3__Impl"


    // $ANTLR start "rule__Scope__Group_4__4"
    // InternalMoniLog.g:6731:1: rule__Scope__Group_4__4 : rule__Scope__Group_4__4__Impl ;
    public final void rule__Scope__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6735:1: ( rule__Scope__Group_4__4__Impl )
            // InternalMoniLog.g:6736:2: rule__Scope__Group_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Scope__Group_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__4"


    // $ANTLR start "rule__Scope__Group_4__4__Impl"
    // InternalMoniLog.g:6742:1: rule__Scope__Group_4__4__Impl : ( ( rule__Scope__UpperBoundAssignment_4_4 ) ) ;
    public final void rule__Scope__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6746:1: ( ( ( rule__Scope__UpperBoundAssignment_4_4 ) ) )
            // InternalMoniLog.g:6747:1: ( ( rule__Scope__UpperBoundAssignment_4_4 ) )
            {
            // InternalMoniLog.g:6747:1: ( ( rule__Scope__UpperBoundAssignment_4_4 ) )
            // InternalMoniLog.g:6748:2: ( rule__Scope__UpperBoundAssignment_4_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundAssignment_4_4()); 
            }
            // InternalMoniLog.g:6749:2: ( rule__Scope__UpperBoundAssignment_4_4 )
            // InternalMoniLog.g:6749:3: rule__Scope__UpperBoundAssignment_4_4
            {
            pushFollow(FOLLOW_2);
            rule__Scope__UpperBoundAssignment_4_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundAssignment_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__Group_4__4__Impl"


    // $ANTLR start "rule__AppenderCall__Group__0"
    // InternalMoniLog.g:6758:1: rule__AppenderCall__Group__0 : rule__AppenderCall__Group__0__Impl rule__AppenderCall__Group__1 ;
    public final void rule__AppenderCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6762:1: ( rule__AppenderCall__Group__0__Impl rule__AppenderCall__Group__1 )
            // InternalMoniLog.g:6763:2: rule__AppenderCall__Group__0__Impl rule__AppenderCall__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__AppenderCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__0"


    // $ANTLR start "rule__AppenderCall__Group__0__Impl"
    // InternalMoniLog.g:6770:1: rule__AppenderCall__Group__0__Impl : ( ( rule__AppenderCall__AppenderAssignment_0 ) ) ;
    public final void rule__AppenderCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6774:1: ( ( ( rule__AppenderCall__AppenderAssignment_0 ) ) )
            // InternalMoniLog.g:6775:1: ( ( rule__AppenderCall__AppenderAssignment_0 ) )
            {
            // InternalMoniLog.g:6775:1: ( ( rule__AppenderCall__AppenderAssignment_0 ) )
            // InternalMoniLog.g:6776:2: ( rule__AppenderCall__AppenderAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getAppenderAssignment_0()); 
            }
            // InternalMoniLog.g:6777:2: ( rule__AppenderCall__AppenderAssignment_0 )
            // InternalMoniLog.g:6777:3: rule__AppenderCall__AppenderAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__AppenderAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getAppenderAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__0__Impl"


    // $ANTLR start "rule__AppenderCall__Group__1"
    // InternalMoniLog.g:6785:1: rule__AppenderCall__Group__1 : rule__AppenderCall__Group__1__Impl rule__AppenderCall__Group__2 ;
    public final void rule__AppenderCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6789:1: ( rule__AppenderCall__Group__1__Impl rule__AppenderCall__Group__2 )
            // InternalMoniLog.g:6790:2: rule__AppenderCall__Group__1__Impl rule__AppenderCall__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__AppenderCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__1"


    // $ANTLR start "rule__AppenderCall__Group__1__Impl"
    // InternalMoniLog.g:6797:1: rule__AppenderCall__Group__1__Impl : ( '.' ) ;
    public final void rule__AppenderCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6801:1: ( ( '.' ) )
            // InternalMoniLog.g:6802:1: ( '.' )
            {
            // InternalMoniLog.g:6802:1: ( '.' )
            // InternalMoniLog.g:6803:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getFullStopKeyword_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__1__Impl"


    // $ANTLR start "rule__AppenderCall__Group__2"
    // InternalMoniLog.g:6812:1: rule__AppenderCall__Group__2 : rule__AppenderCall__Group__2__Impl rule__AppenderCall__Group__3 ;
    public final void rule__AppenderCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6816:1: ( rule__AppenderCall__Group__2__Impl rule__AppenderCall__Group__3 )
            // InternalMoniLog.g:6817:2: rule__AppenderCall__Group__2__Impl rule__AppenderCall__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__AppenderCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__2"


    // $ANTLR start "rule__AppenderCall__Group__2__Impl"
    // InternalMoniLog.g:6824:1: rule__AppenderCall__Group__2__Impl : ( 'call' ) ;
    public final void rule__AppenderCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6828:1: ( ( 'call' ) )
            // InternalMoniLog.g:6829:1: ( 'call' )
            {
            // InternalMoniLog.g:6829:1: ( 'call' )
            // InternalMoniLog.g:6830:2: 'call'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getCallKeyword_2()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getCallKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__2__Impl"


    // $ANTLR start "rule__AppenderCall__Group__3"
    // InternalMoniLog.g:6839:1: rule__AppenderCall__Group__3 : rule__AppenderCall__Group__3__Impl ;
    public final void rule__AppenderCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6843:1: ( rule__AppenderCall__Group__3__Impl )
            // InternalMoniLog.g:6844:2: rule__AppenderCall__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__3"


    // $ANTLR start "rule__AppenderCall__Group__3__Impl"
    // InternalMoniLog.g:6850:1: rule__AppenderCall__Group__3__Impl : ( ( rule__AppenderCall__Group_3__0 )? ) ;
    public final void rule__AppenderCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6854:1: ( ( ( rule__AppenderCall__Group_3__0 )? ) )
            // InternalMoniLog.g:6855:1: ( ( rule__AppenderCall__Group_3__0 )? )
            {
            // InternalMoniLog.g:6855:1: ( ( rule__AppenderCall__Group_3__0 )? )
            // InternalMoniLog.g:6856:2: ( rule__AppenderCall__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:6857:2: ( rule__AppenderCall__Group_3__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==39) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalMoniLog.g:6857:3: rule__AppenderCall__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AppenderCall__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group__3__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3__0"
    // InternalMoniLog.g:6866:1: rule__AppenderCall__Group_3__0 : rule__AppenderCall__Group_3__0__Impl rule__AppenderCall__Group_3__1 ;
    public final void rule__AppenderCall__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6870:1: ( rule__AppenderCall__Group_3__0__Impl rule__AppenderCall__Group_3__1 )
            // InternalMoniLog.g:6871:2: rule__AppenderCall__Group_3__0__Impl rule__AppenderCall__Group_3__1
            {
            pushFollow(FOLLOW_47);
            rule__AppenderCall__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__0"


    // $ANTLR start "rule__AppenderCall__Group_3__0__Impl"
    // InternalMoniLog.g:6878:1: rule__AppenderCall__Group_3__0__Impl : ( '(' ) ;
    public final void rule__AppenderCall__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6882:1: ( ( '(' ) )
            // InternalMoniLog.g:6883:1: ( '(' )
            {
            // InternalMoniLog.g:6883:1: ( '(' )
            // InternalMoniLog.g:6884:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__0__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3__1"
    // InternalMoniLog.g:6893:1: rule__AppenderCall__Group_3__1 : rule__AppenderCall__Group_3__1__Impl rule__AppenderCall__Group_3__2 ;
    public final void rule__AppenderCall__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6897:1: ( rule__AppenderCall__Group_3__1__Impl rule__AppenderCall__Group_3__2 )
            // InternalMoniLog.g:6898:2: rule__AppenderCall__Group_3__1__Impl rule__AppenderCall__Group_3__2
            {
            pushFollow(FOLLOW_48);
            rule__AppenderCall__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__1"


    // $ANTLR start "rule__AppenderCall__Group_3__1__Impl"
    // InternalMoniLog.g:6905:1: rule__AppenderCall__Group_3__1__Impl : ( ( rule__AppenderCall__ArgsAssignment_3_1 ) ) ;
    public final void rule__AppenderCall__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6909:1: ( ( ( rule__AppenderCall__ArgsAssignment_3_1 ) ) )
            // InternalMoniLog.g:6910:1: ( ( rule__AppenderCall__ArgsAssignment_3_1 ) )
            {
            // InternalMoniLog.g:6910:1: ( ( rule__AppenderCall__ArgsAssignment_3_1 ) )
            // InternalMoniLog.g:6911:2: ( rule__AppenderCall__ArgsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_1()); 
            }
            // InternalMoniLog.g:6912:2: ( rule__AppenderCall__ArgsAssignment_3_1 )
            // InternalMoniLog.g:6912:3: rule__AppenderCall__ArgsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__ArgsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__1__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3__2"
    // InternalMoniLog.g:6920:1: rule__AppenderCall__Group_3__2 : rule__AppenderCall__Group_3__2__Impl rule__AppenderCall__Group_3__3 ;
    public final void rule__AppenderCall__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6924:1: ( rule__AppenderCall__Group_3__2__Impl rule__AppenderCall__Group_3__3 )
            // InternalMoniLog.g:6925:2: rule__AppenderCall__Group_3__2__Impl rule__AppenderCall__Group_3__3
            {
            pushFollow(FOLLOW_48);
            rule__AppenderCall__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__2"


    // $ANTLR start "rule__AppenderCall__Group_3__2__Impl"
    // InternalMoniLog.g:6932:1: rule__AppenderCall__Group_3__2__Impl : ( ( rule__AppenderCall__Group_3_2__0 )* ) ;
    public final void rule__AppenderCall__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6936:1: ( ( ( rule__AppenderCall__Group_3_2__0 )* ) )
            // InternalMoniLog.g:6937:1: ( ( rule__AppenderCall__Group_3_2__0 )* )
            {
            // InternalMoniLog.g:6937:1: ( ( rule__AppenderCall__Group_3_2__0 )* )
            // InternalMoniLog.g:6938:2: ( rule__AppenderCall__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getGroup_3_2()); 
            }
            // InternalMoniLog.g:6939:2: ( rule__AppenderCall__Group_3_2__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==42) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalMoniLog.g:6939:3: rule__AppenderCall__Group_3_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__AppenderCall__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__2__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3__3"
    // InternalMoniLog.g:6947:1: rule__AppenderCall__Group_3__3 : rule__AppenderCall__Group_3__3__Impl ;
    public final void rule__AppenderCall__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6951:1: ( rule__AppenderCall__Group_3__3__Impl )
            // InternalMoniLog.g:6952:2: rule__AppenderCall__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__3"


    // $ANTLR start "rule__AppenderCall__Group_3__3__Impl"
    // InternalMoniLog.g:6958:1: rule__AppenderCall__Group_3__3__Impl : ( ')' ) ;
    public final void rule__AppenderCall__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6962:1: ( ( ')' ) )
            // InternalMoniLog.g:6963:1: ( ')' )
            {
            // InternalMoniLog.g:6963:1: ( ')' )
            // InternalMoniLog.g:6964:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getRightParenthesisKeyword_3_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getRightParenthesisKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3__3__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3_2__0"
    // InternalMoniLog.g:6974:1: rule__AppenderCall__Group_3_2__0 : rule__AppenderCall__Group_3_2__0__Impl rule__AppenderCall__Group_3_2__1 ;
    public final void rule__AppenderCall__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6978:1: ( rule__AppenderCall__Group_3_2__0__Impl rule__AppenderCall__Group_3_2__1 )
            // InternalMoniLog.g:6979:2: rule__AppenderCall__Group_3_2__0__Impl rule__AppenderCall__Group_3_2__1
            {
            pushFollow(FOLLOW_47);
            rule__AppenderCall__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3_2__0"


    // $ANTLR start "rule__AppenderCall__Group_3_2__0__Impl"
    // InternalMoniLog.g:6986:1: rule__AppenderCall__Group_3_2__0__Impl : ( ',' ) ;
    public final void rule__AppenderCall__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:6990:1: ( ( ',' ) )
            // InternalMoniLog.g:6991:1: ( ',' )
            {
            // InternalMoniLog.g:6991:1: ( ',' )
            // InternalMoniLog.g:6992:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getCommaKeyword_3_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getCommaKeyword_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3_2__0__Impl"


    // $ANTLR start "rule__AppenderCall__Group_3_2__1"
    // InternalMoniLog.g:7001:1: rule__AppenderCall__Group_3_2__1 : rule__AppenderCall__Group_3_2__1__Impl ;
    public final void rule__AppenderCall__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7005:1: ( rule__AppenderCall__Group_3_2__1__Impl )
            // InternalMoniLog.g:7006:2: rule__AppenderCall__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3_2__1"


    // $ANTLR start "rule__AppenderCall__Group_3_2__1__Impl"
    // InternalMoniLog.g:7012:1: rule__AppenderCall__Group_3_2__1__Impl : ( ( rule__AppenderCall__ArgsAssignment_3_2_1 ) ) ;
    public final void rule__AppenderCall__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7016:1: ( ( ( rule__AppenderCall__ArgsAssignment_3_2_1 ) ) )
            // InternalMoniLog.g:7017:1: ( ( rule__AppenderCall__ArgsAssignment_3_2_1 ) )
            {
            // InternalMoniLog.g:7017:1: ( ( rule__AppenderCall__ArgsAssignment_3_2_1 ) )
            // InternalMoniLog.g:7018:2: ( rule__AppenderCall__ArgsAssignment_3_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_2_1()); 
            }
            // InternalMoniLog.g:7019:2: ( rule__AppenderCall__ArgsAssignment_3_2_1 )
            // InternalMoniLog.g:7019:3: rule__AppenderCall__ArgsAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AppenderCall__ArgsAssignment_3_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getArgsAssignment_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__Group_3_2__1__Impl"


    // $ANTLR start "rule__LayoutCall__Group__0"
    // InternalMoniLog.g:7028:1: rule__LayoutCall__Group__0 : rule__LayoutCall__Group__0__Impl rule__LayoutCall__Group__1 ;
    public final void rule__LayoutCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7032:1: ( rule__LayoutCall__Group__0__Impl rule__LayoutCall__Group__1 )
            // InternalMoniLog.g:7033:2: rule__LayoutCall__Group__0__Impl rule__LayoutCall__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__LayoutCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__0"


    // $ANTLR start "rule__LayoutCall__Group__0__Impl"
    // InternalMoniLog.g:7040:1: rule__LayoutCall__Group__0__Impl : ( ( rule__LayoutCall__LayoutAssignment_0 ) ) ;
    public final void rule__LayoutCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7044:1: ( ( ( rule__LayoutCall__LayoutAssignment_0 ) ) )
            // InternalMoniLog.g:7045:1: ( ( rule__LayoutCall__LayoutAssignment_0 ) )
            {
            // InternalMoniLog.g:7045:1: ( ( rule__LayoutCall__LayoutAssignment_0 ) )
            // InternalMoniLog.g:7046:2: ( rule__LayoutCall__LayoutAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getLayoutAssignment_0()); 
            }
            // InternalMoniLog.g:7047:2: ( rule__LayoutCall__LayoutAssignment_0 )
            // InternalMoniLog.g:7047:3: rule__LayoutCall__LayoutAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__LayoutAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getLayoutAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__0__Impl"


    // $ANTLR start "rule__LayoutCall__Group__1"
    // InternalMoniLog.g:7055:1: rule__LayoutCall__Group__1 : rule__LayoutCall__Group__1__Impl rule__LayoutCall__Group__2 ;
    public final void rule__LayoutCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7059:1: ( rule__LayoutCall__Group__1__Impl rule__LayoutCall__Group__2 )
            // InternalMoniLog.g:7060:2: rule__LayoutCall__Group__1__Impl rule__LayoutCall__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__LayoutCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__1"


    // $ANTLR start "rule__LayoutCall__Group__1__Impl"
    // InternalMoniLog.g:7067:1: rule__LayoutCall__Group__1__Impl : ( '.' ) ;
    public final void rule__LayoutCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7071:1: ( ( '.' ) )
            // InternalMoniLog.g:7072:1: ( '.' )
            {
            // InternalMoniLog.g:7072:1: ( '.' )
            // InternalMoniLog.g:7073:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getFullStopKeyword_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__1__Impl"


    // $ANTLR start "rule__LayoutCall__Group__2"
    // InternalMoniLog.g:7082:1: rule__LayoutCall__Group__2 : rule__LayoutCall__Group__2__Impl rule__LayoutCall__Group__3 ;
    public final void rule__LayoutCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7086:1: ( rule__LayoutCall__Group__2__Impl rule__LayoutCall__Group__3 )
            // InternalMoniLog.g:7087:2: rule__LayoutCall__Group__2__Impl rule__LayoutCall__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__LayoutCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__2"


    // $ANTLR start "rule__LayoutCall__Group__2__Impl"
    // InternalMoniLog.g:7094:1: rule__LayoutCall__Group__2__Impl : ( 'call' ) ;
    public final void rule__LayoutCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7098:1: ( ( 'call' ) )
            // InternalMoniLog.g:7099:1: ( 'call' )
            {
            // InternalMoniLog.g:7099:1: ( 'call' )
            // InternalMoniLog.g:7100:2: 'call'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getCallKeyword_2()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getCallKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__2__Impl"


    // $ANTLR start "rule__LayoutCall__Group__3"
    // InternalMoniLog.g:7109:1: rule__LayoutCall__Group__3 : rule__LayoutCall__Group__3__Impl ;
    public final void rule__LayoutCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7113:1: ( rule__LayoutCall__Group__3__Impl )
            // InternalMoniLog.g:7114:2: rule__LayoutCall__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__3"


    // $ANTLR start "rule__LayoutCall__Group__3__Impl"
    // InternalMoniLog.g:7120:1: rule__LayoutCall__Group__3__Impl : ( ( rule__LayoutCall__Group_3__0 )? ) ;
    public final void rule__LayoutCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7124:1: ( ( ( rule__LayoutCall__Group_3__0 )? ) )
            // InternalMoniLog.g:7125:1: ( ( rule__LayoutCall__Group_3__0 )? )
            {
            // InternalMoniLog.g:7125:1: ( ( rule__LayoutCall__Group_3__0 )? )
            // InternalMoniLog.g:7126:2: ( rule__LayoutCall__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:7127:2: ( rule__LayoutCall__Group_3__0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==39) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalMoniLog.g:7127:3: rule__LayoutCall__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LayoutCall__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group__3__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3__0"
    // InternalMoniLog.g:7136:1: rule__LayoutCall__Group_3__0 : rule__LayoutCall__Group_3__0__Impl rule__LayoutCall__Group_3__1 ;
    public final void rule__LayoutCall__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7140:1: ( rule__LayoutCall__Group_3__0__Impl rule__LayoutCall__Group_3__1 )
            // InternalMoniLog.g:7141:2: rule__LayoutCall__Group_3__0__Impl rule__LayoutCall__Group_3__1
            {
            pushFollow(FOLLOW_47);
            rule__LayoutCall__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__0"


    // $ANTLR start "rule__LayoutCall__Group_3__0__Impl"
    // InternalMoniLog.g:7148:1: rule__LayoutCall__Group_3__0__Impl : ( '(' ) ;
    public final void rule__LayoutCall__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7152:1: ( ( '(' ) )
            // InternalMoniLog.g:7153:1: ( '(' )
            {
            // InternalMoniLog.g:7153:1: ( '(' )
            // InternalMoniLog.g:7154:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__0__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3__1"
    // InternalMoniLog.g:7163:1: rule__LayoutCall__Group_3__1 : rule__LayoutCall__Group_3__1__Impl rule__LayoutCall__Group_3__2 ;
    public final void rule__LayoutCall__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7167:1: ( rule__LayoutCall__Group_3__1__Impl rule__LayoutCall__Group_3__2 )
            // InternalMoniLog.g:7168:2: rule__LayoutCall__Group_3__1__Impl rule__LayoutCall__Group_3__2
            {
            pushFollow(FOLLOW_48);
            rule__LayoutCall__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__1"


    // $ANTLR start "rule__LayoutCall__Group_3__1__Impl"
    // InternalMoniLog.g:7175:1: rule__LayoutCall__Group_3__1__Impl : ( ( rule__LayoutCall__ArgsAssignment_3_1 ) ) ;
    public final void rule__LayoutCall__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7179:1: ( ( ( rule__LayoutCall__ArgsAssignment_3_1 ) ) )
            // InternalMoniLog.g:7180:1: ( ( rule__LayoutCall__ArgsAssignment_3_1 ) )
            {
            // InternalMoniLog.g:7180:1: ( ( rule__LayoutCall__ArgsAssignment_3_1 ) )
            // InternalMoniLog.g:7181:2: ( rule__LayoutCall__ArgsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_1()); 
            }
            // InternalMoniLog.g:7182:2: ( rule__LayoutCall__ArgsAssignment_3_1 )
            // InternalMoniLog.g:7182:3: rule__LayoutCall__ArgsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__ArgsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__1__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3__2"
    // InternalMoniLog.g:7190:1: rule__LayoutCall__Group_3__2 : rule__LayoutCall__Group_3__2__Impl rule__LayoutCall__Group_3__3 ;
    public final void rule__LayoutCall__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7194:1: ( rule__LayoutCall__Group_3__2__Impl rule__LayoutCall__Group_3__3 )
            // InternalMoniLog.g:7195:2: rule__LayoutCall__Group_3__2__Impl rule__LayoutCall__Group_3__3
            {
            pushFollow(FOLLOW_48);
            rule__LayoutCall__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__2"


    // $ANTLR start "rule__LayoutCall__Group_3__2__Impl"
    // InternalMoniLog.g:7202:1: rule__LayoutCall__Group_3__2__Impl : ( ( rule__LayoutCall__Group_3_2__0 )* ) ;
    public final void rule__LayoutCall__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7206:1: ( ( ( rule__LayoutCall__Group_3_2__0 )* ) )
            // InternalMoniLog.g:7207:1: ( ( rule__LayoutCall__Group_3_2__0 )* )
            {
            // InternalMoniLog.g:7207:1: ( ( rule__LayoutCall__Group_3_2__0 )* )
            // InternalMoniLog.g:7208:2: ( rule__LayoutCall__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getGroup_3_2()); 
            }
            // InternalMoniLog.g:7209:2: ( rule__LayoutCall__Group_3_2__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==42) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalMoniLog.g:7209:3: rule__LayoutCall__Group_3_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__LayoutCall__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__2__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3__3"
    // InternalMoniLog.g:7217:1: rule__LayoutCall__Group_3__3 : rule__LayoutCall__Group_3__3__Impl ;
    public final void rule__LayoutCall__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7221:1: ( rule__LayoutCall__Group_3__3__Impl )
            // InternalMoniLog.g:7222:2: rule__LayoutCall__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__3"


    // $ANTLR start "rule__LayoutCall__Group_3__3__Impl"
    // InternalMoniLog.g:7228:1: rule__LayoutCall__Group_3__3__Impl : ( ')' ) ;
    public final void rule__LayoutCall__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7232:1: ( ( ')' ) )
            // InternalMoniLog.g:7233:1: ( ')' )
            {
            // InternalMoniLog.g:7233:1: ( ')' )
            // InternalMoniLog.g:7234:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getRightParenthesisKeyword_3_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getRightParenthesisKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3__3__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3_2__0"
    // InternalMoniLog.g:7244:1: rule__LayoutCall__Group_3_2__0 : rule__LayoutCall__Group_3_2__0__Impl rule__LayoutCall__Group_3_2__1 ;
    public final void rule__LayoutCall__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7248:1: ( rule__LayoutCall__Group_3_2__0__Impl rule__LayoutCall__Group_3_2__1 )
            // InternalMoniLog.g:7249:2: rule__LayoutCall__Group_3_2__0__Impl rule__LayoutCall__Group_3_2__1
            {
            pushFollow(FOLLOW_47);
            rule__LayoutCall__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3_2__0"


    // $ANTLR start "rule__LayoutCall__Group_3_2__0__Impl"
    // InternalMoniLog.g:7256:1: rule__LayoutCall__Group_3_2__0__Impl : ( ',' ) ;
    public final void rule__LayoutCall__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7260:1: ( ( ',' ) )
            // InternalMoniLog.g:7261:1: ( ',' )
            {
            // InternalMoniLog.g:7261:1: ( ',' )
            // InternalMoniLog.g:7262:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getCommaKeyword_3_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getCommaKeyword_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3_2__0__Impl"


    // $ANTLR start "rule__LayoutCall__Group_3_2__1"
    // InternalMoniLog.g:7271:1: rule__LayoutCall__Group_3_2__1 : rule__LayoutCall__Group_3_2__1__Impl ;
    public final void rule__LayoutCall__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7275:1: ( rule__LayoutCall__Group_3_2__1__Impl )
            // InternalMoniLog.g:7276:2: rule__LayoutCall__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3_2__1"


    // $ANTLR start "rule__LayoutCall__Group_3_2__1__Impl"
    // InternalMoniLog.g:7282:1: rule__LayoutCall__Group_3_2__1__Impl : ( ( rule__LayoutCall__ArgsAssignment_3_2_1 ) ) ;
    public final void rule__LayoutCall__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7286:1: ( ( ( rule__LayoutCall__ArgsAssignment_3_2_1 ) ) )
            // InternalMoniLog.g:7287:1: ( ( rule__LayoutCall__ArgsAssignment_3_2_1 ) )
            {
            // InternalMoniLog.g:7287:1: ( ( rule__LayoutCall__ArgsAssignment_3_2_1 ) )
            // InternalMoniLog.g:7288:2: ( rule__LayoutCall__ArgsAssignment_3_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_2_1()); 
            }
            // InternalMoniLog.g:7289:2: ( rule__LayoutCall__ArgsAssignment_3_2_1 )
            // InternalMoniLog.g:7289:3: rule__LayoutCall__ArgsAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LayoutCall__ArgsAssignment_3_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getArgsAssignment_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__Group_3_2__1__Impl"


    // $ANTLR start "rule__EmitEvent__Group__0"
    // InternalMoniLog.g:7298:1: rule__EmitEvent__Group__0 : rule__EmitEvent__Group__0__Impl rule__EmitEvent__Group__1 ;
    public final void rule__EmitEvent__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7302:1: ( rule__EmitEvent__Group__0__Impl rule__EmitEvent__Group__1 )
            // InternalMoniLog.g:7303:2: rule__EmitEvent__Group__0__Impl rule__EmitEvent__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__EmitEvent__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__0"


    // $ANTLR start "rule__EmitEvent__Group__0__Impl"
    // InternalMoniLog.g:7310:1: rule__EmitEvent__Group__0__Impl : ( ( rule__EmitEvent__EventAssignment_0 ) ) ;
    public final void rule__EmitEvent__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7314:1: ( ( ( rule__EmitEvent__EventAssignment_0 ) ) )
            // InternalMoniLog.g:7315:1: ( ( rule__EmitEvent__EventAssignment_0 ) )
            {
            // InternalMoniLog.g:7315:1: ( ( rule__EmitEvent__EventAssignment_0 ) )
            // InternalMoniLog.g:7316:2: ( rule__EmitEvent__EventAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getEventAssignment_0()); 
            }
            // InternalMoniLog.g:7317:2: ( rule__EmitEvent__EventAssignment_0 )
            // InternalMoniLog.g:7317:3: rule__EmitEvent__EventAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__EventAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getEventAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__0__Impl"


    // $ANTLR start "rule__EmitEvent__Group__1"
    // InternalMoniLog.g:7325:1: rule__EmitEvent__Group__1 : rule__EmitEvent__Group__1__Impl rule__EmitEvent__Group__2 ;
    public final void rule__EmitEvent__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7329:1: ( rule__EmitEvent__Group__1__Impl rule__EmitEvent__Group__2 )
            // InternalMoniLog.g:7330:2: rule__EmitEvent__Group__1__Impl rule__EmitEvent__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__EmitEvent__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__1"


    // $ANTLR start "rule__EmitEvent__Group__1__Impl"
    // InternalMoniLog.g:7337:1: rule__EmitEvent__Group__1__Impl : ( '.' ) ;
    public final void rule__EmitEvent__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7341:1: ( ( '.' ) )
            // InternalMoniLog.g:7342:1: ( '.' )
            {
            // InternalMoniLog.g:7342:1: ( '.' )
            // InternalMoniLog.g:7343:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getFullStopKeyword_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__1__Impl"


    // $ANTLR start "rule__EmitEvent__Group__2"
    // InternalMoniLog.g:7352:1: rule__EmitEvent__Group__2 : rule__EmitEvent__Group__2__Impl rule__EmitEvent__Group__3 ;
    public final void rule__EmitEvent__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7356:1: ( rule__EmitEvent__Group__2__Impl rule__EmitEvent__Group__3 )
            // InternalMoniLog.g:7357:2: rule__EmitEvent__Group__2__Impl rule__EmitEvent__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__EmitEvent__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__2"


    // $ANTLR start "rule__EmitEvent__Group__2__Impl"
    // InternalMoniLog.g:7364:1: rule__EmitEvent__Group__2__Impl : ( 'emit' ) ;
    public final void rule__EmitEvent__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7368:1: ( ( 'emit' ) )
            // InternalMoniLog.g:7369:1: ( 'emit' )
            {
            // InternalMoniLog.g:7369:1: ( 'emit' )
            // InternalMoniLog.g:7370:2: 'emit'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getEmitKeyword_2()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getEmitKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__2__Impl"


    // $ANTLR start "rule__EmitEvent__Group__3"
    // InternalMoniLog.g:7379:1: rule__EmitEvent__Group__3 : rule__EmitEvent__Group__3__Impl ;
    public final void rule__EmitEvent__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7383:1: ( rule__EmitEvent__Group__3__Impl )
            // InternalMoniLog.g:7384:2: rule__EmitEvent__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__3"


    // $ANTLR start "rule__EmitEvent__Group__3__Impl"
    // InternalMoniLog.g:7390:1: rule__EmitEvent__Group__3__Impl : ( ( rule__EmitEvent__Group_3__0 )? ) ;
    public final void rule__EmitEvent__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7394:1: ( ( ( rule__EmitEvent__Group_3__0 )? ) )
            // InternalMoniLog.g:7395:1: ( ( rule__EmitEvent__Group_3__0 )? )
            {
            // InternalMoniLog.g:7395:1: ( ( rule__EmitEvent__Group_3__0 )? )
            // InternalMoniLog.g:7396:2: ( rule__EmitEvent__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:7397:2: ( rule__EmitEvent__Group_3__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==39) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalMoniLog.g:7397:3: rule__EmitEvent__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EmitEvent__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group__3__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3__0"
    // InternalMoniLog.g:7406:1: rule__EmitEvent__Group_3__0 : rule__EmitEvent__Group_3__0__Impl rule__EmitEvent__Group_3__1 ;
    public final void rule__EmitEvent__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7410:1: ( rule__EmitEvent__Group_3__0__Impl rule__EmitEvent__Group_3__1 )
            // InternalMoniLog.g:7411:2: rule__EmitEvent__Group_3__0__Impl rule__EmitEvent__Group_3__1
            {
            pushFollow(FOLLOW_47);
            rule__EmitEvent__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__0"


    // $ANTLR start "rule__EmitEvent__Group_3__0__Impl"
    // InternalMoniLog.g:7418:1: rule__EmitEvent__Group_3__0__Impl : ( '(' ) ;
    public final void rule__EmitEvent__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7422:1: ( ( '(' ) )
            // InternalMoniLog.g:7423:1: ( '(' )
            {
            // InternalMoniLog.g:7423:1: ( '(' )
            // InternalMoniLog.g:7424:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__0__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3__1"
    // InternalMoniLog.g:7433:1: rule__EmitEvent__Group_3__1 : rule__EmitEvent__Group_3__1__Impl rule__EmitEvent__Group_3__2 ;
    public final void rule__EmitEvent__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7437:1: ( rule__EmitEvent__Group_3__1__Impl rule__EmitEvent__Group_3__2 )
            // InternalMoniLog.g:7438:2: rule__EmitEvent__Group_3__1__Impl rule__EmitEvent__Group_3__2
            {
            pushFollow(FOLLOW_48);
            rule__EmitEvent__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__1"


    // $ANTLR start "rule__EmitEvent__Group_3__1__Impl"
    // InternalMoniLog.g:7445:1: rule__EmitEvent__Group_3__1__Impl : ( ( rule__EmitEvent__ArgsAssignment_3_1 ) ) ;
    public final void rule__EmitEvent__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7449:1: ( ( ( rule__EmitEvent__ArgsAssignment_3_1 ) ) )
            // InternalMoniLog.g:7450:1: ( ( rule__EmitEvent__ArgsAssignment_3_1 ) )
            {
            // InternalMoniLog.g:7450:1: ( ( rule__EmitEvent__ArgsAssignment_3_1 ) )
            // InternalMoniLog.g:7451:2: ( rule__EmitEvent__ArgsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getArgsAssignment_3_1()); 
            }
            // InternalMoniLog.g:7452:2: ( rule__EmitEvent__ArgsAssignment_3_1 )
            // InternalMoniLog.g:7452:3: rule__EmitEvent__ArgsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__ArgsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getArgsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__1__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3__2"
    // InternalMoniLog.g:7460:1: rule__EmitEvent__Group_3__2 : rule__EmitEvent__Group_3__2__Impl rule__EmitEvent__Group_3__3 ;
    public final void rule__EmitEvent__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7464:1: ( rule__EmitEvent__Group_3__2__Impl rule__EmitEvent__Group_3__3 )
            // InternalMoniLog.g:7465:2: rule__EmitEvent__Group_3__2__Impl rule__EmitEvent__Group_3__3
            {
            pushFollow(FOLLOW_48);
            rule__EmitEvent__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__2"


    // $ANTLR start "rule__EmitEvent__Group_3__2__Impl"
    // InternalMoniLog.g:7472:1: rule__EmitEvent__Group_3__2__Impl : ( ( rule__EmitEvent__Group_3_2__0 )* ) ;
    public final void rule__EmitEvent__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7476:1: ( ( ( rule__EmitEvent__Group_3_2__0 )* ) )
            // InternalMoniLog.g:7477:1: ( ( rule__EmitEvent__Group_3_2__0 )* )
            {
            // InternalMoniLog.g:7477:1: ( ( rule__EmitEvent__Group_3_2__0 )* )
            // InternalMoniLog.g:7478:2: ( rule__EmitEvent__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getGroup_3_2()); 
            }
            // InternalMoniLog.g:7479:2: ( rule__EmitEvent__Group_3_2__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==42) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalMoniLog.g:7479:3: rule__EmitEvent__Group_3_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__EmitEvent__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__2__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3__3"
    // InternalMoniLog.g:7487:1: rule__EmitEvent__Group_3__3 : rule__EmitEvent__Group_3__3__Impl ;
    public final void rule__EmitEvent__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7491:1: ( rule__EmitEvent__Group_3__3__Impl )
            // InternalMoniLog.g:7492:2: rule__EmitEvent__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__3"


    // $ANTLR start "rule__EmitEvent__Group_3__3__Impl"
    // InternalMoniLog.g:7498:1: rule__EmitEvent__Group_3__3__Impl : ( ')' ) ;
    public final void rule__EmitEvent__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7502:1: ( ( ')' ) )
            // InternalMoniLog.g:7503:1: ( ')' )
            {
            // InternalMoniLog.g:7503:1: ( ')' )
            // InternalMoniLog.g:7504:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getRightParenthesisKeyword_3_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getRightParenthesisKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3__3__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3_2__0"
    // InternalMoniLog.g:7514:1: rule__EmitEvent__Group_3_2__0 : rule__EmitEvent__Group_3_2__0__Impl rule__EmitEvent__Group_3_2__1 ;
    public final void rule__EmitEvent__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7518:1: ( rule__EmitEvent__Group_3_2__0__Impl rule__EmitEvent__Group_3_2__1 )
            // InternalMoniLog.g:7519:2: rule__EmitEvent__Group_3_2__0__Impl rule__EmitEvent__Group_3_2__1
            {
            pushFollow(FOLLOW_47);
            rule__EmitEvent__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3_2__0"


    // $ANTLR start "rule__EmitEvent__Group_3_2__0__Impl"
    // InternalMoniLog.g:7526:1: rule__EmitEvent__Group_3_2__0__Impl : ( ',' ) ;
    public final void rule__EmitEvent__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7530:1: ( ( ',' ) )
            // InternalMoniLog.g:7531:1: ( ',' )
            {
            // InternalMoniLog.g:7531:1: ( ',' )
            // InternalMoniLog.g:7532:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getCommaKeyword_3_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getCommaKeyword_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3_2__0__Impl"


    // $ANTLR start "rule__EmitEvent__Group_3_2__1"
    // InternalMoniLog.g:7541:1: rule__EmitEvent__Group_3_2__1 : rule__EmitEvent__Group_3_2__1__Impl ;
    public final void rule__EmitEvent__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7545:1: ( rule__EmitEvent__Group_3_2__1__Impl )
            // InternalMoniLog.g:7546:2: rule__EmitEvent__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3_2__1"


    // $ANTLR start "rule__EmitEvent__Group_3_2__1__Impl"
    // InternalMoniLog.g:7552:1: rule__EmitEvent__Group_3_2__1__Impl : ( ( rule__EmitEvent__ArgsAssignment_3_2_1 ) ) ;
    public final void rule__EmitEvent__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7556:1: ( ( ( rule__EmitEvent__ArgsAssignment_3_2_1 ) ) )
            // InternalMoniLog.g:7557:1: ( ( rule__EmitEvent__ArgsAssignment_3_2_1 ) )
            {
            // InternalMoniLog.g:7557:1: ( ( rule__EmitEvent__ArgsAssignment_3_2_1 ) )
            // InternalMoniLog.g:7558:2: ( rule__EmitEvent__ArgsAssignment_3_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getArgsAssignment_3_2_1()); 
            }
            // InternalMoniLog.g:7559:2: ( rule__EmitEvent__ArgsAssignment_3_2_1 )
            // InternalMoniLog.g:7559:3: rule__EmitEvent__ArgsAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__EmitEvent__ArgsAssignment_3_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getArgsAssignment_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__Group_3_2__1__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0__0"
    // InternalMoniLog.g:7568:1: rule__MoniloggerCall__Group_0__0 : rule__MoniloggerCall__Group_0__0__Impl rule__MoniloggerCall__Group_0__1 ;
    public final void rule__MoniloggerCall__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7572:1: ( rule__MoniloggerCall__Group_0__0__Impl rule__MoniloggerCall__Group_0__1 )
            // InternalMoniLog.g:7573:2: rule__MoniloggerCall__Group_0__0__Impl rule__MoniloggerCall__Group_0__1
            {
            pushFollow(FOLLOW_3);
            rule__MoniloggerCall__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__0"


    // $ANTLR start "rule__MoniloggerCall__Group_0__0__Impl"
    // InternalMoniLog.g:7580:1: rule__MoniloggerCall__Group_0__0__Impl : ( () ) ;
    public final void rule__MoniloggerCall__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7584:1: ( ( () ) )
            // InternalMoniLog.g:7585:1: ( () )
            {
            // InternalMoniLog.g:7585:1: ( () )
            // InternalMoniLog.g:7586:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getStartMoniLoggerAction_0_0()); 
            }
            // InternalMoniLog.g:7587:2: ()
            // InternalMoniLog.g:7587:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getStartMoniLoggerAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__0__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0__1"
    // InternalMoniLog.g:7595:1: rule__MoniloggerCall__Group_0__1 : rule__MoniloggerCall__Group_0__1__Impl rule__MoniloggerCall__Group_0__2 ;
    public final void rule__MoniloggerCall__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7599:1: ( rule__MoniloggerCall__Group_0__1__Impl rule__MoniloggerCall__Group_0__2 )
            // InternalMoniLog.g:7600:2: rule__MoniloggerCall__Group_0__1__Impl rule__MoniloggerCall__Group_0__2
            {
            pushFollow(FOLLOW_46);
            rule__MoniloggerCall__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__1"


    // $ANTLR start "rule__MoniloggerCall__Group_0__1__Impl"
    // InternalMoniLog.g:7607:1: rule__MoniloggerCall__Group_0__1__Impl : ( ( rule__MoniloggerCall__MoniloggerAssignment_0_1 ) ) ;
    public final void rule__MoniloggerCall__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7611:1: ( ( ( rule__MoniloggerCall__MoniloggerAssignment_0_1 ) ) )
            // InternalMoniLog.g:7612:1: ( ( rule__MoniloggerCall__MoniloggerAssignment_0_1 ) )
            {
            // InternalMoniLog.g:7612:1: ( ( rule__MoniloggerCall__MoniloggerAssignment_0_1 ) )
            // InternalMoniLog.g:7613:2: ( rule__MoniloggerCall__MoniloggerAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerAssignment_0_1()); 
            }
            // InternalMoniLog.g:7614:2: ( rule__MoniloggerCall__MoniloggerAssignment_0_1 )
            // InternalMoniLog.g:7614:3: rule__MoniloggerCall__MoniloggerAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__MoniloggerAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__1__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0__2"
    // InternalMoniLog.g:7622:1: rule__MoniloggerCall__Group_0__2 : rule__MoniloggerCall__Group_0__2__Impl rule__MoniloggerCall__Group_0__3 ;
    public final void rule__MoniloggerCall__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7626:1: ( rule__MoniloggerCall__Group_0__2__Impl rule__MoniloggerCall__Group_0__3 )
            // InternalMoniLog.g:7627:2: rule__MoniloggerCall__Group_0__2__Impl rule__MoniloggerCall__Group_0__3
            {
            pushFollow(FOLLOW_50);
            rule__MoniloggerCall__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__2"


    // $ANTLR start "rule__MoniloggerCall__Group_0__2__Impl"
    // InternalMoniLog.g:7634:1: rule__MoniloggerCall__Group_0__2__Impl : ( '.' ) ;
    public final void rule__MoniloggerCall__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7638:1: ( ( '.' ) )
            // InternalMoniLog.g:7639:1: ( '.' )
            {
            // InternalMoniLog.g:7639:1: ( '.' )
            // InternalMoniLog.g:7640:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getFullStopKeyword_0_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getFullStopKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__2__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0__3"
    // InternalMoniLog.g:7649:1: rule__MoniloggerCall__Group_0__3 : rule__MoniloggerCall__Group_0__3__Impl rule__MoniloggerCall__Group_0__4 ;
    public final void rule__MoniloggerCall__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7653:1: ( rule__MoniloggerCall__Group_0__3__Impl rule__MoniloggerCall__Group_0__4 )
            // InternalMoniLog.g:7654:2: rule__MoniloggerCall__Group_0__3__Impl rule__MoniloggerCall__Group_0__4
            {
            pushFollow(FOLLOW_14);
            rule__MoniloggerCall__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__3"


    // $ANTLR start "rule__MoniloggerCall__Group_0__3__Impl"
    // InternalMoniLog.g:7661:1: rule__MoniloggerCall__Group_0__3__Impl : ( 'start' ) ;
    public final void rule__MoniloggerCall__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7665:1: ( ( 'start' ) )
            // InternalMoniLog.g:7666:1: ( 'start' )
            {
            // InternalMoniLog.g:7666:1: ( 'start' )
            // InternalMoniLog.g:7667:2: 'start'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getStartKeyword_0_3()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getStartKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__3__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0__4"
    // InternalMoniLog.g:7676:1: rule__MoniloggerCall__Group_0__4 : rule__MoniloggerCall__Group_0__4__Impl ;
    public final void rule__MoniloggerCall__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7680:1: ( rule__MoniloggerCall__Group_0__4__Impl )
            // InternalMoniLog.g:7681:2: rule__MoniloggerCall__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__4"


    // $ANTLR start "rule__MoniloggerCall__Group_0__4__Impl"
    // InternalMoniLog.g:7687:1: rule__MoniloggerCall__Group_0__4__Impl : ( ( rule__MoniloggerCall__Group_0_4__0 )? ) ;
    public final void rule__MoniloggerCall__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7691:1: ( ( ( rule__MoniloggerCall__Group_0_4__0 )? ) )
            // InternalMoniLog.g:7692:1: ( ( rule__MoniloggerCall__Group_0_4__0 )? )
            {
            // InternalMoniLog.g:7692:1: ( ( rule__MoniloggerCall__Group_0_4__0 )? )
            // InternalMoniLog.g:7693:2: ( rule__MoniloggerCall__Group_0_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getGroup_0_4()); 
            }
            // InternalMoniLog.g:7694:2: ( rule__MoniloggerCall__Group_0_4__0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==39) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalMoniLog.g:7694:3: rule__MoniloggerCall__Group_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MoniloggerCall__Group_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getGroup_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0__4__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__0"
    // InternalMoniLog.g:7703:1: rule__MoniloggerCall__Group_0_4__0 : rule__MoniloggerCall__Group_0_4__0__Impl rule__MoniloggerCall__Group_0_4__1 ;
    public final void rule__MoniloggerCall__Group_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7707:1: ( rule__MoniloggerCall__Group_0_4__0__Impl rule__MoniloggerCall__Group_0_4__1 )
            // InternalMoniLog.g:7708:2: rule__MoniloggerCall__Group_0_4__0__Impl rule__MoniloggerCall__Group_0_4__1
            {
            pushFollow(FOLLOW_47);
            rule__MoniloggerCall__Group_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__0"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__0__Impl"
    // InternalMoniLog.g:7715:1: rule__MoniloggerCall__Group_0_4__0__Impl : ( '(' ) ;
    public final void rule__MoniloggerCall__Group_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7719:1: ( ( '(' ) )
            // InternalMoniLog.g:7720:1: ( '(' )
            {
            // InternalMoniLog.g:7720:1: ( '(' )
            // InternalMoniLog.g:7721:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getLeftParenthesisKeyword_0_4_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getLeftParenthesisKeyword_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__0__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__1"
    // InternalMoniLog.g:7730:1: rule__MoniloggerCall__Group_0_4__1 : rule__MoniloggerCall__Group_0_4__1__Impl rule__MoniloggerCall__Group_0_4__2 ;
    public final void rule__MoniloggerCall__Group_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7734:1: ( rule__MoniloggerCall__Group_0_4__1__Impl rule__MoniloggerCall__Group_0_4__2 )
            // InternalMoniLog.g:7735:2: rule__MoniloggerCall__Group_0_4__1__Impl rule__MoniloggerCall__Group_0_4__2
            {
            pushFollow(FOLLOW_48);
            rule__MoniloggerCall__Group_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__1"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__1__Impl"
    // InternalMoniLog.g:7742:1: rule__MoniloggerCall__Group_0_4__1__Impl : ( ( rule__MoniloggerCall__ArgsAssignment_0_4_1 ) ) ;
    public final void rule__MoniloggerCall__Group_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7746:1: ( ( ( rule__MoniloggerCall__ArgsAssignment_0_4_1 ) ) )
            // InternalMoniLog.g:7747:1: ( ( rule__MoniloggerCall__ArgsAssignment_0_4_1 ) )
            {
            // InternalMoniLog.g:7747:1: ( ( rule__MoniloggerCall__ArgsAssignment_0_4_1 ) )
            // InternalMoniLog.g:7748:2: ( rule__MoniloggerCall__ArgsAssignment_0_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getArgsAssignment_0_4_1()); 
            }
            // InternalMoniLog.g:7749:2: ( rule__MoniloggerCall__ArgsAssignment_0_4_1 )
            // InternalMoniLog.g:7749:3: rule__MoniloggerCall__ArgsAssignment_0_4_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__ArgsAssignment_0_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getArgsAssignment_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__1__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__2"
    // InternalMoniLog.g:7757:1: rule__MoniloggerCall__Group_0_4__2 : rule__MoniloggerCall__Group_0_4__2__Impl rule__MoniloggerCall__Group_0_4__3 ;
    public final void rule__MoniloggerCall__Group_0_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7761:1: ( rule__MoniloggerCall__Group_0_4__2__Impl rule__MoniloggerCall__Group_0_4__3 )
            // InternalMoniLog.g:7762:2: rule__MoniloggerCall__Group_0_4__2__Impl rule__MoniloggerCall__Group_0_4__3
            {
            pushFollow(FOLLOW_48);
            rule__MoniloggerCall__Group_0_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__2"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__2__Impl"
    // InternalMoniLog.g:7769:1: rule__MoniloggerCall__Group_0_4__2__Impl : ( ( rule__MoniloggerCall__Group_0_4_2__0 )* ) ;
    public final void rule__MoniloggerCall__Group_0_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7773:1: ( ( ( rule__MoniloggerCall__Group_0_4_2__0 )* ) )
            // InternalMoniLog.g:7774:1: ( ( rule__MoniloggerCall__Group_0_4_2__0 )* )
            {
            // InternalMoniLog.g:7774:1: ( ( rule__MoniloggerCall__Group_0_4_2__0 )* )
            // InternalMoniLog.g:7775:2: ( rule__MoniloggerCall__Group_0_4_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getGroup_0_4_2()); 
            }
            // InternalMoniLog.g:7776:2: ( rule__MoniloggerCall__Group_0_4_2__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==42) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalMoniLog.g:7776:3: rule__MoniloggerCall__Group_0_4_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__MoniloggerCall__Group_0_4_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getGroup_0_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__2__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__3"
    // InternalMoniLog.g:7784:1: rule__MoniloggerCall__Group_0_4__3 : rule__MoniloggerCall__Group_0_4__3__Impl ;
    public final void rule__MoniloggerCall__Group_0_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7788:1: ( rule__MoniloggerCall__Group_0_4__3__Impl )
            // InternalMoniLog.g:7789:2: rule__MoniloggerCall__Group_0_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__3"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4__3__Impl"
    // InternalMoniLog.g:7795:1: rule__MoniloggerCall__Group_0_4__3__Impl : ( ')' ) ;
    public final void rule__MoniloggerCall__Group_0_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7799:1: ( ( ')' ) )
            // InternalMoniLog.g:7800:1: ( ')' )
            {
            // InternalMoniLog.g:7800:1: ( ')' )
            // InternalMoniLog.g:7801:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getRightParenthesisKeyword_0_4_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getRightParenthesisKeyword_0_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4__3__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4_2__0"
    // InternalMoniLog.g:7811:1: rule__MoniloggerCall__Group_0_4_2__0 : rule__MoniloggerCall__Group_0_4_2__0__Impl rule__MoniloggerCall__Group_0_4_2__1 ;
    public final void rule__MoniloggerCall__Group_0_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7815:1: ( rule__MoniloggerCall__Group_0_4_2__0__Impl rule__MoniloggerCall__Group_0_4_2__1 )
            // InternalMoniLog.g:7816:2: rule__MoniloggerCall__Group_0_4_2__0__Impl rule__MoniloggerCall__Group_0_4_2__1
            {
            pushFollow(FOLLOW_47);
            rule__MoniloggerCall__Group_0_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4_2__0"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4_2__0__Impl"
    // InternalMoniLog.g:7823:1: rule__MoniloggerCall__Group_0_4_2__0__Impl : ( ',' ) ;
    public final void rule__MoniloggerCall__Group_0_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7827:1: ( ( ',' ) )
            // InternalMoniLog.g:7828:1: ( ',' )
            {
            // InternalMoniLog.g:7828:1: ( ',' )
            // InternalMoniLog.g:7829:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getCommaKeyword_0_4_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getCommaKeyword_0_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4_2__0__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4_2__1"
    // InternalMoniLog.g:7838:1: rule__MoniloggerCall__Group_0_4_2__1 : rule__MoniloggerCall__Group_0_4_2__1__Impl ;
    public final void rule__MoniloggerCall__Group_0_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7842:1: ( rule__MoniloggerCall__Group_0_4_2__1__Impl )
            // InternalMoniLog.g:7843:2: rule__MoniloggerCall__Group_0_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_0_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4_2__1"


    // $ANTLR start "rule__MoniloggerCall__Group_0_4_2__1__Impl"
    // InternalMoniLog.g:7849:1: rule__MoniloggerCall__Group_0_4_2__1__Impl : ( ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 ) ) ;
    public final void rule__MoniloggerCall__Group_0_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7853:1: ( ( ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 ) ) )
            // InternalMoniLog.g:7854:1: ( ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 ) )
            {
            // InternalMoniLog.g:7854:1: ( ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 ) )
            // InternalMoniLog.g:7855:2: ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getArgsAssignment_0_4_2_1()); 
            }
            // InternalMoniLog.g:7856:2: ( rule__MoniloggerCall__ArgsAssignment_0_4_2_1 )
            // InternalMoniLog.g:7856:3: rule__MoniloggerCall__ArgsAssignment_0_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__ArgsAssignment_0_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getArgsAssignment_0_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_0_4_2__1__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_1__0"
    // InternalMoniLog.g:7865:1: rule__MoniloggerCall__Group_1__0 : rule__MoniloggerCall__Group_1__0__Impl rule__MoniloggerCall__Group_1__1 ;
    public final void rule__MoniloggerCall__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7869:1: ( rule__MoniloggerCall__Group_1__0__Impl rule__MoniloggerCall__Group_1__1 )
            // InternalMoniLog.g:7870:2: rule__MoniloggerCall__Group_1__0__Impl rule__MoniloggerCall__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__MoniloggerCall__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__0"


    // $ANTLR start "rule__MoniloggerCall__Group_1__0__Impl"
    // InternalMoniLog.g:7877:1: rule__MoniloggerCall__Group_1__0__Impl : ( () ) ;
    public final void rule__MoniloggerCall__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7881:1: ( ( () ) )
            // InternalMoniLog.g:7882:1: ( () )
            {
            // InternalMoniLog.g:7882:1: ( () )
            // InternalMoniLog.g:7883:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getStopMoniLoggerAction_1_0()); 
            }
            // InternalMoniLog.g:7884:2: ()
            // InternalMoniLog.g:7884:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getStopMoniLoggerAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__0__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_1__1"
    // InternalMoniLog.g:7892:1: rule__MoniloggerCall__Group_1__1 : rule__MoniloggerCall__Group_1__1__Impl rule__MoniloggerCall__Group_1__2 ;
    public final void rule__MoniloggerCall__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7896:1: ( rule__MoniloggerCall__Group_1__1__Impl rule__MoniloggerCall__Group_1__2 )
            // InternalMoniLog.g:7897:2: rule__MoniloggerCall__Group_1__1__Impl rule__MoniloggerCall__Group_1__2
            {
            pushFollow(FOLLOW_46);
            rule__MoniloggerCall__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__1"


    // $ANTLR start "rule__MoniloggerCall__Group_1__1__Impl"
    // InternalMoniLog.g:7904:1: rule__MoniloggerCall__Group_1__1__Impl : ( ( rule__MoniloggerCall__MoniloggerAssignment_1_1 ) ) ;
    public final void rule__MoniloggerCall__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7908:1: ( ( ( rule__MoniloggerCall__MoniloggerAssignment_1_1 ) ) )
            // InternalMoniLog.g:7909:1: ( ( rule__MoniloggerCall__MoniloggerAssignment_1_1 ) )
            {
            // InternalMoniLog.g:7909:1: ( ( rule__MoniloggerCall__MoniloggerAssignment_1_1 ) )
            // InternalMoniLog.g:7910:2: ( rule__MoniloggerCall__MoniloggerAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerAssignment_1_1()); 
            }
            // InternalMoniLog.g:7911:2: ( rule__MoniloggerCall__MoniloggerAssignment_1_1 )
            // InternalMoniLog.g:7911:3: rule__MoniloggerCall__MoniloggerAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__MoniloggerAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__1__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_1__2"
    // InternalMoniLog.g:7919:1: rule__MoniloggerCall__Group_1__2 : rule__MoniloggerCall__Group_1__2__Impl rule__MoniloggerCall__Group_1__3 ;
    public final void rule__MoniloggerCall__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7923:1: ( rule__MoniloggerCall__Group_1__2__Impl rule__MoniloggerCall__Group_1__3 )
            // InternalMoniLog.g:7924:2: rule__MoniloggerCall__Group_1__2__Impl rule__MoniloggerCall__Group_1__3
            {
            pushFollow(FOLLOW_51);
            rule__MoniloggerCall__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__2"


    // $ANTLR start "rule__MoniloggerCall__Group_1__2__Impl"
    // InternalMoniLog.g:7931:1: rule__MoniloggerCall__Group_1__2__Impl : ( '.' ) ;
    public final void rule__MoniloggerCall__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7935:1: ( ( '.' ) )
            // InternalMoniLog.g:7936:1: ( '.' )
            {
            // InternalMoniLog.g:7936:1: ( '.' )
            // InternalMoniLog.g:7937:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getFullStopKeyword_1_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getFullStopKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__2__Impl"


    // $ANTLR start "rule__MoniloggerCall__Group_1__3"
    // InternalMoniLog.g:7946:1: rule__MoniloggerCall__Group_1__3 : rule__MoniloggerCall__Group_1__3__Impl ;
    public final void rule__MoniloggerCall__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7950:1: ( rule__MoniloggerCall__Group_1__3__Impl )
            // InternalMoniLog.g:7951:2: rule__MoniloggerCall__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniloggerCall__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__3"


    // $ANTLR start "rule__MoniloggerCall__Group_1__3__Impl"
    // InternalMoniLog.g:7957:1: rule__MoniloggerCall__Group_1__3__Impl : ( 'stop' ) ;
    public final void rule__MoniloggerCall__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7961:1: ( ( 'stop' ) )
            // InternalMoniLog.g:7962:1: ( 'stop' )
            {
            // InternalMoniLog.g:7962:1: ( 'stop' )
            // InternalMoniLog.g:7963:2: 'stop'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getStopKeyword_1_3()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getStopKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__Group_1__3__Impl"


    // $ANTLR start "rule__StreamEvent__Group__0"
    // InternalMoniLog.g:7973:1: rule__StreamEvent__Group__0 : rule__StreamEvent__Group__0__Impl rule__StreamEvent__Group__1 ;
    public final void rule__StreamEvent__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7977:1: ( rule__StreamEvent__Group__0__Impl rule__StreamEvent__Group__1 )
            // InternalMoniLog.g:7978:2: rule__StreamEvent__Group__0__Impl rule__StreamEvent__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__StreamEvent__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group__0"


    // $ANTLR start "rule__StreamEvent__Group__0__Impl"
    // InternalMoniLog.g:7985:1: rule__StreamEvent__Group__0__Impl : ( ( rule__StreamEvent__EventAssignment_0 ) ) ;
    public final void rule__StreamEvent__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:7989:1: ( ( ( rule__StreamEvent__EventAssignment_0 ) ) )
            // InternalMoniLog.g:7990:1: ( ( rule__StreamEvent__EventAssignment_0 ) )
            {
            // InternalMoniLog.g:7990:1: ( ( rule__StreamEvent__EventAssignment_0 ) )
            // InternalMoniLog.g:7991:2: ( rule__StreamEvent__EventAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getEventAssignment_0()); 
            }
            // InternalMoniLog.g:7992:2: ( rule__StreamEvent__EventAssignment_0 )
            // InternalMoniLog.g:7992:3: rule__StreamEvent__EventAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__EventAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getEventAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group__0__Impl"


    // $ANTLR start "rule__StreamEvent__Group__1"
    // InternalMoniLog.g:8000:1: rule__StreamEvent__Group__1 : rule__StreamEvent__Group__1__Impl ;
    public final void rule__StreamEvent__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8004:1: ( rule__StreamEvent__Group__1__Impl )
            // InternalMoniLog.g:8005:2: rule__StreamEvent__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group__1"


    // $ANTLR start "rule__StreamEvent__Group__1__Impl"
    // InternalMoniLog.g:8011:1: rule__StreamEvent__Group__1__Impl : ( ( rule__StreamEvent__Group_1__0 )? ) ;
    public final void rule__StreamEvent__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8015:1: ( ( ( rule__StreamEvent__Group_1__0 )? ) )
            // InternalMoniLog.g:8016:1: ( ( rule__StreamEvent__Group_1__0 )? )
            {
            // InternalMoniLog.g:8016:1: ( ( rule__StreamEvent__Group_1__0 )? )
            // InternalMoniLog.g:8017:2: ( rule__StreamEvent__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:8018:2: ( rule__StreamEvent__Group_1__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==39) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalMoniLog.g:8018:3: rule__StreamEvent__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__StreamEvent__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group__1__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1__0"
    // InternalMoniLog.g:8027:1: rule__StreamEvent__Group_1__0 : rule__StreamEvent__Group_1__0__Impl rule__StreamEvent__Group_1__1 ;
    public final void rule__StreamEvent__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8031:1: ( rule__StreamEvent__Group_1__0__Impl rule__StreamEvent__Group_1__1 )
            // InternalMoniLog.g:8032:2: rule__StreamEvent__Group_1__0__Impl rule__StreamEvent__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__StreamEvent__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__0"


    // $ANTLR start "rule__StreamEvent__Group_1__0__Impl"
    // InternalMoniLog.g:8039:1: rule__StreamEvent__Group_1__0__Impl : ( '(' ) ;
    public final void rule__StreamEvent__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8043:1: ( ( '(' ) )
            // InternalMoniLog.g:8044:1: ( '(' )
            {
            // InternalMoniLog.g:8044:1: ( '(' )
            // InternalMoniLog.g:8045:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__0__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1__1"
    // InternalMoniLog.g:8054:1: rule__StreamEvent__Group_1__1 : rule__StreamEvent__Group_1__1__Impl rule__StreamEvent__Group_1__2 ;
    public final void rule__StreamEvent__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8058:1: ( rule__StreamEvent__Group_1__1__Impl rule__StreamEvent__Group_1__2 )
            // InternalMoniLog.g:8059:2: rule__StreamEvent__Group_1__1__Impl rule__StreamEvent__Group_1__2
            {
            pushFollow(FOLLOW_48);
            rule__StreamEvent__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__1"


    // $ANTLR start "rule__StreamEvent__Group_1__1__Impl"
    // InternalMoniLog.g:8066:1: rule__StreamEvent__Group_1__1__Impl : ( ( rule__StreamEvent__ValuesAssignment_1_1 ) ) ;
    public final void rule__StreamEvent__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8070:1: ( ( ( rule__StreamEvent__ValuesAssignment_1_1 ) ) )
            // InternalMoniLog.g:8071:1: ( ( rule__StreamEvent__ValuesAssignment_1_1 ) )
            {
            // InternalMoniLog.g:8071:1: ( ( rule__StreamEvent__ValuesAssignment_1_1 ) )
            // InternalMoniLog.g:8072:2: ( rule__StreamEvent__ValuesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getValuesAssignment_1_1()); 
            }
            // InternalMoniLog.g:8073:2: ( rule__StreamEvent__ValuesAssignment_1_1 )
            // InternalMoniLog.g:8073:3: rule__StreamEvent__ValuesAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__ValuesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getValuesAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__1__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1__2"
    // InternalMoniLog.g:8081:1: rule__StreamEvent__Group_1__2 : rule__StreamEvent__Group_1__2__Impl rule__StreamEvent__Group_1__3 ;
    public final void rule__StreamEvent__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8085:1: ( rule__StreamEvent__Group_1__2__Impl rule__StreamEvent__Group_1__3 )
            // InternalMoniLog.g:8086:2: rule__StreamEvent__Group_1__2__Impl rule__StreamEvent__Group_1__3
            {
            pushFollow(FOLLOW_48);
            rule__StreamEvent__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__2"


    // $ANTLR start "rule__StreamEvent__Group_1__2__Impl"
    // InternalMoniLog.g:8093:1: rule__StreamEvent__Group_1__2__Impl : ( ( rule__StreamEvent__Group_1_2__0 )* ) ;
    public final void rule__StreamEvent__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8097:1: ( ( ( rule__StreamEvent__Group_1_2__0 )* ) )
            // InternalMoniLog.g:8098:1: ( ( rule__StreamEvent__Group_1_2__0 )* )
            {
            // InternalMoniLog.g:8098:1: ( ( rule__StreamEvent__Group_1_2__0 )* )
            // InternalMoniLog.g:8099:2: ( rule__StreamEvent__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getGroup_1_2()); 
            }
            // InternalMoniLog.g:8100:2: ( rule__StreamEvent__Group_1_2__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==42) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalMoniLog.g:8100:3: rule__StreamEvent__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__StreamEvent__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__2__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1__3"
    // InternalMoniLog.g:8108:1: rule__StreamEvent__Group_1__3 : rule__StreamEvent__Group_1__3__Impl ;
    public final void rule__StreamEvent__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8112:1: ( rule__StreamEvent__Group_1__3__Impl )
            // InternalMoniLog.g:8113:2: rule__StreamEvent__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__3"


    // $ANTLR start "rule__StreamEvent__Group_1__3__Impl"
    // InternalMoniLog.g:8119:1: rule__StreamEvent__Group_1__3__Impl : ( ')' ) ;
    public final void rule__StreamEvent__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8123:1: ( ( ')' ) )
            // InternalMoniLog.g:8124:1: ( ')' )
            {
            // InternalMoniLog.g:8124:1: ( ')' )
            // InternalMoniLog.g:8125:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1__3__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1_2__0"
    // InternalMoniLog.g:8135:1: rule__StreamEvent__Group_1_2__0 : rule__StreamEvent__Group_1_2__0__Impl rule__StreamEvent__Group_1_2__1 ;
    public final void rule__StreamEvent__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8139:1: ( rule__StreamEvent__Group_1_2__0__Impl rule__StreamEvent__Group_1_2__1 )
            // InternalMoniLog.g:8140:2: rule__StreamEvent__Group_1_2__0__Impl rule__StreamEvent__Group_1_2__1
            {
            pushFollow(FOLLOW_3);
            rule__StreamEvent__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1_2__0"


    // $ANTLR start "rule__StreamEvent__Group_1_2__0__Impl"
    // InternalMoniLog.g:8147:1: rule__StreamEvent__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__StreamEvent__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8151:1: ( ( ',' ) )
            // InternalMoniLog.g:8152:1: ( ',' )
            {
            // InternalMoniLog.g:8152:1: ( ',' )
            // InternalMoniLog.g:8153:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1_2__0__Impl"


    // $ANTLR start "rule__StreamEvent__Group_1_2__1"
    // InternalMoniLog.g:8162:1: rule__StreamEvent__Group_1_2__1 : rule__StreamEvent__Group_1_2__1__Impl ;
    public final void rule__StreamEvent__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8166:1: ( rule__StreamEvent__Group_1_2__1__Impl )
            // InternalMoniLog.g:8167:2: rule__StreamEvent__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1_2__1"


    // $ANTLR start "rule__StreamEvent__Group_1_2__1__Impl"
    // InternalMoniLog.g:8173:1: rule__StreamEvent__Group_1_2__1__Impl : ( ( rule__StreamEvent__ValuesAssignment_1_2_1 ) ) ;
    public final void rule__StreamEvent__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8177:1: ( ( ( rule__StreamEvent__ValuesAssignment_1_2_1 ) ) )
            // InternalMoniLog.g:8178:1: ( ( rule__StreamEvent__ValuesAssignment_1_2_1 ) )
            {
            // InternalMoniLog.g:8178:1: ( ( rule__StreamEvent__ValuesAssignment_1_2_1 ) )
            // InternalMoniLog.g:8179:2: ( rule__StreamEvent__ValuesAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getValuesAssignment_1_2_1()); 
            }
            // InternalMoniLog.g:8180:2: ( rule__StreamEvent__ValuesAssignment_1_2_1 )
            // InternalMoniLog.g:8180:3: rule__StreamEvent__ValuesAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__StreamEvent__ValuesAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getValuesAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__Group_1_2__1__Impl"


    // $ANTLR start "rule__PropertyValue__Group_0__0"
    // InternalMoniLog.g:8189:1: rule__PropertyValue__Group_0__0 : rule__PropertyValue__Group_0__0__Impl rule__PropertyValue__Group_0__1 ;
    public final void rule__PropertyValue__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8193:1: ( rule__PropertyValue__Group_0__0__Impl rule__PropertyValue__Group_0__1 )
            // InternalMoniLog.g:8194:2: rule__PropertyValue__Group_0__0__Impl rule__PropertyValue__Group_0__1
            {
            pushFollow(FOLLOW_52);
            rule__PropertyValue__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PropertyValue__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0__0"


    // $ANTLR start "rule__PropertyValue__Group_0__0__Impl"
    // InternalMoniLog.g:8201:1: rule__PropertyValue__Group_0__0__Impl : ( ( rule__PropertyValue__IdAssignment_0_0 ) ) ;
    public final void rule__PropertyValue__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8205:1: ( ( ( rule__PropertyValue__IdAssignment_0_0 ) ) )
            // InternalMoniLog.g:8206:1: ( ( rule__PropertyValue__IdAssignment_0_0 ) )
            {
            // InternalMoniLog.g:8206:1: ( ( rule__PropertyValue__IdAssignment_0_0 ) )
            // InternalMoniLog.g:8207:2: ( rule__PropertyValue__IdAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getIdAssignment_0_0()); 
            }
            // InternalMoniLog.g:8208:2: ( rule__PropertyValue__IdAssignment_0_0 )
            // InternalMoniLog.g:8208:3: rule__PropertyValue__IdAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__PropertyValue__IdAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getIdAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0__0__Impl"


    // $ANTLR start "rule__PropertyValue__Group_0__1"
    // InternalMoniLog.g:8216:1: rule__PropertyValue__Group_0__1 : rule__PropertyValue__Group_0__1__Impl ;
    public final void rule__PropertyValue__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8220:1: ( rule__PropertyValue__Group_0__1__Impl )
            // InternalMoniLog.g:8221:2: rule__PropertyValue__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PropertyValue__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0__1"


    // $ANTLR start "rule__PropertyValue__Group_0__1__Impl"
    // InternalMoniLog.g:8227:1: rule__PropertyValue__Group_0__1__Impl : ( ( rule__PropertyValue__Group_0_1__0 )? ) ;
    public final void rule__PropertyValue__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8231:1: ( ( ( rule__PropertyValue__Group_0_1__0 )? ) )
            // InternalMoniLog.g:8232:1: ( ( rule__PropertyValue__Group_0_1__0 )? )
            {
            // InternalMoniLog.g:8232:1: ( ( rule__PropertyValue__Group_0_1__0 )? )
            // InternalMoniLog.g:8233:2: ( rule__PropertyValue__Group_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getGroup_0_1()); 
            }
            // InternalMoniLog.g:8234:2: ( rule__PropertyValue__Group_0_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==70) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalMoniLog.g:8234:3: rule__PropertyValue__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PropertyValue__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getGroup_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0__1__Impl"


    // $ANTLR start "rule__PropertyValue__Group_0_1__0"
    // InternalMoniLog.g:8243:1: rule__PropertyValue__Group_0_1__0 : rule__PropertyValue__Group_0_1__0__Impl rule__PropertyValue__Group_0_1__1 ;
    public final void rule__PropertyValue__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8247:1: ( rule__PropertyValue__Group_0_1__0__Impl rule__PropertyValue__Group_0_1__1 )
            // InternalMoniLog.g:8248:2: rule__PropertyValue__Group_0_1__0__Impl rule__PropertyValue__Group_0_1__1
            {
            pushFollow(FOLLOW_47);
            rule__PropertyValue__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PropertyValue__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0_1__0"


    // $ANTLR start "rule__PropertyValue__Group_0_1__0__Impl"
    // InternalMoniLog.g:8255:1: rule__PropertyValue__Group_0_1__0__Impl : ( '=' ) ;
    public final void rule__PropertyValue__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8259:1: ( ( '=' ) )
            // InternalMoniLog.g:8260:1: ( '=' )
            {
            // InternalMoniLog.g:8260:1: ( '=' )
            // InternalMoniLog.g:8261:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getEqualsSignKeyword_0_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getEqualsSignKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0_1__0__Impl"


    // $ANTLR start "rule__PropertyValue__Group_0_1__1"
    // InternalMoniLog.g:8270:1: rule__PropertyValue__Group_0_1__1 : rule__PropertyValue__Group_0_1__1__Impl ;
    public final void rule__PropertyValue__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8274:1: ( rule__PropertyValue__Group_0_1__1__Impl )
            // InternalMoniLog.g:8275:2: rule__PropertyValue__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PropertyValue__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0_1__1"


    // $ANTLR start "rule__PropertyValue__Group_0_1__1__Impl"
    // InternalMoniLog.g:8281:1: rule__PropertyValue__Group_0_1__1__Impl : ( ( rule__PropertyValue__ValueAssignment_0_1_1 ) ) ;
    public final void rule__PropertyValue__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8285:1: ( ( ( rule__PropertyValue__ValueAssignment_0_1_1 ) ) )
            // InternalMoniLog.g:8286:1: ( ( rule__PropertyValue__ValueAssignment_0_1_1 ) )
            {
            // InternalMoniLog.g:8286:1: ( ( rule__PropertyValue__ValueAssignment_0_1_1 ) )
            // InternalMoniLog.g:8287:2: ( rule__PropertyValue__ValueAssignment_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getValueAssignment_0_1_1()); 
            }
            // InternalMoniLog.g:8288:2: ( rule__PropertyValue__ValueAssignment_0_1_1 )
            // InternalMoniLog.g:8288:3: rule__PropertyValue__ValueAssignment_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PropertyValue__ValueAssignment_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getValueAssignment_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__Group_0_1__1__Impl"


    // $ANTLR start "rule__MoniLogExpression__Group__0"
    // InternalMoniLog.g:8297:1: rule__MoniLogExpression__Group__0 : rule__MoniLogExpression__Group__0__Impl rule__MoniLogExpression__Group__1 ;
    public final void rule__MoniLogExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8301:1: ( rule__MoniLogExpression__Group__0__Impl rule__MoniLogExpression__Group__1 )
            // InternalMoniLog.g:8302:2: rule__MoniLogExpression__Group__0__Impl rule__MoniLogExpression__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__MoniLogExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__0"


    // $ANTLR start "rule__MoniLogExpression__Group__0__Impl"
    // InternalMoniLog.g:8309:1: rule__MoniLogExpression__Group__0__Impl : ( '{' ) ;
    public final void rule__MoniLogExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8313:1: ( ( '{' ) )
            // InternalMoniLog.g:8314:1: ( '{' )
            {
            // InternalMoniLog.g:8314:1: ( '{' )
            // InternalMoniLog.g:8315:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__0__Impl"


    // $ANTLR start "rule__MoniLogExpression__Group__1"
    // InternalMoniLog.g:8324:1: rule__MoniLogExpression__Group__1 : rule__MoniLogExpression__Group__1__Impl rule__MoniLogExpression__Group__2 ;
    public final void rule__MoniLogExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8328:1: ( rule__MoniLogExpression__Group__1__Impl rule__MoniLogExpression__Group__2 )
            // InternalMoniLog.g:8329:2: rule__MoniLogExpression__Group__1__Impl rule__MoniLogExpression__Group__2
            {
            pushFollow(FOLLOW_15);
            rule__MoniLogExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MoniLogExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__1"


    // $ANTLR start "rule__MoniLogExpression__Group__1__Impl"
    // InternalMoniLog.g:8336:1: rule__MoniLogExpression__Group__1__Impl : ( ( rule__MoniLogExpression__ExpressionAssignment_1 ) ) ;
    public final void rule__MoniLogExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8340:1: ( ( ( rule__MoniLogExpression__ExpressionAssignment_1 ) ) )
            // InternalMoniLog.g:8341:1: ( ( rule__MoniLogExpression__ExpressionAssignment_1 ) )
            {
            // InternalMoniLog.g:8341:1: ( ( rule__MoniLogExpression__ExpressionAssignment_1 ) )
            // InternalMoniLog.g:8342:2: ( rule__MoniLogExpression__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionAccess().getExpressionAssignment_1()); 
            }
            // InternalMoniLog.g:8343:2: ( rule__MoniLogExpression__ExpressionAssignment_1 )
            // InternalMoniLog.g:8343:3: rule__MoniLogExpression__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogExpression__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__1__Impl"


    // $ANTLR start "rule__MoniLogExpression__Group__2"
    // InternalMoniLog.g:8351:1: rule__MoniLogExpression__Group__2 : rule__MoniLogExpression__Group__2__Impl ;
    public final void rule__MoniLogExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8355:1: ( rule__MoniLogExpression__Group__2__Impl )
            // InternalMoniLog.g:8356:2: rule__MoniLogExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MoniLogExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__2"


    // $ANTLR start "rule__MoniLogExpression__Group__2__Impl"
    // InternalMoniLog.g:8362:1: rule__MoniLogExpression__Group__2__Impl : ( '}' ) ;
    public final void rule__MoniLogExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8366:1: ( ( '}' ) )
            // InternalMoniLog.g:8367:1: ( '}' )
            {
            // InternalMoniLog.g:8367:1: ( '}' )
            // InternalMoniLog.g:8368:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__Group__2__Impl"


    // $ANTLR start "rule__LanguageValue__Group__0"
    // InternalMoniLog.g:8378:1: rule__LanguageValue__Group__0 : rule__LanguageValue__Group__0__Impl rule__LanguageValue__Group__1 ;
    public final void rule__LanguageValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8382:1: ( rule__LanguageValue__Group__0__Impl rule__LanguageValue__Group__1 )
            // InternalMoniLog.g:8383:2: rule__LanguageValue__Group__0__Impl rule__LanguageValue__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__LanguageValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__0"


    // $ANTLR start "rule__LanguageValue__Group__0__Impl"
    // InternalMoniLog.g:8390:1: rule__LanguageValue__Group__0__Impl : ( ( rule__LanguageValue__LanguageIdAssignment_0 ) ) ;
    public final void rule__LanguageValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8394:1: ( ( ( rule__LanguageValue__LanguageIdAssignment_0 ) ) )
            // InternalMoniLog.g:8395:1: ( ( rule__LanguageValue__LanguageIdAssignment_0 ) )
            {
            // InternalMoniLog.g:8395:1: ( ( rule__LanguageValue__LanguageIdAssignment_0 ) )
            // InternalMoniLog.g:8396:2: ( rule__LanguageValue__LanguageIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getLanguageIdAssignment_0()); 
            }
            // InternalMoniLog.g:8397:2: ( rule__LanguageValue__LanguageIdAssignment_0 )
            // InternalMoniLog.g:8397:3: rule__LanguageValue__LanguageIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LanguageValue__LanguageIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getLanguageIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__0__Impl"


    // $ANTLR start "rule__LanguageValue__Group__1"
    // InternalMoniLog.g:8405:1: rule__LanguageValue__Group__1 : rule__LanguageValue__Group__1__Impl rule__LanguageValue__Group__2 ;
    public final void rule__LanguageValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8409:1: ( rule__LanguageValue__Group__1__Impl rule__LanguageValue__Group__2 )
            // InternalMoniLog.g:8410:2: rule__LanguageValue__Group__1__Impl rule__LanguageValue__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__LanguageValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__1"


    // $ANTLR start "rule__LanguageValue__Group__1__Impl"
    // InternalMoniLog.g:8417:1: rule__LanguageValue__Group__1__Impl : ( '(' ) ;
    public final void rule__LanguageValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8421:1: ( ( '(' ) )
            // InternalMoniLog.g:8422:1: ( '(' )
            {
            // InternalMoniLog.g:8422:1: ( '(' )
            // InternalMoniLog.g:8423:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__1__Impl"


    // $ANTLR start "rule__LanguageValue__Group__2"
    // InternalMoniLog.g:8432:1: rule__LanguageValue__Group__2 : rule__LanguageValue__Group__2__Impl rule__LanguageValue__Group__3 ;
    public final void rule__LanguageValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8436:1: ( rule__LanguageValue__Group__2__Impl rule__LanguageValue__Group__3 )
            // InternalMoniLog.g:8437:2: rule__LanguageValue__Group__2__Impl rule__LanguageValue__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__LanguageValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageValue__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__2"


    // $ANTLR start "rule__LanguageValue__Group__2__Impl"
    // InternalMoniLog.g:8444:1: rule__LanguageValue__Group__2__Impl : ( ( rule__LanguageValue__ValueAssignment_2 ) ) ;
    public final void rule__LanguageValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8448:1: ( ( ( rule__LanguageValue__ValueAssignment_2 ) ) )
            // InternalMoniLog.g:8449:1: ( ( rule__LanguageValue__ValueAssignment_2 ) )
            {
            // InternalMoniLog.g:8449:1: ( ( rule__LanguageValue__ValueAssignment_2 ) )
            // InternalMoniLog.g:8450:2: ( rule__LanguageValue__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getValueAssignment_2()); 
            }
            // InternalMoniLog.g:8451:2: ( rule__LanguageValue__ValueAssignment_2 )
            // InternalMoniLog.g:8451:3: rule__LanguageValue__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__LanguageValue__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__2__Impl"


    // $ANTLR start "rule__LanguageValue__Group__3"
    // InternalMoniLog.g:8459:1: rule__LanguageValue__Group__3 : rule__LanguageValue__Group__3__Impl ;
    public final void rule__LanguageValue__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8463:1: ( rule__LanguageValue__Group__3__Impl )
            // InternalMoniLog.g:8464:2: rule__LanguageValue__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LanguageValue__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__3"


    // $ANTLR start "rule__LanguageValue__Group__3__Impl"
    // InternalMoniLog.g:8470:1: rule__LanguageValue__Group__3__Impl : ( ')' ) ;
    public final void rule__LanguageValue__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8474:1: ( ( ')' ) )
            // InternalMoniLog.g:8475:1: ( ')' )
            {
            // InternalMoniLog.g:8475:1: ( ')' )
            // InternalMoniLog.g:8476:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__Group__3__Impl"


    // $ANTLR start "rule__LanguageCall__Group__0"
    // InternalMoniLog.g:8486:1: rule__LanguageCall__Group__0 : rule__LanguageCall__Group__0__Impl rule__LanguageCall__Group__1 ;
    public final void rule__LanguageCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8490:1: ( rule__LanguageCall__Group__0__Impl rule__LanguageCall__Group__1 )
            // InternalMoniLog.g:8491:2: rule__LanguageCall__Group__0__Impl rule__LanguageCall__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__LanguageCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__0"


    // $ANTLR start "rule__LanguageCall__Group__0__Impl"
    // InternalMoniLog.g:8498:1: rule__LanguageCall__Group__0__Impl : ( ( rule__LanguageCall__FileAssignment_0 ) ) ;
    public final void rule__LanguageCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8502:1: ( ( ( rule__LanguageCall__FileAssignment_0 ) ) )
            // InternalMoniLog.g:8503:1: ( ( rule__LanguageCall__FileAssignment_0 ) )
            {
            // InternalMoniLog.g:8503:1: ( ( rule__LanguageCall__FileAssignment_0 ) )
            // InternalMoniLog.g:8504:2: ( rule__LanguageCall__FileAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFileAssignment_0()); 
            }
            // InternalMoniLog.g:8505:2: ( rule__LanguageCall__FileAssignment_0 )
            // InternalMoniLog.g:8505:3: rule__LanguageCall__FileAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__FileAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFileAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__0__Impl"


    // $ANTLR start "rule__LanguageCall__Group__1"
    // InternalMoniLog.g:8513:1: rule__LanguageCall__Group__1 : rule__LanguageCall__Group__1__Impl rule__LanguageCall__Group__2 ;
    public final void rule__LanguageCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8517:1: ( rule__LanguageCall__Group__1__Impl rule__LanguageCall__Group__2 )
            // InternalMoniLog.g:8518:2: rule__LanguageCall__Group__1__Impl rule__LanguageCall__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__LanguageCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__1"


    // $ANTLR start "rule__LanguageCall__Group__1__Impl"
    // InternalMoniLog.g:8525:1: rule__LanguageCall__Group__1__Impl : ( '.' ) ;
    public final void rule__LanguageCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8529:1: ( ( '.' ) )
            // InternalMoniLog.g:8530:1: ( '.' )
            {
            // InternalMoniLog.g:8530:1: ( '.' )
            // InternalMoniLog.g:8531:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFullStopKeyword_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__1__Impl"


    // $ANTLR start "rule__LanguageCall__Group__2"
    // InternalMoniLog.g:8540:1: rule__LanguageCall__Group__2 : rule__LanguageCall__Group__2__Impl rule__LanguageCall__Group__3 ;
    public final void rule__LanguageCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8544:1: ( rule__LanguageCall__Group__2__Impl rule__LanguageCall__Group__3 )
            // InternalMoniLog.g:8545:2: rule__LanguageCall__Group__2__Impl rule__LanguageCall__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__LanguageCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__2"


    // $ANTLR start "rule__LanguageCall__Group__2__Impl"
    // InternalMoniLog.g:8552:1: rule__LanguageCall__Group__2__Impl : ( ( rule__LanguageCall__FqnAssignment_2 ) ) ;
    public final void rule__LanguageCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8556:1: ( ( ( rule__LanguageCall__FqnAssignment_2 ) ) )
            // InternalMoniLog.g:8557:1: ( ( rule__LanguageCall__FqnAssignment_2 ) )
            {
            // InternalMoniLog.g:8557:1: ( ( rule__LanguageCall__FqnAssignment_2 ) )
            // InternalMoniLog.g:8558:2: ( rule__LanguageCall__FqnAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFqnAssignment_2()); 
            }
            // InternalMoniLog.g:8559:2: ( rule__LanguageCall__FqnAssignment_2 )
            // InternalMoniLog.g:8559:3: rule__LanguageCall__FqnAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__FqnAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFqnAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__2__Impl"


    // $ANTLR start "rule__LanguageCall__Group__3"
    // InternalMoniLog.g:8567:1: rule__LanguageCall__Group__3 : rule__LanguageCall__Group__3__Impl ;
    public final void rule__LanguageCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8571:1: ( rule__LanguageCall__Group__3__Impl )
            // InternalMoniLog.g:8572:2: rule__LanguageCall__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__3"


    // $ANTLR start "rule__LanguageCall__Group__3__Impl"
    // InternalMoniLog.g:8578:1: rule__LanguageCall__Group__3__Impl : ( ( rule__LanguageCall__Group_3__0 )? ) ;
    public final void rule__LanguageCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8582:1: ( ( ( rule__LanguageCall__Group_3__0 )? ) )
            // InternalMoniLog.g:8583:1: ( ( rule__LanguageCall__Group_3__0 )? )
            {
            // InternalMoniLog.g:8583:1: ( ( rule__LanguageCall__Group_3__0 )? )
            // InternalMoniLog.g:8584:2: ( rule__LanguageCall__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getGroup_3()); 
            }
            // InternalMoniLog.g:8585:2: ( rule__LanguageCall__Group_3__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==39) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalMoniLog.g:8585:3: rule__LanguageCall__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LanguageCall__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group__3__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3__0"
    // InternalMoniLog.g:8594:1: rule__LanguageCall__Group_3__0 : rule__LanguageCall__Group_3__0__Impl rule__LanguageCall__Group_3__1 ;
    public final void rule__LanguageCall__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8598:1: ( rule__LanguageCall__Group_3__0__Impl rule__LanguageCall__Group_3__1 )
            // InternalMoniLog.g:8599:2: rule__LanguageCall__Group_3__0__Impl rule__LanguageCall__Group_3__1
            {
            pushFollow(FOLLOW_47);
            rule__LanguageCall__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__0"


    // $ANTLR start "rule__LanguageCall__Group_3__0__Impl"
    // InternalMoniLog.g:8606:1: rule__LanguageCall__Group_3__0__Impl : ( '(' ) ;
    public final void rule__LanguageCall__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8610:1: ( ( '(' ) )
            // InternalMoniLog.g:8611:1: ( '(' )
            {
            // InternalMoniLog.g:8611:1: ( '(' )
            // InternalMoniLog.g:8612:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__0__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3__1"
    // InternalMoniLog.g:8621:1: rule__LanguageCall__Group_3__1 : rule__LanguageCall__Group_3__1__Impl rule__LanguageCall__Group_3__2 ;
    public final void rule__LanguageCall__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8625:1: ( rule__LanguageCall__Group_3__1__Impl rule__LanguageCall__Group_3__2 )
            // InternalMoniLog.g:8626:2: rule__LanguageCall__Group_3__1__Impl rule__LanguageCall__Group_3__2
            {
            pushFollow(FOLLOW_48);
            rule__LanguageCall__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__1"


    // $ANTLR start "rule__LanguageCall__Group_3__1__Impl"
    // InternalMoniLog.g:8633:1: rule__LanguageCall__Group_3__1__Impl : ( ( rule__LanguageCall__ArgsAssignment_3_1 ) ) ;
    public final void rule__LanguageCall__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8637:1: ( ( ( rule__LanguageCall__ArgsAssignment_3_1 ) ) )
            // InternalMoniLog.g:8638:1: ( ( rule__LanguageCall__ArgsAssignment_3_1 ) )
            {
            // InternalMoniLog.g:8638:1: ( ( rule__LanguageCall__ArgsAssignment_3_1 ) )
            // InternalMoniLog.g:8639:2: ( rule__LanguageCall__ArgsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getArgsAssignment_3_1()); 
            }
            // InternalMoniLog.g:8640:2: ( rule__LanguageCall__ArgsAssignment_3_1 )
            // InternalMoniLog.g:8640:3: rule__LanguageCall__ArgsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__ArgsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getArgsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__1__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3__2"
    // InternalMoniLog.g:8648:1: rule__LanguageCall__Group_3__2 : rule__LanguageCall__Group_3__2__Impl rule__LanguageCall__Group_3__3 ;
    public final void rule__LanguageCall__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8652:1: ( rule__LanguageCall__Group_3__2__Impl rule__LanguageCall__Group_3__3 )
            // InternalMoniLog.g:8653:2: rule__LanguageCall__Group_3__2__Impl rule__LanguageCall__Group_3__3
            {
            pushFollow(FOLLOW_48);
            rule__LanguageCall__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__2"


    // $ANTLR start "rule__LanguageCall__Group_3__2__Impl"
    // InternalMoniLog.g:8660:1: rule__LanguageCall__Group_3__2__Impl : ( ( rule__LanguageCall__Group_3_2__0 )* ) ;
    public final void rule__LanguageCall__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8664:1: ( ( ( rule__LanguageCall__Group_3_2__0 )* ) )
            // InternalMoniLog.g:8665:1: ( ( rule__LanguageCall__Group_3_2__0 )* )
            {
            // InternalMoniLog.g:8665:1: ( ( rule__LanguageCall__Group_3_2__0 )* )
            // InternalMoniLog.g:8666:2: ( rule__LanguageCall__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getGroup_3_2()); 
            }
            // InternalMoniLog.g:8667:2: ( rule__LanguageCall__Group_3_2__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==42) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalMoniLog.g:8667:3: rule__LanguageCall__Group_3_2__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__LanguageCall__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__2__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3__3"
    // InternalMoniLog.g:8675:1: rule__LanguageCall__Group_3__3 : rule__LanguageCall__Group_3__3__Impl ;
    public final void rule__LanguageCall__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8679:1: ( rule__LanguageCall__Group_3__3__Impl )
            // InternalMoniLog.g:8680:2: rule__LanguageCall__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__3"


    // $ANTLR start "rule__LanguageCall__Group_3__3__Impl"
    // InternalMoniLog.g:8686:1: rule__LanguageCall__Group_3__3__Impl : ( ')' ) ;
    public final void rule__LanguageCall__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8690:1: ( ( ')' ) )
            // InternalMoniLog.g:8691:1: ( ')' )
            {
            // InternalMoniLog.g:8691:1: ( ')' )
            // InternalMoniLog.g:8692:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getRightParenthesisKeyword_3_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getRightParenthesisKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3__3__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3_2__0"
    // InternalMoniLog.g:8702:1: rule__LanguageCall__Group_3_2__0 : rule__LanguageCall__Group_3_2__0__Impl rule__LanguageCall__Group_3_2__1 ;
    public final void rule__LanguageCall__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8706:1: ( rule__LanguageCall__Group_3_2__0__Impl rule__LanguageCall__Group_3_2__1 )
            // InternalMoniLog.g:8707:2: rule__LanguageCall__Group_3_2__0__Impl rule__LanguageCall__Group_3_2__1
            {
            pushFollow(FOLLOW_47);
            rule__LanguageCall__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3_2__0"


    // $ANTLR start "rule__LanguageCall__Group_3_2__0__Impl"
    // InternalMoniLog.g:8714:1: rule__LanguageCall__Group_3_2__0__Impl : ( ',' ) ;
    public final void rule__LanguageCall__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8718:1: ( ( ',' ) )
            // InternalMoniLog.g:8719:1: ( ',' )
            {
            // InternalMoniLog.g:8719:1: ( ',' )
            // InternalMoniLog.g:8720:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getCommaKeyword_3_2_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getCommaKeyword_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3_2__0__Impl"


    // $ANTLR start "rule__LanguageCall__Group_3_2__1"
    // InternalMoniLog.g:8729:1: rule__LanguageCall__Group_3_2__1 : rule__LanguageCall__Group_3_2__1__Impl ;
    public final void rule__LanguageCall__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8733:1: ( rule__LanguageCall__Group_3_2__1__Impl )
            // InternalMoniLog.g:8734:2: rule__LanguageCall__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__Group_3_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3_2__1"


    // $ANTLR start "rule__LanguageCall__Group_3_2__1__Impl"
    // InternalMoniLog.g:8740:1: rule__LanguageCall__Group_3_2__1__Impl : ( ( rule__LanguageCall__ArgsAssignment_3_2_1 ) ) ;
    public final void rule__LanguageCall__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8744:1: ( ( ( rule__LanguageCall__ArgsAssignment_3_2_1 ) ) )
            // InternalMoniLog.g:8745:1: ( ( rule__LanguageCall__ArgsAssignment_3_2_1 ) )
            {
            // InternalMoniLog.g:8745:1: ( ( rule__LanguageCall__ArgsAssignment_3_2_1 ) )
            // InternalMoniLog.g:8746:2: ( rule__LanguageCall__ArgsAssignment_3_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getArgsAssignment_3_2_1()); 
            }
            // InternalMoniLog.g:8747:2: ( rule__LanguageCall__ArgsAssignment_3_2_1 )
            // InternalMoniLog.g:8747:3: rule__LanguageCall__ArgsAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LanguageCall__ArgsAssignment_3_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getArgsAssignment_3_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__Group_3_2__1__Impl"


    // $ANTLR start "rule__ContractedIf__Group__0"
    // InternalMoniLog.g:8756:1: rule__ContractedIf__Group__0 : rule__ContractedIf__Group__0__Impl rule__ContractedIf__Group__1 ;
    public final void rule__ContractedIf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8760:1: ( rule__ContractedIf__Group__0__Impl rule__ContractedIf__Group__1 )
            // InternalMoniLog.g:8761:2: rule__ContractedIf__Group__0__Impl rule__ContractedIf__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__ContractedIf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group__0"


    // $ANTLR start "rule__ContractedIf__Group__0__Impl"
    // InternalMoniLog.g:8768:1: rule__ContractedIf__Group__0__Impl : ( ruleOr ) ;
    public final void rule__ContractedIf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8772:1: ( ( ruleOr ) )
            // InternalMoniLog.g:8773:1: ( ruleOr )
            {
            // InternalMoniLog.g:8773:1: ( ruleOr )
            // InternalMoniLog.g:8774:2: ruleOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getOrParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getOrParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group__0__Impl"


    // $ANTLR start "rule__ContractedIf__Group__1"
    // InternalMoniLog.g:8783:1: rule__ContractedIf__Group__1 : rule__ContractedIf__Group__1__Impl ;
    public final void rule__ContractedIf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8787:1: ( rule__ContractedIf__Group__1__Impl )
            // InternalMoniLog.g:8788:2: rule__ContractedIf__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group__1"


    // $ANTLR start "rule__ContractedIf__Group__1__Impl"
    // InternalMoniLog.g:8794:1: rule__ContractedIf__Group__1__Impl : ( ( rule__ContractedIf__Group_1__0 )* ) ;
    public final void rule__ContractedIf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8798:1: ( ( ( rule__ContractedIf__Group_1__0 )* ) )
            // InternalMoniLog.g:8799:1: ( ( rule__ContractedIf__Group_1__0 )* )
            {
            // InternalMoniLog.g:8799:1: ( ( rule__ContractedIf__Group_1__0 )* )
            // InternalMoniLog.g:8800:2: ( rule__ContractedIf__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:8801:2: ( rule__ContractedIf__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==71) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalMoniLog.g:8801:3: rule__ContractedIf__Group_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__ContractedIf__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group__1__Impl"


    // $ANTLR start "rule__ContractedIf__Group_1__0"
    // InternalMoniLog.g:8810:1: rule__ContractedIf__Group_1__0 : rule__ContractedIf__Group_1__0__Impl rule__ContractedIf__Group_1__1 ;
    public final void rule__ContractedIf__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8814:1: ( rule__ContractedIf__Group_1__0__Impl rule__ContractedIf__Group_1__1 )
            // InternalMoniLog.g:8815:2: rule__ContractedIf__Group_1__0__Impl rule__ContractedIf__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__ContractedIf__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__0"


    // $ANTLR start "rule__ContractedIf__Group_1__0__Impl"
    // InternalMoniLog.g:8822:1: rule__ContractedIf__Group_1__0__Impl : ( () ) ;
    public final void rule__ContractedIf__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8826:1: ( ( () ) )
            // InternalMoniLog.g:8827:1: ( () )
            {
            // InternalMoniLog.g:8827:1: ( () )
            // InternalMoniLog.g:8828:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getContractedIfConditionAction_1_0()); 
            }
            // InternalMoniLog.g:8829:2: ()
            // InternalMoniLog.g:8829:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getContractedIfConditionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__0__Impl"


    // $ANTLR start "rule__ContractedIf__Group_1__1"
    // InternalMoniLog.g:8837:1: rule__ContractedIf__Group_1__1 : rule__ContractedIf__Group_1__1__Impl rule__ContractedIf__Group_1__2 ;
    public final void rule__ContractedIf__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8841:1: ( rule__ContractedIf__Group_1__1__Impl rule__ContractedIf__Group_1__2 )
            // InternalMoniLog.g:8842:2: rule__ContractedIf__Group_1__1__Impl rule__ContractedIf__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__ContractedIf__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__1"


    // $ANTLR start "rule__ContractedIf__Group_1__1__Impl"
    // InternalMoniLog.g:8849:1: rule__ContractedIf__Group_1__1__Impl : ( '?' ) ;
    public final void rule__ContractedIf__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8853:1: ( ( '?' ) )
            // InternalMoniLog.g:8854:1: ( '?' )
            {
            // InternalMoniLog.g:8854:1: ( '?' )
            // InternalMoniLog.g:8855:2: '?'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getQuestionMarkKeyword_1_1()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getQuestionMarkKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__1__Impl"


    // $ANTLR start "rule__ContractedIf__Group_1__2"
    // InternalMoniLog.g:8864:1: rule__ContractedIf__Group_1__2 : rule__ContractedIf__Group_1__2__Impl rule__ContractedIf__Group_1__3 ;
    public final void rule__ContractedIf__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8868:1: ( rule__ContractedIf__Group_1__2__Impl rule__ContractedIf__Group_1__3 )
            // InternalMoniLog.g:8869:2: rule__ContractedIf__Group_1__2__Impl rule__ContractedIf__Group_1__3
            {
            pushFollow(FOLLOW_57);
            rule__ContractedIf__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__2"


    // $ANTLR start "rule__ContractedIf__Group_1__2__Impl"
    // InternalMoniLog.g:8876:1: rule__ContractedIf__Group_1__2__Impl : ( ( rule__ContractedIf__ThenAssignment_1_2 ) ) ;
    public final void rule__ContractedIf__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8880:1: ( ( ( rule__ContractedIf__ThenAssignment_1_2 ) ) )
            // InternalMoniLog.g:8881:1: ( ( rule__ContractedIf__ThenAssignment_1_2 ) )
            {
            // InternalMoniLog.g:8881:1: ( ( rule__ContractedIf__ThenAssignment_1_2 ) )
            // InternalMoniLog.g:8882:2: ( rule__ContractedIf__ThenAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getThenAssignment_1_2()); 
            }
            // InternalMoniLog.g:8883:2: ( rule__ContractedIf__ThenAssignment_1_2 )
            // InternalMoniLog.g:8883:3: rule__ContractedIf__ThenAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ContractedIf__ThenAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getThenAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__2__Impl"


    // $ANTLR start "rule__ContractedIf__Group_1__3"
    // InternalMoniLog.g:8891:1: rule__ContractedIf__Group_1__3 : rule__ContractedIf__Group_1__3__Impl rule__ContractedIf__Group_1__4 ;
    public final void rule__ContractedIf__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8895:1: ( rule__ContractedIf__Group_1__3__Impl rule__ContractedIf__Group_1__4 )
            // InternalMoniLog.g:8896:2: rule__ContractedIf__Group_1__3__Impl rule__ContractedIf__Group_1__4
            {
            pushFollow(FOLLOW_53);
            rule__ContractedIf__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__3"


    // $ANTLR start "rule__ContractedIf__Group_1__3__Impl"
    // InternalMoniLog.g:8903:1: rule__ContractedIf__Group_1__3__Impl : ( ':' ) ;
    public final void rule__ContractedIf__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8907:1: ( ( ':' ) )
            // InternalMoniLog.g:8908:1: ( ':' )
            {
            // InternalMoniLog.g:8908:1: ( ':' )
            // InternalMoniLog.g:8909:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getColonKeyword_1_3()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getColonKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__3__Impl"


    // $ANTLR start "rule__ContractedIf__Group_1__4"
    // InternalMoniLog.g:8918:1: rule__ContractedIf__Group_1__4 : rule__ContractedIf__Group_1__4__Impl ;
    public final void rule__ContractedIf__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8922:1: ( rule__ContractedIf__Group_1__4__Impl )
            // InternalMoniLog.g:8923:2: rule__ContractedIf__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ContractedIf__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__4"


    // $ANTLR start "rule__ContractedIf__Group_1__4__Impl"
    // InternalMoniLog.g:8929:1: rule__ContractedIf__Group_1__4__Impl : ( ( rule__ContractedIf__ElseAssignment_1_4 ) ) ;
    public final void rule__ContractedIf__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8933:1: ( ( ( rule__ContractedIf__ElseAssignment_1_4 ) ) )
            // InternalMoniLog.g:8934:1: ( ( rule__ContractedIf__ElseAssignment_1_4 ) )
            {
            // InternalMoniLog.g:8934:1: ( ( rule__ContractedIf__ElseAssignment_1_4 ) )
            // InternalMoniLog.g:8935:2: ( rule__ContractedIf__ElseAssignment_1_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getElseAssignment_1_4()); 
            }
            // InternalMoniLog.g:8936:2: ( rule__ContractedIf__ElseAssignment_1_4 )
            // InternalMoniLog.g:8936:3: rule__ContractedIf__ElseAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__ContractedIf__ElseAssignment_1_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getElseAssignment_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__Group_1__4__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalMoniLog.g:8945:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8949:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalMoniLog.g:8950:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__Or__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalMoniLog.g:8957:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8961:1: ( ( ruleAnd ) )
            // InternalMoniLog.g:8962:1: ( ruleAnd )
            {
            // InternalMoniLog.g:8962:1: ( ruleAnd )
            // InternalMoniLog.g:8963:2: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalMoniLog.g:8972:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8976:1: ( rule__Or__Group__1__Impl )
            // InternalMoniLog.g:8977:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalMoniLog.g:8983:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:8987:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalMoniLog.g:8988:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalMoniLog.g:8988:1: ( ( rule__Or__Group_1__0 )* )
            // InternalMoniLog.g:8989:2: ( rule__Or__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:8990:2: ( rule__Or__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==77) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalMoniLog.g:8990:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_59);
            	    rule__Or__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalMoniLog.g:8999:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9003:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalMoniLog.g:9004:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_58);
            rule__Or__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalMoniLog.g:9011:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9015:1: ( ( () ) )
            // InternalMoniLog.g:9016:1: ( () )
            {
            // InternalMoniLog.g:9016:1: ( () )
            // InternalMoniLog.g:9017:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }
            // InternalMoniLog.g:9018:2: ()
            // InternalMoniLog.g:9018:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalMoniLog.g:9026:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9030:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalMoniLog.g:9031:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Or__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalMoniLog.g:9038:1: rule__Or__Group_1__1__Impl : ( ( rule__Or__OpAssignment_1_1 ) ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9042:1: ( ( ( rule__Or__OpAssignment_1_1 ) ) )
            // InternalMoniLog.g:9043:1: ( ( rule__Or__OpAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9043:1: ( ( rule__Or__OpAssignment_1_1 ) )
            // InternalMoniLog.g:9044:2: ( rule__Or__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }
            // InternalMoniLog.g:9045:2: ( rule__Or__OpAssignment_1_1 )
            // InternalMoniLog.g:9045:3: rule__Or__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Or__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalMoniLog.g:9053:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9057:1: ( rule__Or__Group_1__2__Impl )
            // InternalMoniLog.g:9058:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalMoniLog.g:9064:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9068:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalMoniLog.g:9069:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalMoniLog.g:9069:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalMoniLog.g:9070:2: ( rule__Or__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }
            // InternalMoniLog.g:9071:2: ( rule__Or__RightAssignment_1_2 )
            // InternalMoniLog.g:9071:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalMoniLog.g:9080:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9084:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalMoniLog.g:9085:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__And__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalMoniLog.g:9092:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9096:1: ( ( ruleEquality ) )
            // InternalMoniLog.g:9097:1: ( ruleEquality )
            {
            // InternalMoniLog.g:9097:1: ( ruleEquality )
            // InternalMoniLog.g:9098:2: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalMoniLog.g:9107:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9111:1: ( rule__And__Group__1__Impl )
            // InternalMoniLog.g:9112:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalMoniLog.g:9118:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9122:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalMoniLog.g:9123:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalMoniLog.g:9123:1: ( ( rule__And__Group_1__0 )* )
            // InternalMoniLog.g:9124:2: ( rule__And__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9125:2: ( rule__And__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==78) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalMoniLog.g:9125:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__And__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalMoniLog.g:9134:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9138:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalMoniLog.g:9139:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_60);
            rule__And__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalMoniLog.g:9146:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9150:1: ( ( () ) )
            // InternalMoniLog.g:9151:1: ( () )
            {
            // InternalMoniLog.g:9151:1: ( () )
            // InternalMoniLog.g:9152:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }
            // InternalMoniLog.g:9153:2: ()
            // InternalMoniLog.g:9153:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalMoniLog.g:9161:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9165:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalMoniLog.g:9166:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__And__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalMoniLog.g:9173:1: rule__And__Group_1__1__Impl : ( ( rule__And__OpAssignment_1_1 ) ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9177:1: ( ( ( rule__And__OpAssignment_1_1 ) ) )
            // InternalMoniLog.g:9178:1: ( ( rule__And__OpAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9178:1: ( ( rule__And__OpAssignment_1_1 ) )
            // InternalMoniLog.g:9179:2: ( rule__And__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }
            // InternalMoniLog.g:9180:2: ( rule__And__OpAssignment_1_1 )
            // InternalMoniLog.g:9180:3: rule__And__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__And__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalMoniLog.g:9188:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9192:1: ( rule__And__Group_1__2__Impl )
            // InternalMoniLog.g:9193:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalMoniLog.g:9199:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9203:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalMoniLog.g:9204:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalMoniLog.g:9204:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalMoniLog.g:9205:2: ( rule__And__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }
            // InternalMoniLog.g:9206:2: ( rule__And__RightAssignment_1_2 )
            // InternalMoniLog.g:9206:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalMoniLog.g:9215:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9219:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalMoniLog.g:9220:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__Equality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalMoniLog.g:9227:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9231:1: ( ( ruleComparison ) )
            // InternalMoniLog.g:9232:1: ( ruleComparison )
            {
            // InternalMoniLog.g:9232:1: ( ruleComparison )
            // InternalMoniLog.g:9233:2: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalMoniLog.g:9242:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9246:1: ( rule__Equality__Group__1__Impl )
            // InternalMoniLog.g:9247:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalMoniLog.g:9253:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9257:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalMoniLog.g:9258:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalMoniLog.g:9258:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalMoniLog.g:9259:2: ( rule__Equality__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9260:2: ( rule__Equality__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=14 && LA69_0<=15)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalMoniLog.g:9260:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalMoniLog.g:9269:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9273:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalMoniLog.g:9274:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_62);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalMoniLog.g:9281:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9285:1: ( ( () ) )
            // InternalMoniLog.g:9286:1: ( () )
            {
            // InternalMoniLog.g:9286:1: ( () )
            // InternalMoniLog.g:9287:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }
            // InternalMoniLog.g:9288:2: ()
            // InternalMoniLog.g:9288:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalMoniLog.g:9296:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9300:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalMoniLog.g:9301:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalMoniLog.g:9308:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9312:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalMoniLog.g:9313:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9313:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalMoniLog.g:9314:2: ( rule__Equality__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }
            // InternalMoniLog.g:9315:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalMoniLog.g:9315:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalMoniLog.g:9323:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9327:1: ( rule__Equality__Group_1__2__Impl )
            // InternalMoniLog.g:9328:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalMoniLog.g:9334:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9338:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalMoniLog.g:9339:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalMoniLog.g:9339:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalMoniLog.g:9340:2: ( rule__Equality__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }
            // InternalMoniLog.g:9341:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalMoniLog.g:9341:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalMoniLog.g:9350:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9354:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalMoniLog.g:9355:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalMoniLog.g:9362:1: rule__Comparison__Group__0__Impl : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9366:1: ( ( rulePlusOrMinus ) )
            // InternalMoniLog.g:9367:1: ( rulePlusOrMinus )
            {
            // InternalMoniLog.g:9367:1: ( rulePlusOrMinus )
            // InternalMoniLog.g:9368:2: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalMoniLog.g:9377:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9381:1: ( rule__Comparison__Group__1__Impl )
            // InternalMoniLog.g:9382:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalMoniLog.g:9388:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9392:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalMoniLog.g:9393:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalMoniLog.g:9393:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalMoniLog.g:9394:2: ( rule__Comparison__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9395:2: ( rule__Comparison__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( ((LA70_0>=16 && LA70_0<=19)) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalMoniLog.g:9395:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_65);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalMoniLog.g:9404:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9408:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalMoniLog.g:9409:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalMoniLog.g:9416:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9420:1: ( ( () ) )
            // InternalMoniLog.g:9421:1: ( () )
            {
            // InternalMoniLog.g:9421:1: ( () )
            // InternalMoniLog.g:9422:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }
            // InternalMoniLog.g:9423:2: ()
            // InternalMoniLog.g:9423:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalMoniLog.g:9431:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9435:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalMoniLog.g:9436:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalMoniLog.g:9443:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9447:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalMoniLog.g:9448:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9448:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalMoniLog.g:9449:2: ( rule__Comparison__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }
            // InternalMoniLog.g:9450:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalMoniLog.g:9450:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalMoniLog.g:9458:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9462:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalMoniLog.g:9463:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalMoniLog.g:9469:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9473:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalMoniLog.g:9474:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalMoniLog.g:9474:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalMoniLog.g:9475:2: ( rule__Comparison__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }
            // InternalMoniLog.g:9476:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalMoniLog.g:9476:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__0"
    // InternalMoniLog.g:9485:1: rule__PlusOrMinus__Group__0 : rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 ;
    public final void rule__PlusOrMinus__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9489:1: ( rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1 )
            // InternalMoniLog.g:9490:2: rule__PlusOrMinus__Group__0__Impl rule__PlusOrMinus__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__PlusOrMinus__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0"


    // $ANTLR start "rule__PlusOrMinus__Group__0__Impl"
    // InternalMoniLog.g:9497:1: rule__PlusOrMinus__Group__0__Impl : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9501:1: ( ( ruleMulOrDiv ) )
            // InternalMoniLog.g:9502:1: ( ruleMulOrDiv )
            {
            // InternalMoniLog.g:9502:1: ( ruleMulOrDiv )
            // InternalMoniLog.g:9503:2: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group__1"
    // InternalMoniLog.g:9512:1: rule__PlusOrMinus__Group__1 : rule__PlusOrMinus__Group__1__Impl ;
    public final void rule__PlusOrMinus__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9516:1: ( rule__PlusOrMinus__Group__1__Impl )
            // InternalMoniLog.g:9517:2: rule__PlusOrMinus__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1"


    // $ANTLR start "rule__PlusOrMinus__Group__1__Impl"
    // InternalMoniLog.g:9523:1: rule__PlusOrMinus__Group__1__Impl : ( ( rule__PlusOrMinus__Group_1__0 )* ) ;
    public final void rule__PlusOrMinus__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9527:1: ( ( ( rule__PlusOrMinus__Group_1__0 )* ) )
            // InternalMoniLog.g:9528:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            {
            // InternalMoniLog.g:9528:1: ( ( rule__PlusOrMinus__Group_1__0 )* )
            // InternalMoniLog.g:9529:2: ( rule__PlusOrMinus__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9530:2: ( rule__PlusOrMinus__Group_1__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==73||LA71_0==79) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalMoniLog.g:9530:3: rule__PlusOrMinus__Group_1__0
            	    {
            	    pushFollow(FOLLOW_67);
            	    rule__PlusOrMinus__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0"
    // InternalMoniLog.g:9539:1: rule__PlusOrMinus__Group_1__0 : rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 ;
    public final void rule__PlusOrMinus__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9543:1: ( rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1 )
            // InternalMoniLog.g:9544:2: rule__PlusOrMinus__Group_1__0__Impl rule__PlusOrMinus__Group_1__1
            {
            pushFollow(FOLLOW_53);
            rule__PlusOrMinus__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1__0__Impl"
    // InternalMoniLog.g:9551:1: rule__PlusOrMinus__Group_1__0__Impl : ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) ;
    public final void rule__PlusOrMinus__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9555:1: ( ( ( rule__PlusOrMinus__Alternatives_1_0 ) ) )
            // InternalMoniLog.g:9556:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            {
            // InternalMoniLog.g:9556:1: ( ( rule__PlusOrMinus__Alternatives_1_0 ) )
            // InternalMoniLog.g:9557:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }
            // InternalMoniLog.g:9558:2: ( rule__PlusOrMinus__Alternatives_1_0 )
            // InternalMoniLog.g:9558:3: rule__PlusOrMinus__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1"
    // InternalMoniLog.g:9566:1: rule__PlusOrMinus__Group_1__1 : rule__PlusOrMinus__Group_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9570:1: ( rule__PlusOrMinus__Group_1__1__Impl )
            // InternalMoniLog.g:9571:2: rule__PlusOrMinus__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1__1__Impl"
    // InternalMoniLog.g:9577:1: rule__PlusOrMinus__Group_1__1__Impl : ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9581:1: ( ( ( rule__PlusOrMinus__RightAssignment_1_1 ) ) )
            // InternalMoniLog.g:9582:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9582:1: ( ( rule__PlusOrMinus__RightAssignment_1_1 ) )
            // InternalMoniLog.g:9583:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }
            // InternalMoniLog.g:9584:2: ( rule__PlusOrMinus__RightAssignment_1_1 )
            // InternalMoniLog.g:9584:3: rule__PlusOrMinus__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0"
    // InternalMoniLog.g:9593:1: rule__PlusOrMinus__Group_1_0_0__0 : rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 ;
    public final void rule__PlusOrMinus__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9597:1: ( rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1 )
            // InternalMoniLog.g:9598:2: rule__PlusOrMinus__Group_1_0_0__0__Impl rule__PlusOrMinus__Group_1_0_0__1
            {
            pushFollow(FOLLOW_68);
            rule__PlusOrMinus__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__0__Impl"
    // InternalMoniLog.g:9605:1: rule__PlusOrMinus__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9609:1: ( ( () ) )
            // InternalMoniLog.g:9610:1: ( () )
            {
            // InternalMoniLog.g:9610:1: ( () )
            // InternalMoniLog.g:9611:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalMoniLog.g:9612:2: ()
            // InternalMoniLog.g:9612:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1"
    // InternalMoniLog.g:9620:1: rule__PlusOrMinus__Group_1_0_0__1 : rule__PlusOrMinus__Group_1_0_0__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9624:1: ( rule__PlusOrMinus__Group_1_0_0__1__Impl )
            // InternalMoniLog.g:9625:2: rule__PlusOrMinus__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_0__1__Impl"
    // InternalMoniLog.g:9631:1: rule__PlusOrMinus__Group_1_0_0__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9635:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) ) )
            // InternalMoniLog.g:9636:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            {
            // InternalMoniLog.g:9636:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_0_1 ) )
            // InternalMoniLog.g:9637:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }
            // InternalMoniLog.g:9638:2: ( rule__PlusOrMinus__OpAssignment_1_0_0_1 )
            // InternalMoniLog.g:9638:3: rule__PlusOrMinus__OpAssignment_1_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0"
    // InternalMoniLog.g:9647:1: rule__PlusOrMinus__Group_1_0_1__0 : rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 ;
    public final void rule__PlusOrMinus__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9651:1: ( rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1 )
            // InternalMoniLog.g:9652:2: rule__PlusOrMinus__Group_1_0_1__0__Impl rule__PlusOrMinus__Group_1_0_1__1
            {
            pushFollow(FOLLOW_66);
            rule__PlusOrMinus__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__0__Impl"
    // InternalMoniLog.g:9659:1: rule__PlusOrMinus__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9663:1: ( ( () ) )
            // InternalMoniLog.g:9664:1: ( () )
            {
            // InternalMoniLog.g:9664:1: ( () )
            // InternalMoniLog.g:9665:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalMoniLog.g:9666:2: ()
            // InternalMoniLog.g:9666:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1"
    // InternalMoniLog.g:9674:1: rule__PlusOrMinus__Group_1_0_1__1 : rule__PlusOrMinus__Group_1_0_1__1__Impl ;
    public final void rule__PlusOrMinus__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9678:1: ( rule__PlusOrMinus__Group_1_0_1__1__Impl )
            // InternalMoniLog.g:9679:2: rule__PlusOrMinus__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1"


    // $ANTLR start "rule__PlusOrMinus__Group_1_0_1__1__Impl"
    // InternalMoniLog.g:9685:1: rule__PlusOrMinus__Group_1_0_1__1__Impl : ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) ;
    public final void rule__PlusOrMinus__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9689:1: ( ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) ) )
            // InternalMoniLog.g:9690:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            {
            // InternalMoniLog.g:9690:1: ( ( rule__PlusOrMinus__OpAssignment_1_0_1_1 ) )
            // InternalMoniLog.g:9691:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }
            // InternalMoniLog.g:9692:2: ( rule__PlusOrMinus__OpAssignment_1_0_1_1 )
            // InternalMoniLog.g:9692:3: rule__PlusOrMinus__OpAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PlusOrMinus__OpAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__0"
    // InternalMoniLog.g:9701:1: rule__MulOrDiv__Group__0 : rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 ;
    public final void rule__MulOrDiv__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9705:1: ( rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1 )
            // InternalMoniLog.g:9706:2: rule__MulOrDiv__Group__0__Impl rule__MulOrDiv__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__MulOrDiv__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0"


    // $ANTLR start "rule__MulOrDiv__Group__0__Impl"
    // InternalMoniLog.g:9713:1: rule__MulOrDiv__Group__0__Impl : ( ruleModulo ) ;
    public final void rule__MulOrDiv__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9717:1: ( ( ruleModulo ) )
            // InternalMoniLog.g:9718:1: ( ruleModulo )
            {
            // InternalMoniLog.g:9718:1: ( ruleModulo )
            // InternalMoniLog.g:9719:2: ruleModulo
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getModuloParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleModulo();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getModuloParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group__1"
    // InternalMoniLog.g:9728:1: rule__MulOrDiv__Group__1 : rule__MulOrDiv__Group__1__Impl ;
    public final void rule__MulOrDiv__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9732:1: ( rule__MulOrDiv__Group__1__Impl )
            // InternalMoniLog.g:9733:2: rule__MulOrDiv__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1"


    // $ANTLR start "rule__MulOrDiv__Group__1__Impl"
    // InternalMoniLog.g:9739:1: rule__MulOrDiv__Group__1__Impl : ( ( rule__MulOrDiv__Group_1__0 )* ) ;
    public final void rule__MulOrDiv__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9743:1: ( ( ( rule__MulOrDiv__Group_1__0 )* ) )
            // InternalMoniLog.g:9744:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            {
            // InternalMoniLog.g:9744:1: ( ( rule__MulOrDiv__Group_1__0 )* )
            // InternalMoniLog.g:9745:2: ( rule__MulOrDiv__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9746:2: ( rule__MulOrDiv__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=80 && LA72_0<=81)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalMoniLog.g:9746:3: rule__MulOrDiv__Group_1__0
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__MulOrDiv__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__0"
    // InternalMoniLog.g:9755:1: rule__MulOrDiv__Group_1__0 : rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 ;
    public final void rule__MulOrDiv__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9759:1: ( rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1 )
            // InternalMoniLog.g:9760:2: rule__MulOrDiv__Group_1__0__Impl rule__MulOrDiv__Group_1__1
            {
            pushFollow(FOLLOW_53);
            rule__MulOrDiv__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0"


    // $ANTLR start "rule__MulOrDiv__Group_1__0__Impl"
    // InternalMoniLog.g:9767:1: rule__MulOrDiv__Group_1__0__Impl : ( ( rule__MulOrDiv__Alternatives_1_0 ) ) ;
    public final void rule__MulOrDiv__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9771:1: ( ( ( rule__MulOrDiv__Alternatives_1_0 ) ) )
            // InternalMoniLog.g:9772:1: ( ( rule__MulOrDiv__Alternatives_1_0 ) )
            {
            // InternalMoniLog.g:9772:1: ( ( rule__MulOrDiv__Alternatives_1_0 ) )
            // InternalMoniLog.g:9773:2: ( rule__MulOrDiv__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); 
            }
            // InternalMoniLog.g:9774:2: ( rule__MulOrDiv__Alternatives_1_0 )
            // InternalMoniLog.g:9774:3: rule__MulOrDiv__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1__1"
    // InternalMoniLog.g:9782:1: rule__MulOrDiv__Group_1__1 : rule__MulOrDiv__Group_1__1__Impl ;
    public final void rule__MulOrDiv__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9786:1: ( rule__MulOrDiv__Group_1__1__Impl )
            // InternalMoniLog.g:9787:2: rule__MulOrDiv__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1"


    // $ANTLR start "rule__MulOrDiv__Group_1__1__Impl"
    // InternalMoniLog.g:9793:1: rule__MulOrDiv__Group_1__1__Impl : ( ( rule__MulOrDiv__RightAssignment_1_1 ) ) ;
    public final void rule__MulOrDiv__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9797:1: ( ( ( rule__MulOrDiv__RightAssignment_1_1 ) ) )
            // InternalMoniLog.g:9798:1: ( ( rule__MulOrDiv__RightAssignment_1_1 ) )
            {
            // InternalMoniLog.g:9798:1: ( ( rule__MulOrDiv__RightAssignment_1_1 ) )
            // InternalMoniLog.g:9799:2: ( rule__MulOrDiv__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_1()); 
            }
            // InternalMoniLog.g:9800:2: ( rule__MulOrDiv__RightAssignment_1_1 )
            // InternalMoniLog.g:9800:3: rule__MulOrDiv__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_0__0"
    // InternalMoniLog.g:9809:1: rule__MulOrDiv__Group_1_0_0__0 : rule__MulOrDiv__Group_1_0_0__0__Impl rule__MulOrDiv__Group_1_0_0__1 ;
    public final void rule__MulOrDiv__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9813:1: ( rule__MulOrDiv__Group_1_0_0__0__Impl rule__MulOrDiv__Group_1_0_0__1 )
            // InternalMoniLog.g:9814:2: rule__MulOrDiv__Group_1_0_0__0__Impl rule__MulOrDiv__Group_1_0_0__1
            {
            pushFollow(FOLLOW_71);
            rule__MulOrDiv__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_0__0"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_0__0__Impl"
    // InternalMoniLog.g:9821:1: rule__MulOrDiv__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__MulOrDiv__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9825:1: ( ( () ) )
            // InternalMoniLog.g:9826:1: ( () )
            {
            // InternalMoniLog.g:9826:1: ( () )
            // InternalMoniLog.g:9827:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getMulLeftAction_1_0_0_0()); 
            }
            // InternalMoniLog.g:9828:2: ()
            // InternalMoniLog.g:9828:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getMulLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_0__1"
    // InternalMoniLog.g:9836:1: rule__MulOrDiv__Group_1_0_0__1 : rule__MulOrDiv__Group_1_0_0__1__Impl ;
    public final void rule__MulOrDiv__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9840:1: ( rule__MulOrDiv__Group_1_0_0__1__Impl )
            // InternalMoniLog.g:9841:2: rule__MulOrDiv__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_0__1"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_0__1__Impl"
    // InternalMoniLog.g:9847:1: rule__MulOrDiv__Group_1_0_0__1__Impl : ( ( rule__MulOrDiv__OpAssignment_1_0_0_1 ) ) ;
    public final void rule__MulOrDiv__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9851:1: ( ( ( rule__MulOrDiv__OpAssignment_1_0_0_1 ) ) )
            // InternalMoniLog.g:9852:1: ( ( rule__MulOrDiv__OpAssignment_1_0_0_1 ) )
            {
            // InternalMoniLog.g:9852:1: ( ( rule__MulOrDiv__OpAssignment_1_0_0_1 ) )
            // InternalMoniLog.g:9853:2: ( rule__MulOrDiv__OpAssignment_1_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_0_0_1()); 
            }
            // InternalMoniLog.g:9854:2: ( rule__MulOrDiv__OpAssignment_1_0_0_1 )
            // InternalMoniLog.g:9854:3: rule__MulOrDiv__OpAssignment_1_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAssignment_1_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_1__0"
    // InternalMoniLog.g:9863:1: rule__MulOrDiv__Group_1_0_1__0 : rule__MulOrDiv__Group_1_0_1__0__Impl rule__MulOrDiv__Group_1_0_1__1 ;
    public final void rule__MulOrDiv__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9867:1: ( rule__MulOrDiv__Group_1_0_1__0__Impl rule__MulOrDiv__Group_1_0_1__1 )
            // InternalMoniLog.g:9868:2: rule__MulOrDiv__Group_1_0_1__0__Impl rule__MulOrDiv__Group_1_0_1__1
            {
            pushFollow(FOLLOW_69);
            rule__MulOrDiv__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_1__0"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_1__0__Impl"
    // InternalMoniLog.g:9875:1: rule__MulOrDiv__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__MulOrDiv__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9879:1: ( ( () ) )
            // InternalMoniLog.g:9880:1: ( () )
            {
            // InternalMoniLog.g:9880:1: ( () )
            // InternalMoniLog.g:9881:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getDivLeftAction_1_0_1_0()); 
            }
            // InternalMoniLog.g:9882:2: ()
            // InternalMoniLog.g:9882:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getDivLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_1__1"
    // InternalMoniLog.g:9890:1: rule__MulOrDiv__Group_1_0_1__1 : rule__MulOrDiv__Group_1_0_1__1__Impl ;
    public final void rule__MulOrDiv__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9894:1: ( rule__MulOrDiv__Group_1_0_1__1__Impl )
            // InternalMoniLog.g:9895:2: rule__MulOrDiv__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_1__1"


    // $ANTLR start "rule__MulOrDiv__Group_1_0_1__1__Impl"
    // InternalMoniLog.g:9901:1: rule__MulOrDiv__Group_1_0_1__1__Impl : ( ( rule__MulOrDiv__OpAssignment_1_0_1_1 ) ) ;
    public final void rule__MulOrDiv__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9905:1: ( ( ( rule__MulOrDiv__OpAssignment_1_0_1_1 ) ) )
            // InternalMoniLog.g:9906:1: ( ( rule__MulOrDiv__OpAssignment_1_0_1_1 ) )
            {
            // InternalMoniLog.g:9906:1: ( ( rule__MulOrDiv__OpAssignment_1_0_1_1 ) )
            // InternalMoniLog.g:9907:2: ( rule__MulOrDiv__OpAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_0_1_1()); 
            }
            // InternalMoniLog.g:9908:2: ( rule__MulOrDiv__OpAssignment_1_0_1_1 )
            // InternalMoniLog.g:9908:3: rule__MulOrDiv__OpAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MulOrDiv__OpAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Modulo__Group__0"
    // InternalMoniLog.g:9917:1: rule__Modulo__Group__0 : rule__Modulo__Group__0__Impl rule__Modulo__Group__1 ;
    public final void rule__Modulo__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9921:1: ( rule__Modulo__Group__0__Impl rule__Modulo__Group__1 )
            // InternalMoniLog.g:9922:2: rule__Modulo__Group__0__Impl rule__Modulo__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__Modulo__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Modulo__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group__0"


    // $ANTLR start "rule__Modulo__Group__0__Impl"
    // InternalMoniLog.g:9929:1: rule__Modulo__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__Modulo__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9933:1: ( ( rulePrimary ) )
            // InternalMoniLog.g:9934:1: ( rulePrimary )
            {
            // InternalMoniLog.g:9934:1: ( rulePrimary )
            // InternalMoniLog.g:9935:2: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getPrimaryParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getPrimaryParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group__0__Impl"


    // $ANTLR start "rule__Modulo__Group__1"
    // InternalMoniLog.g:9944:1: rule__Modulo__Group__1 : rule__Modulo__Group__1__Impl ;
    public final void rule__Modulo__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9948:1: ( rule__Modulo__Group__1__Impl )
            // InternalMoniLog.g:9949:2: rule__Modulo__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Modulo__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group__1"


    // $ANTLR start "rule__Modulo__Group__1__Impl"
    // InternalMoniLog.g:9955:1: rule__Modulo__Group__1__Impl : ( ( rule__Modulo__Group_1__0 )* ) ;
    public final void rule__Modulo__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9959:1: ( ( ( rule__Modulo__Group_1__0 )* ) )
            // InternalMoniLog.g:9960:1: ( ( rule__Modulo__Group_1__0 )* )
            {
            // InternalMoniLog.g:9960:1: ( ( rule__Modulo__Group_1__0 )* )
            // InternalMoniLog.g:9961:2: ( rule__Modulo__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:9962:2: ( rule__Modulo__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==82) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalMoniLog.g:9962:3: rule__Modulo__Group_1__0
            	    {
            	    pushFollow(FOLLOW_73);
            	    rule__Modulo__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group__1__Impl"


    // $ANTLR start "rule__Modulo__Group_1__0"
    // InternalMoniLog.g:9971:1: rule__Modulo__Group_1__0 : rule__Modulo__Group_1__0__Impl rule__Modulo__Group_1__1 ;
    public final void rule__Modulo__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9975:1: ( rule__Modulo__Group_1__0__Impl rule__Modulo__Group_1__1 )
            // InternalMoniLog.g:9976:2: rule__Modulo__Group_1__0__Impl rule__Modulo__Group_1__1
            {
            pushFollow(FOLLOW_72);
            rule__Modulo__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Modulo__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__0"


    // $ANTLR start "rule__Modulo__Group_1__0__Impl"
    // InternalMoniLog.g:9983:1: rule__Modulo__Group_1__0__Impl : ( () ) ;
    public final void rule__Modulo__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:9987:1: ( ( () ) )
            // InternalMoniLog.g:9988:1: ( () )
            {
            // InternalMoniLog.g:9988:1: ( () )
            // InternalMoniLog.g:9989:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getModuloLeftAction_1_0()); 
            }
            // InternalMoniLog.g:9990:2: ()
            // InternalMoniLog.g:9990:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getModuloLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__0__Impl"


    // $ANTLR start "rule__Modulo__Group_1__1"
    // InternalMoniLog.g:9998:1: rule__Modulo__Group_1__1 : rule__Modulo__Group_1__1__Impl rule__Modulo__Group_1__2 ;
    public final void rule__Modulo__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10002:1: ( rule__Modulo__Group_1__1__Impl rule__Modulo__Group_1__2 )
            // InternalMoniLog.g:10003:2: rule__Modulo__Group_1__1__Impl rule__Modulo__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Modulo__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Modulo__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__1"


    // $ANTLR start "rule__Modulo__Group_1__1__Impl"
    // InternalMoniLog.g:10010:1: rule__Modulo__Group_1__1__Impl : ( ( rule__Modulo__OpAssignment_1_1 ) ) ;
    public final void rule__Modulo__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10014:1: ( ( ( rule__Modulo__OpAssignment_1_1 ) ) )
            // InternalMoniLog.g:10015:1: ( ( rule__Modulo__OpAssignment_1_1 ) )
            {
            // InternalMoniLog.g:10015:1: ( ( rule__Modulo__OpAssignment_1_1 ) )
            // InternalMoniLog.g:10016:2: ( rule__Modulo__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getOpAssignment_1_1()); 
            }
            // InternalMoniLog.g:10017:2: ( rule__Modulo__OpAssignment_1_1 )
            // InternalMoniLog.g:10017:3: rule__Modulo__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Modulo__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__1__Impl"


    // $ANTLR start "rule__Modulo__Group_1__2"
    // InternalMoniLog.g:10025:1: rule__Modulo__Group_1__2 : rule__Modulo__Group_1__2__Impl ;
    public final void rule__Modulo__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10029:1: ( rule__Modulo__Group_1__2__Impl )
            // InternalMoniLog.g:10030:2: rule__Modulo__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Modulo__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__2"


    // $ANTLR start "rule__Modulo__Group_1__2__Impl"
    // InternalMoniLog.g:10036:1: rule__Modulo__Group_1__2__Impl : ( ( rule__Modulo__RightAssignment_1_2 ) ) ;
    public final void rule__Modulo__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10040:1: ( ( ( rule__Modulo__RightAssignment_1_2 ) ) )
            // InternalMoniLog.g:10041:1: ( ( rule__Modulo__RightAssignment_1_2 ) )
            {
            // InternalMoniLog.g:10041:1: ( ( rule__Modulo__RightAssignment_1_2 ) )
            // InternalMoniLog.g:10042:2: ( rule__Modulo__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getRightAssignment_1_2()); 
            }
            // InternalMoniLog.g:10043:2: ( rule__Modulo__RightAssignment_1_2 )
            // InternalMoniLog.g:10043:3: rule__Modulo__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Modulo__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalMoniLog.g:10052:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10056:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalMoniLog.g:10057:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_14);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalMoniLog.g:10064:1: rule__Primary__Group_0__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10068:1: ( ( () ) )
            // InternalMoniLog.g:10069:1: ( () )
            {
            // InternalMoniLog.g:10069:1: ( () )
            // InternalMoniLog.g:10070:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }
            // InternalMoniLog.g:10071:2: ()
            // InternalMoniLog.g:10071:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getParenthesisAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalMoniLog.g:10079:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10083:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalMoniLog.g:10084:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalMoniLog.g:10091:1: rule__Primary__Group_0__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10095:1: ( ( '(' ) )
            // InternalMoniLog.g:10096:1: ( '(' )
            {
            // InternalMoniLog.g:10096:1: ( '(' )
            // InternalMoniLog.g:10097:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalMoniLog.g:10106:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10110:1: ( rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 )
            // InternalMoniLog.g:10111:2: rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3
            {
            pushFollow(FOLLOW_13);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalMoniLog.g:10118:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__ExpressionAssignment_0_2 ) ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10122:1: ( ( ( rule__Primary__ExpressionAssignment_0_2 ) ) )
            // InternalMoniLog.g:10123:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            {
            // InternalMoniLog.g:10123:1: ( ( rule__Primary__ExpressionAssignment_0_2 ) )
            // InternalMoniLog.g:10124:2: ( rule__Primary__ExpressionAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }
            // InternalMoniLog.g:10125:2: ( rule__Primary__ExpressionAssignment_0_2 )
            // InternalMoniLog.g:10125:3: rule__Primary__ExpressionAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__3"
    // InternalMoniLog.g:10133:1: rule__Primary__Group_0__3 : rule__Primary__Group_0__3__Impl ;
    public final void rule__Primary__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10137:1: ( rule__Primary__Group_0__3__Impl )
            // InternalMoniLog.g:10138:2: rule__Primary__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3"


    // $ANTLR start "rule__Primary__Group_0__3__Impl"
    // InternalMoniLog.g:10144:1: rule__Primary__Group_0__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10148:1: ( ( ')' ) )
            // InternalMoniLog.g:10149:1: ( ')' )
            {
            // InternalMoniLog.g:10149:1: ( ')' )
            // InternalMoniLog.g:10150:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalMoniLog.g:10160:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10164:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalMoniLog.g:10165:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_74);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalMoniLog.g:10172:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10176:1: ( ( () ) )
            // InternalMoniLog.g:10177:1: ( () )
            {
            // InternalMoniLog.g:10177:1: ( () )
            // InternalMoniLog.g:10178:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }
            // InternalMoniLog.g:10179:2: ()
            // InternalMoniLog.g:10179:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalMoniLog.g:10187:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10191:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalMoniLog.g:10192:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalMoniLog.g:10199:1: rule__Primary__Group_1__1__Impl : ( '-' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10203:1: ( ( '-' ) )
            // InternalMoniLog.g:10204:1: ( '-' )
            {
            // InternalMoniLog.g:10204:1: ( '-' )
            // InternalMoniLog.g:10205:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalMoniLog.g:10214:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10218:1: ( rule__Primary__Group_1__2__Impl )
            // InternalMoniLog.g:10219:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalMoniLog.g:10225:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10229:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalMoniLog.g:10230:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalMoniLog.g:10230:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalMoniLog.g:10231:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }
            // InternalMoniLog.g:10232:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalMoniLog.g:10232:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalMoniLog.g:10241:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10245:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalMoniLog.g:10246:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_75);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalMoniLog.g:10253:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10257:1: ( ( () ) )
            // InternalMoniLog.g:10258:1: ( () )
            {
            // InternalMoniLog.g:10258:1: ( () )
            // InternalMoniLog.g:10259:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }
            // InternalMoniLog.g:10260:2: ()
            // InternalMoniLog.g:10260:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getNotAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalMoniLog.g:10268:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10272:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalMoniLog.g:10273:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalMoniLog.g:10280:1: rule__Primary__Group_2__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10284:1: ( ( '!' ) )
            // InternalMoniLog.g:10285:1: ( '!' )
            {
            // InternalMoniLog.g:10285:1: ( '!' )
            // InternalMoniLog.g:10286:2: '!'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalMoniLog.g:10295:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10299:1: ( rule__Primary__Group_2__2__Impl )
            // InternalMoniLog.g:10300:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalMoniLog.g:10306:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpressionAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10310:1: ( ( ( rule__Primary__ExpressionAssignment_2_2 ) ) )
            // InternalMoniLog.g:10311:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            {
            // InternalMoniLog.g:10311:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            // InternalMoniLog.g:10312:2: ( rule__Primary__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }
            // InternalMoniLog.g:10313:2: ( rule__Primary__ExpressionAssignment_2_2 )
            // InternalMoniLog.g:10313:3: rule__Primary__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Atomic__Group_0__0"
    // InternalMoniLog.g:10322:1: rule__Atomic__Group_0__0 : rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 ;
    public final void rule__Atomic__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10326:1: ( rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1 )
            // InternalMoniLog.g:10327:2: rule__Atomic__Group_0__0__Impl rule__Atomic__Group_0__1
            {
            pushFollow(FOLLOW_40);
            rule__Atomic__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0"


    // $ANTLR start "rule__Atomic__Group_0__0__Impl"
    // InternalMoniLog.g:10334:1: rule__Atomic__Group_0__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10338:1: ( ( () ) )
            // InternalMoniLog.g:10339:1: ( () )
            {
            // InternalMoniLog.g:10339:1: ( () )
            // InternalMoniLog.g:10340:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }
            // InternalMoniLog.g:10341:2: ()
            // InternalMoniLog.g:10341:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__0__Impl"


    // $ANTLR start "rule__Atomic__Group_0__1"
    // InternalMoniLog.g:10349:1: rule__Atomic__Group_0__1 : rule__Atomic__Group_0__1__Impl ;
    public final void rule__Atomic__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10353:1: ( rule__Atomic__Group_0__1__Impl )
            // InternalMoniLog.g:10354:2: rule__Atomic__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1"


    // $ANTLR start "rule__Atomic__Group_0__1__Impl"
    // InternalMoniLog.g:10360:1: rule__Atomic__Group_0__1__Impl : ( ( rule__Atomic__ValueAssignment_0_1 ) ) ;
    public final void rule__Atomic__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10364:1: ( ( ( rule__Atomic__ValueAssignment_0_1 ) ) )
            // InternalMoniLog.g:10365:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            {
            // InternalMoniLog.g:10365:1: ( ( rule__Atomic__ValueAssignment_0_1 ) )
            // InternalMoniLog.g:10366:2: ( rule__Atomic__ValueAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }
            // InternalMoniLog.g:10367:2: ( rule__Atomic__ValueAssignment_0_1 )
            // InternalMoniLog.g:10367:3: rule__Atomic__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_0__1__Impl"


    // $ANTLR start "rule__Atomic__Group_1__0"
    // InternalMoniLog.g:10376:1: rule__Atomic__Group_1__0 : rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 ;
    public final void rule__Atomic__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10380:1: ( rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1 )
            // InternalMoniLog.g:10381:2: rule__Atomic__Group_1__0__Impl rule__Atomic__Group_1__1
            {
            pushFollow(FOLLOW_76);
            rule__Atomic__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0"


    // $ANTLR start "rule__Atomic__Group_1__0__Impl"
    // InternalMoniLog.g:10388:1: rule__Atomic__Group_1__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10392:1: ( ( () ) )
            // InternalMoniLog.g:10393:1: ( () )
            {
            // InternalMoniLog.g:10393:1: ( () )
            // InternalMoniLog.g:10394:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }
            // InternalMoniLog.g:10395:2: ()
            // InternalMoniLog.g:10395:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__0__Impl"


    // $ANTLR start "rule__Atomic__Group_1__1"
    // InternalMoniLog.g:10403:1: rule__Atomic__Group_1__1 : rule__Atomic__Group_1__1__Impl ;
    public final void rule__Atomic__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10407:1: ( rule__Atomic__Group_1__1__Impl )
            // InternalMoniLog.g:10408:2: rule__Atomic__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1"


    // $ANTLR start "rule__Atomic__Group_1__1__Impl"
    // InternalMoniLog.g:10414:1: rule__Atomic__Group_1__1__Impl : ( ( rule__Atomic__ValueAssignment_1_1 ) ) ;
    public final void rule__Atomic__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10418:1: ( ( ( rule__Atomic__ValueAssignment_1_1 ) ) )
            // InternalMoniLog.g:10419:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            {
            // InternalMoniLog.g:10419:1: ( ( rule__Atomic__ValueAssignment_1_1 ) )
            // InternalMoniLog.g:10420:2: ( rule__Atomic__ValueAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }
            // InternalMoniLog.g:10421:2: ( rule__Atomic__ValueAssignment_1_1 )
            // InternalMoniLog.g:10421:3: rule__Atomic__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_1__1__Impl"


    // $ANTLR start "rule__Atomic__Group_2__0"
    // InternalMoniLog.g:10430:1: rule__Atomic__Group_2__0 : rule__Atomic__Group_2__0__Impl rule__Atomic__Group_2__1 ;
    public final void rule__Atomic__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10434:1: ( rule__Atomic__Group_2__0__Impl rule__Atomic__Group_2__1 )
            // InternalMoniLog.g:10435:2: rule__Atomic__Group_2__0__Impl rule__Atomic__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__Atomic__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_2__0"


    // $ANTLR start "rule__Atomic__Group_2__0__Impl"
    // InternalMoniLog.g:10442:1: rule__Atomic__Group_2__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10446:1: ( ( () ) )
            // InternalMoniLog.g:10447:1: ( () )
            {
            // InternalMoniLog.g:10447:1: ( () )
            // InternalMoniLog.g:10448:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getBoolConstantAction_2_0()); 
            }
            // InternalMoniLog.g:10449:2: ()
            // InternalMoniLog.g:10449:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getBoolConstantAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_2__0__Impl"


    // $ANTLR start "rule__Atomic__Group_2__1"
    // InternalMoniLog.g:10457:1: rule__Atomic__Group_2__1 : rule__Atomic__Group_2__1__Impl ;
    public final void rule__Atomic__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10461:1: ( rule__Atomic__Group_2__1__Impl )
            // InternalMoniLog.g:10462:2: rule__Atomic__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_2__1"


    // $ANTLR start "rule__Atomic__Group_2__1__Impl"
    // InternalMoniLog.g:10468:1: rule__Atomic__Group_2__1__Impl : ( ( rule__Atomic__Alternatives_2_1 ) ) ;
    public final void rule__Atomic__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10472:1: ( ( ( rule__Atomic__Alternatives_2_1 ) ) )
            // InternalMoniLog.g:10473:1: ( ( rule__Atomic__Alternatives_2_1 ) )
            {
            // InternalMoniLog.g:10473:1: ( ( rule__Atomic__Alternatives_2_1 ) )
            // InternalMoniLog.g:10474:2: ( rule__Atomic__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getAlternatives_2_1()); 
            }
            // InternalMoniLog.g:10475:2: ( rule__Atomic__Alternatives_2_1 )
            // InternalMoniLog.g:10475:3: rule__Atomic__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_2__1__Impl"


    // $ANTLR start "rule__Atomic__Group_3__0"
    // InternalMoniLog.g:10484:1: rule__Atomic__Group_3__0 : rule__Atomic__Group_3__0__Impl rule__Atomic__Group_3__1 ;
    public final void rule__Atomic__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10488:1: ( rule__Atomic__Group_3__0__Impl rule__Atomic__Group_3__1 )
            // InternalMoniLog.g:10489:2: rule__Atomic__Group_3__0__Impl rule__Atomic__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Atomic__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_3__0"


    // $ANTLR start "rule__Atomic__Group_3__0__Impl"
    // InternalMoniLog.g:10496:1: rule__Atomic__Group_3__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10500:1: ( ( () ) )
            // InternalMoniLog.g:10501:1: ( () )
            {
            // InternalMoniLog.g:10501:1: ( () )
            // InternalMoniLog.g:10502:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getStringConstantAction_3_0()); 
            }
            // InternalMoniLog.g:10503:2: ()
            // InternalMoniLog.g:10503:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getStringConstantAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_3__0__Impl"


    // $ANTLR start "rule__Atomic__Group_3__1"
    // InternalMoniLog.g:10511:1: rule__Atomic__Group_3__1 : rule__Atomic__Group_3__1__Impl ;
    public final void rule__Atomic__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10515:1: ( rule__Atomic__Group_3__1__Impl )
            // InternalMoniLog.g:10516:2: rule__Atomic__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_3__1"


    // $ANTLR start "rule__Atomic__Group_3__1__Impl"
    // InternalMoniLog.g:10522:1: rule__Atomic__Group_3__1__Impl : ( ( rule__Atomic__ValueAssignment_3_1 ) ) ;
    public final void rule__Atomic__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10526:1: ( ( ( rule__Atomic__ValueAssignment_3_1 ) ) )
            // InternalMoniLog.g:10527:1: ( ( rule__Atomic__ValueAssignment_3_1 ) )
            {
            // InternalMoniLog.g:10527:1: ( ( rule__Atomic__ValueAssignment_3_1 ) )
            // InternalMoniLog.g:10528:2: ( rule__Atomic__ValueAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); 
            }
            // InternalMoniLog.g:10529:2: ( rule__Atomic__ValueAssignment_3_1 )
            // InternalMoniLog.g:10529:3: rule__Atomic__ValueAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValueAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_3__1__Impl"


    // $ANTLR start "rule__Atomic__Group_4__0"
    // InternalMoniLog.g:10538:1: rule__Atomic__Group_4__0 : rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 ;
    public final void rule__Atomic__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10542:1: ( rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1 )
            // InternalMoniLog.g:10543:2: rule__Atomic__Group_4__0__Impl rule__Atomic__Group_4__1
            {
            pushFollow(FOLLOW_78);
            rule__Atomic__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0"


    // $ANTLR start "rule__Atomic__Group_4__0__Impl"
    // InternalMoniLog.g:10550:1: rule__Atomic__Group_4__0__Impl : ( () ) ;
    public final void rule__Atomic__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10554:1: ( ( () ) )
            // InternalMoniLog.g:10555:1: ( () )
            {
            // InternalMoniLog.g:10555:1: ( () )
            // InternalMoniLog.g:10556:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getVectorConstantAction_4_0()); 
            }
            // InternalMoniLog.g:10557:2: ()
            // InternalMoniLog.g:10557:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getVectorConstantAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__0__Impl"


    // $ANTLR start "rule__Atomic__Group_4__1"
    // InternalMoniLog.g:10565:1: rule__Atomic__Group_4__1 : rule__Atomic__Group_4__1__Impl rule__Atomic__Group_4__2 ;
    public final void rule__Atomic__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10569:1: ( rule__Atomic__Group_4__1__Impl rule__Atomic__Group_4__2 )
            // InternalMoniLog.g:10570:2: rule__Atomic__Group_4__1__Impl rule__Atomic__Group_4__2
            {
            pushFollow(FOLLOW_53);
            rule__Atomic__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1"


    // $ANTLR start "rule__Atomic__Group_4__1__Impl"
    // InternalMoniLog.g:10577:1: rule__Atomic__Group_4__1__Impl : ( '[' ) ;
    public final void rule__Atomic__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10581:1: ( ( '[' ) )
            // InternalMoniLog.g:10582:1: ( '[' )
            {
            // InternalMoniLog.g:10582:1: ( '[' )
            // InternalMoniLog.g:10583:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getLeftSquareBracketKeyword_4_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getLeftSquareBracketKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__1__Impl"


    // $ANTLR start "rule__Atomic__Group_4__2"
    // InternalMoniLog.g:10592:1: rule__Atomic__Group_4__2 : rule__Atomic__Group_4__2__Impl rule__Atomic__Group_4__3 ;
    public final void rule__Atomic__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10596:1: ( rule__Atomic__Group_4__2__Impl rule__Atomic__Group_4__3 )
            // InternalMoniLog.g:10597:2: rule__Atomic__Group_4__2__Impl rule__Atomic__Group_4__3
            {
            pushFollow(FOLLOW_79);
            rule__Atomic__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__2"


    // $ANTLR start "rule__Atomic__Group_4__2__Impl"
    // InternalMoniLog.g:10604:1: rule__Atomic__Group_4__2__Impl : ( ( rule__Atomic__ValuesAssignment_4_2 ) ) ;
    public final void rule__Atomic__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10608:1: ( ( ( rule__Atomic__ValuesAssignment_4_2 ) ) )
            // InternalMoniLog.g:10609:1: ( ( rule__Atomic__ValuesAssignment_4_2 ) )
            {
            // InternalMoniLog.g:10609:1: ( ( rule__Atomic__ValuesAssignment_4_2 ) )
            // InternalMoniLog.g:10610:2: ( rule__Atomic__ValuesAssignment_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValuesAssignment_4_2()); 
            }
            // InternalMoniLog.g:10611:2: ( rule__Atomic__ValuesAssignment_4_2 )
            // InternalMoniLog.g:10611:3: rule__Atomic__ValuesAssignment_4_2
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValuesAssignment_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValuesAssignment_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__2__Impl"


    // $ANTLR start "rule__Atomic__Group_4__3"
    // InternalMoniLog.g:10619:1: rule__Atomic__Group_4__3 : rule__Atomic__Group_4__3__Impl rule__Atomic__Group_4__4 ;
    public final void rule__Atomic__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10623:1: ( rule__Atomic__Group_4__3__Impl rule__Atomic__Group_4__4 )
            // InternalMoniLog.g:10624:2: rule__Atomic__Group_4__3__Impl rule__Atomic__Group_4__4
            {
            pushFollow(FOLLOW_79);
            rule__Atomic__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__3"


    // $ANTLR start "rule__Atomic__Group_4__3__Impl"
    // InternalMoniLog.g:10631:1: rule__Atomic__Group_4__3__Impl : ( ( rule__Atomic__Group_4_3__0 )* ) ;
    public final void rule__Atomic__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10635:1: ( ( ( rule__Atomic__Group_4_3__0 )* ) )
            // InternalMoniLog.g:10636:1: ( ( rule__Atomic__Group_4_3__0 )* )
            {
            // InternalMoniLog.g:10636:1: ( ( rule__Atomic__Group_4_3__0 )* )
            // InternalMoniLog.g:10637:2: ( rule__Atomic__Group_4_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getGroup_4_3()); 
            }
            // InternalMoniLog.g:10638:2: ( rule__Atomic__Group_4_3__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==42) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalMoniLog.g:10638:3: rule__Atomic__Group_4_3__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__Atomic__Group_4_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getGroup_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__3__Impl"


    // $ANTLR start "rule__Atomic__Group_4__4"
    // InternalMoniLog.g:10646:1: rule__Atomic__Group_4__4 : rule__Atomic__Group_4__4__Impl ;
    public final void rule__Atomic__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10650:1: ( rule__Atomic__Group_4__4__Impl )
            // InternalMoniLog.g:10651:2: rule__Atomic__Group_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__4"


    // $ANTLR start "rule__Atomic__Group_4__4__Impl"
    // InternalMoniLog.g:10657:1: rule__Atomic__Group_4__4__Impl : ( ']' ) ;
    public final void rule__Atomic__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10661:1: ( ( ']' ) )
            // InternalMoniLog.g:10662:1: ( ']' )
            {
            // InternalMoniLog.g:10662:1: ( ']' )
            // InternalMoniLog.g:10663:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getRightSquareBracketKeyword_4_4()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getRightSquareBracketKeyword_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4__4__Impl"


    // $ANTLR start "rule__Atomic__Group_4_3__0"
    // InternalMoniLog.g:10673:1: rule__Atomic__Group_4_3__0 : rule__Atomic__Group_4_3__0__Impl rule__Atomic__Group_4_3__1 ;
    public final void rule__Atomic__Group_4_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10677:1: ( rule__Atomic__Group_4_3__0__Impl rule__Atomic__Group_4_3__1 )
            // InternalMoniLog.g:10678:2: rule__Atomic__Group_4_3__0__Impl rule__Atomic__Group_4_3__1
            {
            pushFollow(FOLLOW_53);
            rule__Atomic__Group_4_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4_3__0"


    // $ANTLR start "rule__Atomic__Group_4_3__0__Impl"
    // InternalMoniLog.g:10685:1: rule__Atomic__Group_4_3__0__Impl : ( ',' ) ;
    public final void rule__Atomic__Group_4_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10689:1: ( ( ',' ) )
            // InternalMoniLog.g:10690:1: ( ',' )
            {
            // InternalMoniLog.g:10690:1: ( ',' )
            // InternalMoniLog.g:10691:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getCommaKeyword_4_3_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getCommaKeyword_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4_3__0__Impl"


    // $ANTLR start "rule__Atomic__Group_4_3__1"
    // InternalMoniLog.g:10700:1: rule__Atomic__Group_4_3__1 : rule__Atomic__Group_4_3__1__Impl ;
    public final void rule__Atomic__Group_4_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10704:1: ( rule__Atomic__Group_4_3__1__Impl )
            // InternalMoniLog.g:10705:2: rule__Atomic__Group_4_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__Group_4_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4_3__1"


    // $ANTLR start "rule__Atomic__Group_4_3__1__Impl"
    // InternalMoniLog.g:10711:1: rule__Atomic__Group_4_3__1__Impl : ( ( rule__Atomic__ValuesAssignment_4_3_1 ) ) ;
    public final void rule__Atomic__Group_4_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10715:1: ( ( ( rule__Atomic__ValuesAssignment_4_3_1 ) ) )
            // InternalMoniLog.g:10716:1: ( ( rule__Atomic__ValuesAssignment_4_3_1 ) )
            {
            // InternalMoniLog.g:10716:1: ( ( rule__Atomic__ValuesAssignment_4_3_1 ) )
            // InternalMoniLog.g:10717:2: ( rule__Atomic__ValuesAssignment_4_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValuesAssignment_4_3_1()); 
            }
            // InternalMoniLog.g:10718:2: ( rule__Atomic__ValuesAssignment_4_3_1 )
            // InternalMoniLog.g:10718:3: rule__Atomic__ValuesAssignment_4_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Atomic__ValuesAssignment_4_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValuesAssignment_4_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__Group_4_3__1__Impl"


    // $ANTLR start "rule__Ref__Group__0"
    // InternalMoniLog.g:10727:1: rule__Ref__Group__0 : rule__Ref__Group__0__Impl rule__Ref__Group__1 ;
    public final void rule__Ref__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10731:1: ( rule__Ref__Group__0__Impl rule__Ref__Group__1 )
            // InternalMoniLog.g:10732:2: rule__Ref__Group__0__Impl rule__Ref__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__Ref__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group__0"


    // $ANTLR start "rule__Ref__Group__0__Impl"
    // InternalMoniLog.g:10739:1: rule__Ref__Group__0__Impl : ( ruleSimpleVarRef ) ;
    public final void rule__Ref__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10743:1: ( ( ruleSimpleVarRef ) )
            // InternalMoniLog.g:10744:1: ( ruleSimpleVarRef )
            {
            // InternalMoniLog.g:10744:1: ( ruleSimpleVarRef )
            // InternalMoniLog.g:10745:2: ruleSimpleVarRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getSimpleVarRefParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleVarRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getSimpleVarRefParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group__0__Impl"


    // $ANTLR start "rule__Ref__Group__1"
    // InternalMoniLog.g:10754:1: rule__Ref__Group__1 : rule__Ref__Group__1__Impl ;
    public final void rule__Ref__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10758:1: ( rule__Ref__Group__1__Impl )
            // InternalMoniLog.g:10759:2: rule__Ref__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Ref__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group__1"


    // $ANTLR start "rule__Ref__Group__1__Impl"
    // InternalMoniLog.g:10765:1: rule__Ref__Group__1__Impl : ( ( rule__Ref__Alternatives_1 )* ) ;
    public final void rule__Ref__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10769:1: ( ( ( rule__Ref__Alternatives_1 )* ) )
            // InternalMoniLog.g:10770:1: ( ( rule__Ref__Alternatives_1 )* )
            {
            // InternalMoniLog.g:10770:1: ( ( rule__Ref__Alternatives_1 )* )
            // InternalMoniLog.g:10771:2: ( rule__Ref__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getAlternatives_1()); 
            }
            // InternalMoniLog.g:10772:2: ( rule__Ref__Alternatives_1 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==47||LA75_0==66) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalMoniLog.g:10772:3: rule__Ref__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_81);
            	    rule__Ref__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group__1__Impl"


    // $ANTLR start "rule__Ref__Group_1_0__0"
    // InternalMoniLog.g:10781:1: rule__Ref__Group_1_0__0 : rule__Ref__Group_1_0__0__Impl rule__Ref__Group_1_0__1 ;
    public final void rule__Ref__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10785:1: ( rule__Ref__Group_1_0__0__Impl rule__Ref__Group_1_0__1 )
            // InternalMoniLog.g:10786:2: rule__Ref__Group_1_0__0__Impl rule__Ref__Group_1_0__1
            {
            pushFollow(FOLLOW_78);
            rule__Ref__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__0"


    // $ANTLR start "rule__Ref__Group_1_0__0__Impl"
    // InternalMoniLog.g:10793:1: rule__Ref__Group_1_0__0__Impl : ( () ) ;
    public final void rule__Ref__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10797:1: ( ( () ) )
            // InternalMoniLog.g:10798:1: ( () )
            {
            // InternalMoniLog.g:10798:1: ( () )
            // InternalMoniLog.g:10799:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getArrayRefArrayAction_1_0_0()); 
            }
            // InternalMoniLog.g:10800:2: ()
            // InternalMoniLog.g:10800:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getArrayRefArrayAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__0__Impl"


    // $ANTLR start "rule__Ref__Group_1_0__1"
    // InternalMoniLog.g:10808:1: rule__Ref__Group_1_0__1 : rule__Ref__Group_1_0__1__Impl rule__Ref__Group_1_0__2 ;
    public final void rule__Ref__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10812:1: ( rule__Ref__Group_1_0__1__Impl rule__Ref__Group_1_0__2 )
            // InternalMoniLog.g:10813:2: rule__Ref__Group_1_0__1__Impl rule__Ref__Group_1_0__2
            {
            pushFollow(FOLLOW_53);
            rule__Ref__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__1"


    // $ANTLR start "rule__Ref__Group_1_0__1__Impl"
    // InternalMoniLog.g:10820:1: rule__Ref__Group_1_0__1__Impl : ( '[' ) ;
    public final void rule__Ref__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10824:1: ( ( '[' ) )
            // InternalMoniLog.g:10825:1: ( '[' )
            {
            // InternalMoniLog.g:10825:1: ( '[' )
            // InternalMoniLog.g:10826:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getLeftSquareBracketKeyword_1_0_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getLeftSquareBracketKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__1__Impl"


    // $ANTLR start "rule__Ref__Group_1_0__2"
    // InternalMoniLog.g:10835:1: rule__Ref__Group_1_0__2 : rule__Ref__Group_1_0__2__Impl rule__Ref__Group_1_0__3 ;
    public final void rule__Ref__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10839:1: ( rule__Ref__Group_1_0__2__Impl rule__Ref__Group_1_0__3 )
            // InternalMoniLog.g:10840:2: rule__Ref__Group_1_0__2__Impl rule__Ref__Group_1_0__3
            {
            pushFollow(FOLLOW_79);
            rule__Ref__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__2"


    // $ANTLR start "rule__Ref__Group_1_0__2__Impl"
    // InternalMoniLog.g:10847:1: rule__Ref__Group_1_0__2__Impl : ( ( rule__Ref__IndicesAssignment_1_0_2 ) ) ;
    public final void rule__Ref__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10851:1: ( ( ( rule__Ref__IndicesAssignment_1_0_2 ) ) )
            // InternalMoniLog.g:10852:1: ( ( rule__Ref__IndicesAssignment_1_0_2 ) )
            {
            // InternalMoniLog.g:10852:1: ( ( rule__Ref__IndicesAssignment_1_0_2 ) )
            // InternalMoniLog.g:10853:2: ( rule__Ref__IndicesAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getIndicesAssignment_1_0_2()); 
            }
            // InternalMoniLog.g:10854:2: ( rule__Ref__IndicesAssignment_1_0_2 )
            // InternalMoniLog.g:10854:3: rule__Ref__IndicesAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Ref__IndicesAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getIndicesAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__2__Impl"


    // $ANTLR start "rule__Ref__Group_1_0__3"
    // InternalMoniLog.g:10862:1: rule__Ref__Group_1_0__3 : rule__Ref__Group_1_0__3__Impl rule__Ref__Group_1_0__4 ;
    public final void rule__Ref__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10866:1: ( rule__Ref__Group_1_0__3__Impl rule__Ref__Group_1_0__4 )
            // InternalMoniLog.g:10867:2: rule__Ref__Group_1_0__3__Impl rule__Ref__Group_1_0__4
            {
            pushFollow(FOLLOW_79);
            rule__Ref__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__3"


    // $ANTLR start "rule__Ref__Group_1_0__3__Impl"
    // InternalMoniLog.g:10874:1: rule__Ref__Group_1_0__3__Impl : ( ( rule__Ref__Group_1_0_3__0 )* ) ;
    public final void rule__Ref__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10878:1: ( ( ( rule__Ref__Group_1_0_3__0 )* ) )
            // InternalMoniLog.g:10879:1: ( ( rule__Ref__Group_1_0_3__0 )* )
            {
            // InternalMoniLog.g:10879:1: ( ( rule__Ref__Group_1_0_3__0 )* )
            // InternalMoniLog.g:10880:2: ( rule__Ref__Group_1_0_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getGroup_1_0_3()); 
            }
            // InternalMoniLog.g:10881:2: ( rule__Ref__Group_1_0_3__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==42) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalMoniLog.g:10881:3: rule__Ref__Group_1_0_3__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__Ref__Group_1_0_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getGroup_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__3__Impl"


    // $ANTLR start "rule__Ref__Group_1_0__4"
    // InternalMoniLog.g:10889:1: rule__Ref__Group_1_0__4 : rule__Ref__Group_1_0__4__Impl ;
    public final void rule__Ref__Group_1_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10893:1: ( rule__Ref__Group_1_0__4__Impl )
            // InternalMoniLog.g:10894:2: rule__Ref__Group_1_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__4"


    // $ANTLR start "rule__Ref__Group_1_0__4__Impl"
    // InternalMoniLog.g:10900:1: rule__Ref__Group_1_0__4__Impl : ( ']' ) ;
    public final void rule__Ref__Group_1_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10904:1: ( ( ']' ) )
            // InternalMoniLog.g:10905:1: ( ']' )
            {
            // InternalMoniLog.g:10905:1: ( ']' )
            // InternalMoniLog.g:10906:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getRightSquareBracketKeyword_1_0_4()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getRightSquareBracketKeyword_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0__4__Impl"


    // $ANTLR start "rule__Ref__Group_1_0_3__0"
    // InternalMoniLog.g:10916:1: rule__Ref__Group_1_0_3__0 : rule__Ref__Group_1_0_3__0__Impl rule__Ref__Group_1_0_3__1 ;
    public final void rule__Ref__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10920:1: ( rule__Ref__Group_1_0_3__0__Impl rule__Ref__Group_1_0_3__1 )
            // InternalMoniLog.g:10921:2: rule__Ref__Group_1_0_3__0__Impl rule__Ref__Group_1_0_3__1
            {
            pushFollow(FOLLOW_53);
            rule__Ref__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0_3__0"


    // $ANTLR start "rule__Ref__Group_1_0_3__0__Impl"
    // InternalMoniLog.g:10928:1: rule__Ref__Group_1_0_3__0__Impl : ( ',' ) ;
    public final void rule__Ref__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10932:1: ( ( ',' ) )
            // InternalMoniLog.g:10933:1: ( ',' )
            {
            // InternalMoniLog.g:10933:1: ( ',' )
            // InternalMoniLog.g:10934:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getCommaKeyword_1_0_3_0()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getCommaKeyword_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Ref__Group_1_0_3__1"
    // InternalMoniLog.g:10943:1: rule__Ref__Group_1_0_3__1 : rule__Ref__Group_1_0_3__1__Impl ;
    public final void rule__Ref__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10947:1: ( rule__Ref__Group_1_0_3__1__Impl )
            // InternalMoniLog.g:10948:2: rule__Ref__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0_3__1"


    // $ANTLR start "rule__Ref__Group_1_0_3__1__Impl"
    // InternalMoniLog.g:10954:1: rule__Ref__Group_1_0_3__1__Impl : ( ( rule__Ref__IndicesAssignment_1_0_3_1 ) ) ;
    public final void rule__Ref__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10958:1: ( ( ( rule__Ref__IndicesAssignment_1_0_3_1 ) ) )
            // InternalMoniLog.g:10959:1: ( ( rule__Ref__IndicesAssignment_1_0_3_1 ) )
            {
            // InternalMoniLog.g:10959:1: ( ( rule__Ref__IndicesAssignment_1_0_3_1 ) )
            // InternalMoniLog.g:10960:2: ( rule__Ref__IndicesAssignment_1_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getIndicesAssignment_1_0_3_1()); 
            }
            // InternalMoniLog.g:10961:2: ( rule__Ref__IndicesAssignment_1_0_3_1 )
            // InternalMoniLog.g:10961:3: rule__Ref__IndicesAssignment_1_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Ref__IndicesAssignment_1_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getIndicesAssignment_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Ref__Group_1_1__0"
    // InternalMoniLog.g:10970:1: rule__Ref__Group_1_1__0 : rule__Ref__Group_1_1__0__Impl rule__Ref__Group_1_1__1 ;
    public final void rule__Ref__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10974:1: ( rule__Ref__Group_1_1__0__Impl rule__Ref__Group_1_1__1 )
            // InternalMoniLog.g:10975:2: rule__Ref__Group_1_1__0__Impl rule__Ref__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__Ref__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__0"


    // $ANTLR start "rule__Ref__Group_1_1__0__Impl"
    // InternalMoniLog.g:10982:1: rule__Ref__Group_1_1__0__Impl : ( () ) ;
    public final void rule__Ref__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:10986:1: ( ( () ) )
            // InternalMoniLog.g:10987:1: ( () )
            {
            // InternalMoniLog.g:10987:1: ( () )
            // InternalMoniLog.g:10988:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getPropertyRefObjectAction_1_1_0()); 
            }
            // InternalMoniLog.g:10989:2: ()
            // InternalMoniLog.g:10989:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getPropertyRefObjectAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__0__Impl"


    // $ANTLR start "rule__Ref__Group_1_1__1"
    // InternalMoniLog.g:10997:1: rule__Ref__Group_1_1__1 : rule__Ref__Group_1_1__1__Impl rule__Ref__Group_1_1__2 ;
    public final void rule__Ref__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11001:1: ( rule__Ref__Group_1_1__1__Impl rule__Ref__Group_1_1__2 )
            // InternalMoniLog.g:11002:2: rule__Ref__Group_1_1__1__Impl rule__Ref__Group_1_1__2
            {
            pushFollow(FOLLOW_3);
            rule__Ref__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__1"


    // $ANTLR start "rule__Ref__Group_1_1__1__Impl"
    // InternalMoniLog.g:11009:1: rule__Ref__Group_1_1__1__Impl : ( '.' ) ;
    public final void rule__Ref__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11013:1: ( ( '.' ) )
            // InternalMoniLog.g:11014:1: ( '.' )
            {
            // InternalMoniLog.g:11014:1: ( '.' )
            // InternalMoniLog.g:11015:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getFullStopKeyword_1_1_1()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getFullStopKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__1__Impl"


    // $ANTLR start "rule__Ref__Group_1_1__2"
    // InternalMoniLog.g:11024:1: rule__Ref__Group_1_1__2 : rule__Ref__Group_1_1__2__Impl ;
    public final void rule__Ref__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11028:1: ( rule__Ref__Group_1_1__2__Impl )
            // InternalMoniLog.g:11029:2: rule__Ref__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Ref__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__2"


    // $ANTLR start "rule__Ref__Group_1_1__2__Impl"
    // InternalMoniLog.g:11035:1: rule__Ref__Group_1_1__2__Impl : ( ( rule__Ref__PropertyAssignment_1_1_2 ) ) ;
    public final void rule__Ref__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11039:1: ( ( ( rule__Ref__PropertyAssignment_1_1_2 ) ) )
            // InternalMoniLog.g:11040:1: ( ( rule__Ref__PropertyAssignment_1_1_2 ) )
            {
            // InternalMoniLog.g:11040:1: ( ( rule__Ref__PropertyAssignment_1_1_2 ) )
            // InternalMoniLog.g:11041:2: ( rule__Ref__PropertyAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getPropertyAssignment_1_1_2()); 
            }
            // InternalMoniLog.g:11042:2: ( rule__Ref__PropertyAssignment_1_1_2 )
            // InternalMoniLog.g:11042:3: rule__Ref__PropertyAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Ref__PropertyAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getPropertyAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__Group_1_1__2__Impl"


    // $ANTLR start "rule__ArraySize__Group__0"
    // InternalMoniLog.g:11051:1: rule__ArraySize__Group__0 : rule__ArraySize__Group__0__Impl rule__ArraySize__Group__1 ;
    public final void rule__ArraySize__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11055:1: ( rule__ArraySize__Group__0__Impl rule__ArraySize__Group__1 )
            // InternalMoniLog.g:11056:2: rule__ArraySize__Group__0__Impl rule__ArraySize__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__ArraySize__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArraySize__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__0"


    // $ANTLR start "rule__ArraySize__Group__0__Impl"
    // InternalMoniLog.g:11063:1: rule__ArraySize__Group__0__Impl : ( 'sizeOf' ) ;
    public final void rule__ArraySize__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11067:1: ( ( 'sizeOf' ) )
            // InternalMoniLog.g:11068:1: ( 'sizeOf' )
            {
            // InternalMoniLog.g:11068:1: ( 'sizeOf' )
            // InternalMoniLog.g:11069:2: 'sizeOf'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getSizeOfKeyword_0()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getSizeOfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__0__Impl"


    // $ANTLR start "rule__ArraySize__Group__1"
    // InternalMoniLog.g:11078:1: rule__ArraySize__Group__1 : rule__ArraySize__Group__1__Impl rule__ArraySize__Group__2 ;
    public final void rule__ArraySize__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11082:1: ( rule__ArraySize__Group__1__Impl rule__ArraySize__Group__2 )
            // InternalMoniLog.g:11083:2: rule__ArraySize__Group__1__Impl rule__ArraySize__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__ArraySize__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArraySize__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__1"


    // $ANTLR start "rule__ArraySize__Group__1__Impl"
    // InternalMoniLog.g:11090:1: rule__ArraySize__Group__1__Impl : ( '(' ) ;
    public final void rule__ArraySize__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11094:1: ( ( '(' ) )
            // InternalMoniLog.g:11095:1: ( '(' )
            {
            // InternalMoniLog.g:11095:1: ( '(' )
            // InternalMoniLog.g:11096:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__1__Impl"


    // $ANTLR start "rule__ArraySize__Group__2"
    // InternalMoniLog.g:11105:1: rule__ArraySize__Group__2 : rule__ArraySize__Group__2__Impl rule__ArraySize__Group__3 ;
    public final void rule__ArraySize__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11109:1: ( rule__ArraySize__Group__2__Impl rule__ArraySize__Group__3 )
            // InternalMoniLog.g:11110:2: rule__ArraySize__Group__2__Impl rule__ArraySize__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__ArraySize__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArraySize__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__2"


    // $ANTLR start "rule__ArraySize__Group__2__Impl"
    // InternalMoniLog.g:11117:1: rule__ArraySize__Group__2__Impl : ( ( rule__ArraySize__ArrayAssignment_2 ) ) ;
    public final void rule__ArraySize__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11121:1: ( ( ( rule__ArraySize__ArrayAssignment_2 ) ) )
            // InternalMoniLog.g:11122:1: ( ( rule__ArraySize__ArrayAssignment_2 ) )
            {
            // InternalMoniLog.g:11122:1: ( ( rule__ArraySize__ArrayAssignment_2 ) )
            // InternalMoniLog.g:11123:2: ( rule__ArraySize__ArrayAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getArrayAssignment_2()); 
            }
            // InternalMoniLog.g:11124:2: ( rule__ArraySize__ArrayAssignment_2 )
            // InternalMoniLog.g:11124:3: rule__ArraySize__ArrayAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ArraySize__ArrayAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getArrayAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__2__Impl"


    // $ANTLR start "rule__ArraySize__Group__3"
    // InternalMoniLog.g:11132:1: rule__ArraySize__Group__3 : rule__ArraySize__Group__3__Impl ;
    public final void rule__ArraySize__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11136:1: ( rule__ArraySize__Group__3__Impl )
            // InternalMoniLog.g:11137:2: rule__ArraySize__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArraySize__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__3"


    // $ANTLR start "rule__ArraySize__Group__3__Impl"
    // InternalMoniLog.g:11143:1: rule__ArraySize__Group__3__Impl : ( ')' ) ;
    public final void rule__ArraySize__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11147:1: ( ( ')' ) )
            // InternalMoniLog.g:11148:1: ( ')' )
            {
            // InternalMoniLog.g:11148:1: ( ')' )
            // InternalMoniLog.g:11149:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__Group__3__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalMoniLog.g:11159:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11163:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalMoniLog.g:11164:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalMoniLog.g:11171:1: rule__QualifiedName__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11175:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11176:1: ( RULE_ID )
            {
            // InternalMoniLog.g:11176:1: ( RULE_ID )
            // InternalMoniLog.g:11177:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalMoniLog.g:11186:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11190:1: ( rule__QualifiedName__Group__1__Impl )
            // InternalMoniLog.g:11191:2: rule__QualifiedName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalMoniLog.g:11197:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11201:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalMoniLog.g:11202:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalMoniLog.g:11202:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalMoniLog.g:11203:2: ( rule__QualifiedName__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }
            // InternalMoniLog.g:11204:2: ( rule__QualifiedName__Group_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==66) ) {
                    int LA77_2 = input.LA(2);

                    if ( (LA77_2==RULE_ID) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalMoniLog.g:11204:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_82);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalMoniLog.g:11213:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11217:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalMoniLog.g:11218:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_3);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalMoniLog.g:11225:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11229:1: ( ( '.' ) )
            // InternalMoniLog.g:11230:1: ( '.' )
            {
            // InternalMoniLog.g:11230:1: ( '.' )
            // InternalMoniLog.g:11231:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalMoniLog.g:11240:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11244:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalMoniLog.g:11245:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalMoniLog.g:11251:1: rule__QualifiedName__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11255:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11256:1: ( RULE_ID )
            {
            // InternalMoniLog.g:11256:1: ( RULE_ID )
            // InternalMoniLog.g:11257:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0"
    // InternalMoniLog.g:11267:1: rule__QualifiedNameWithWildcard__Group__0 : rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 ;
    public final void rule__QualifiedNameWithWildcard__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11271:1: ( rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1 )
            // InternalMoniLog.g:11272:2: rule__QualifiedNameWithWildcard__Group__0__Impl rule__QualifiedNameWithWildcard__Group__1
            {
            pushFollow(FOLLOW_83);
            rule__QualifiedNameWithWildcard__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__0__Impl"
    // InternalMoniLog.g:11279:1: rule__QualifiedNameWithWildcard__Group__0__Impl : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameWithWildcard__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11283:1: ( ( ruleQualifiedName ) )
            // InternalMoniLog.g:11284:1: ( ruleQualifiedName )
            {
            // InternalMoniLog.g:11284:1: ( ruleQualifiedName )
            // InternalMoniLog.g:11285:2: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1"
    // InternalMoniLog.g:11294:1: rule__QualifiedNameWithWildcard__Group__1 : rule__QualifiedNameWithWildcard__Group__1__Impl ;
    public final void rule__QualifiedNameWithWildcard__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11298:1: ( rule__QualifiedNameWithWildcard__Group__1__Impl )
            // InternalMoniLog.g:11299:2: rule__QualifiedNameWithWildcard__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameWithWildcard__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1"


    // $ANTLR start "rule__QualifiedNameWithWildcard__Group__1__Impl"
    // InternalMoniLog.g:11305:1: rule__QualifiedNameWithWildcard__Group__1__Impl : ( ( '.*' )? ) ;
    public final void rule__QualifiedNameWithWildcard__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11309:1: ( ( ( '.*' )? ) )
            // InternalMoniLog.g:11310:1: ( ( '.*' )? )
            {
            // InternalMoniLog.g:11310:1: ( ( '.*' )? )
            // InternalMoniLog.g:11311:2: ( '.*' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }
            // InternalMoniLog.g:11312:2: ( '.*' )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==76) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalMoniLog.g:11312:3: '.*'
                    {
                    match(input,76,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameWithWildcard__Group__1__Impl"


    // $ANTLR start "rule__Document__UnorderedGroup_3"
    // InternalMoniLog.g:11321:1: rule__Document__UnorderedGroup_3 : ( rule__Document__UnorderedGroup_3__0 )? ;
    public final void rule__Document__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDocumentAccess().getUnorderedGroup_3());
        	
        try {
            // InternalMoniLog.g:11326:1: ( ( rule__Document__UnorderedGroup_3__0 )? )
            // InternalMoniLog.g:11327:2: ( rule__Document__UnorderedGroup_3__0 )?
            {
            // InternalMoniLog.g:11327:2: ( rule__Document__UnorderedGroup_3__0 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalMoniLog.g:0:0: rule__Document__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Document__UnorderedGroup_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDocumentAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3"


    // $ANTLR start "rule__Document__UnorderedGroup_3__Impl"
    // InternalMoniLog.g:11335:1: rule__Document__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) ) ) ;
    public final void rule__Document__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalMoniLog.g:11340:1: ( ( ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) ) ) )
            // InternalMoniLog.g:11341:3: ( ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) ) )
            {
            // InternalMoniLog.g:11341:3: ( ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) ) )
            int alt84=4;
            int LA84_0 = input.LA(1);

            if ( LA84_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {
                alt84=2;
            }
            else if ( LA84_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {
                alt84=2;
            }
            else if ( LA84_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {
                alt84=3;
            }
            else if ( ( LA84_0 == 12 || LA84_0 == 44 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {
                alt84=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalMoniLog.g:11342:3: ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) )
                    {
                    // InternalMoniLog.g:11342:3: ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) )
                    // InternalMoniLog.g:11343:4: {...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Document__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalMoniLog.g:11343:104: ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) )
                    // InternalMoniLog.g:11344:5: ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0);
                    selected = true;
                    // InternalMoniLog.g:11350:5: ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) )
                    // InternalMoniLog.g:11351:6: ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* )
                    {
                    // InternalMoniLog.g:11351:6: ( ( rule__Document__EventsAssignment_3_0 ) )
                    // InternalMoniLog.g:11352:7: ( rule__Document__EventsAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
                    }
                    // InternalMoniLog.g:11353:7: ( rule__Document__EventsAssignment_3_0 )
                    // InternalMoniLog.g:11353:8: rule__Document__EventsAssignment_3_0
                    {
                    pushFollow(FOLLOW_84);
                    rule__Document__EventsAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
                    }

                    }

                    // InternalMoniLog.g:11356:6: ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* )
                    // InternalMoniLog.g:11357:7: ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
                    }
                    // InternalMoniLog.g:11358:7: ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )*
                    loop80:
                    do {
                        int alt80=2;
                        alt80 = dfa80.predict(input);
                        switch (alt80) {
                    	case 1 :
                    	    // InternalMoniLog.g:11358:8: ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0
                    	    {
                    	    pushFollow(FOLLOW_84);
                    	    rule__Document__EventsAssignment_3_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMoniLog.g:11364:3: ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) )
                    {
                    // InternalMoniLog.g:11364:3: ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) )
                    // InternalMoniLog.g:11365:4: {...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Document__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalMoniLog.g:11365:104: ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) )
                    // InternalMoniLog.g:11366:5: ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1);
                    selected = true;
                    // InternalMoniLog.g:11372:5: ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) )
                    // InternalMoniLog.g:11373:6: ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* )
                    {
                    // InternalMoniLog.g:11373:6: ( ( rule__Document__AppendersAssignment_3_1 ) )
                    // InternalMoniLog.g:11374:7: ( rule__Document__AppendersAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
                    }
                    // InternalMoniLog.g:11375:7: ( rule__Document__AppendersAssignment_3_1 )
                    // InternalMoniLog.g:11375:8: rule__Document__AppendersAssignment_3_1
                    {
                    pushFollow(FOLLOW_85);
                    rule__Document__AppendersAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
                    }

                    }

                    // InternalMoniLog.g:11378:6: ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* )
                    // InternalMoniLog.g:11379:7: ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
                    }
                    // InternalMoniLog.g:11380:7: ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )*
                    loop81:
                    do {
                        int alt81=2;
                        alt81 = dfa81.predict(input);
                        switch (alt81) {
                    	case 1 :
                    	    // InternalMoniLog.g:11380:8: ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1
                    	    {
                    	    pushFollow(FOLLOW_85);
                    	    rule__Document__AppendersAssignment_3_1();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMoniLog.g:11386:3: ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) )
                    {
                    // InternalMoniLog.g:11386:3: ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) )
                    // InternalMoniLog.g:11387:4: {...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Document__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalMoniLog.g:11387:104: ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) )
                    // InternalMoniLog.g:11388:5: ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2);
                    selected = true;
                    // InternalMoniLog.g:11394:5: ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) )
                    // InternalMoniLog.g:11395:6: ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* )
                    {
                    // InternalMoniLog.g:11395:6: ( ( rule__Document__LayoutsAssignment_3_2 ) )
                    // InternalMoniLog.g:11396:7: ( rule__Document__LayoutsAssignment_3_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
                    }
                    // InternalMoniLog.g:11397:7: ( rule__Document__LayoutsAssignment_3_2 )
                    // InternalMoniLog.g:11397:8: rule__Document__LayoutsAssignment_3_2
                    {
                    pushFollow(FOLLOW_86);
                    rule__Document__LayoutsAssignment_3_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
                    }

                    }

                    // InternalMoniLog.g:11400:6: ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* )
                    // InternalMoniLog.g:11401:7: ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
                    }
                    // InternalMoniLog.g:11402:7: ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )*
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==41) ) {
                            int LA82_2 = input.LA(2);

                            if ( (LA82_2==RULE_ID) ) {
                                int LA82_3 = input.LA(3);

                                if ( (synpred112_InternalMoniLog()) ) {
                                    alt82=1;
                                }


                            }


                        }


                        switch (alt82) {
                    	case 1 :
                    	    // InternalMoniLog.g:11402:8: ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2
                    	    {
                    	    pushFollow(FOLLOW_86);
                    	    rule__Document__LayoutsAssignment_3_2();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop82;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMoniLog.g:11408:3: ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) )
                    {
                    // InternalMoniLog.g:11408:3: ({...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) ) )
                    // InternalMoniLog.g:11409:4: {...}? => ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Document__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalMoniLog.g:11409:104: ( ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) ) )
                    // InternalMoniLog.g:11410:5: ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3);
                    selected = true;
                    // InternalMoniLog.g:11416:5: ( ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* ) )
                    // InternalMoniLog.g:11417:6: ( ( rule__Document__MoniloggersAssignment_3_3 ) ) ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* )
                    {
                    // InternalMoniLog.g:11417:6: ( ( rule__Document__MoniloggersAssignment_3_3 ) )
                    // InternalMoniLog.g:11418:7: ( rule__Document__MoniloggersAssignment_3_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getMoniloggersAssignment_3_3()); 
                    }
                    // InternalMoniLog.g:11419:7: ( rule__Document__MoniloggersAssignment_3_3 )
                    // InternalMoniLog.g:11419:8: rule__Document__MoniloggersAssignment_3_3
                    {
                    pushFollow(FOLLOW_87);
                    rule__Document__MoniloggersAssignment_3_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getMoniloggersAssignment_3_3()); 
                    }

                    }

                    // InternalMoniLog.g:11422:6: ( ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )* )
                    // InternalMoniLog.g:11423:7: ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDocumentAccess().getMoniloggersAssignment_3_3()); 
                    }
                    // InternalMoniLog.g:11424:7: ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )*
                    loop83:
                    do {
                        int alt83=2;
                        alt83 = dfa83.predict(input);
                        switch (alt83) {
                    	case 1 :
                    	    // InternalMoniLog.g:11424:8: ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3
                    	    {
                    	    pushFollow(FOLLOW_87);
                    	    rule__Document__MoniloggersAssignment_3_3();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDocumentAccess().getMoniloggersAssignment_3_3()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocumentAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Document__UnorderedGroup_3__0"
    // InternalMoniLog.g:11438:1: rule__Document__UnorderedGroup_3__0 : rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__1 )? ;
    public final void rule__Document__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11442:1: ( rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__1 )? )
            // InternalMoniLog.g:11443:2: rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_87);
            rule__Document__UnorderedGroup_3__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalMoniLog.g:11444:2: ( rule__Document__UnorderedGroup_3__1 )?
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalMoniLog.g:0:0: rule__Document__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Document__UnorderedGroup_3__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3__0"


    // $ANTLR start "rule__Document__UnorderedGroup_3__1"
    // InternalMoniLog.g:11450:1: rule__Document__UnorderedGroup_3__1 : rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__2 )? ;
    public final void rule__Document__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11454:1: ( rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__2 )? )
            // InternalMoniLog.g:11455:2: rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_87);
            rule__Document__UnorderedGroup_3__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalMoniLog.g:11456:2: ( rule__Document__UnorderedGroup_3__2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalMoniLog.g:0:0: rule__Document__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Document__UnorderedGroup_3__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3__1"


    // $ANTLR start "rule__Document__UnorderedGroup_3__2"
    // InternalMoniLog.g:11462:1: rule__Document__UnorderedGroup_3__2 : rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__3 )? ;
    public final void rule__Document__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11466:1: ( rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__3 )? )
            // InternalMoniLog.g:11467:2: rule__Document__UnorderedGroup_3__Impl ( rule__Document__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_87);
            rule__Document__UnorderedGroup_3__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalMoniLog.g:11468:2: ( rule__Document__UnorderedGroup_3__3 )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalMoniLog.g:0:0: rule__Document__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Document__UnorderedGroup_3__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3__2"


    // $ANTLR start "rule__Document__UnorderedGroup_3__3"
    // InternalMoniLog.g:11474:1: rule__Document__UnorderedGroup_3__3 : rule__Document__UnorderedGroup_3__Impl ;
    public final void rule__Document__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11478:1: ( rule__Document__UnorderedGroup_3__Impl )
            // InternalMoniLog.g:11479:2: rule__Document__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Document__UnorderedGroup_3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__UnorderedGroup_3__3"


    // $ANTLR start "rule__Document__NameAssignment_1"
    // InternalMoniLog.g:11486:1: rule__Document__NameAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__Document__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11490:1: ( ( ruleQualifiedName ) )
            // InternalMoniLog.g:11491:2: ( ruleQualifiedName )
            {
            // InternalMoniLog.g:11491:2: ( ruleQualifiedName )
            // InternalMoniLog.g:11492:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__NameAssignment_1"


    // $ANTLR start "rule__Document__ImportsAssignment_2"
    // InternalMoniLog.g:11501:1: rule__Document__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Document__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11505:1: ( ( ruleImport ) )
            // InternalMoniLog.g:11506:2: ( ruleImport )
            {
            // InternalMoniLog.g:11506:2: ( ruleImport )
            // InternalMoniLog.g:11507:3: ruleImport
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getImportsImportParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getImportsImportParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__ImportsAssignment_2"


    // $ANTLR start "rule__Document__EventsAssignment_3_0"
    // InternalMoniLog.g:11516:1: rule__Document__EventsAssignment_3_0 : ( ruleEvent ) ;
    public final void rule__Document__EventsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11520:1: ( ( ruleEvent ) )
            // InternalMoniLog.g:11521:2: ( ruleEvent )
            {
            // InternalMoniLog.g:11521:2: ( ruleEvent )
            // InternalMoniLog.g:11522:3: ruleEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getEventsEventParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getEventsEventParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__EventsAssignment_3_0"


    // $ANTLR start "rule__Document__AppendersAssignment_3_1"
    // InternalMoniLog.g:11531:1: rule__Document__AppendersAssignment_3_1 : ( ruleAppender ) ;
    public final void rule__Document__AppendersAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11535:1: ( ( ruleAppender ) )
            // InternalMoniLog.g:11536:2: ( ruleAppender )
            {
            // InternalMoniLog.g:11536:2: ( ruleAppender )
            // InternalMoniLog.g:11537:3: ruleAppender
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getAppendersAppenderParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAppender();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getAppendersAppenderParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__AppendersAssignment_3_1"


    // $ANTLR start "rule__Document__LayoutsAssignment_3_2"
    // InternalMoniLog.g:11546:1: rule__Document__LayoutsAssignment_3_2 : ( ruleLayout ) ;
    public final void rule__Document__LayoutsAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11550:1: ( ( ruleLayout ) )
            // InternalMoniLog.g:11551:2: ( ruleLayout )
            {
            // InternalMoniLog.g:11551:2: ( ruleLayout )
            // InternalMoniLog.g:11552:3: ruleLayout
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getLayoutsLayoutParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLayout();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getLayoutsLayoutParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__LayoutsAssignment_3_2"


    // $ANTLR start "rule__Document__MoniloggersAssignment_3_3"
    // InternalMoniLog.g:11561:1: rule__Document__MoniloggersAssignment_3_3 : ( ruleMoniLogger ) ;
    public final void rule__Document__MoniloggersAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11565:1: ( ( ruleMoniLogger ) )
            // InternalMoniLog.g:11566:2: ( ruleMoniLogger )
            {
            // InternalMoniLog.g:11566:2: ( ruleMoniLogger )
            // InternalMoniLog.g:11567:3: ruleMoniLogger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDocumentAccess().getMoniloggersMoniLoggerParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMoniLogger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDocumentAccess().getMoniloggersMoniLoggerParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Document__MoniloggersAssignment_3_3"


    // $ANTLR start "rule__Import__ImportedNamespaceAssignment_0_1"
    // InternalMoniLog.g:11576:1: rule__Import__ImportedNamespaceAssignment_0_1 : ( ruleQualifiedNameWithWildcard ) ;
    public final void rule__Import__ImportedNamespaceAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11580:1: ( ( ruleQualifiedNameWithWildcard ) )
            // InternalMoniLog.g:11581:2: ( ruleQualifiedNameWithWildcard )
            {
            // InternalMoniLog.g:11581:2: ( ruleQualifiedNameWithWildcard )
            // InternalMoniLog.g:11582:3: ruleQualifiedNameWithWildcard
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamespaceAssignment_0_1"


    // $ANTLR start "rule__Import__AliasAssignment_1_1"
    // InternalMoniLog.g:11591:1: rule__Import__AliasAssignment_1_1 : ( ruleFileAlias ) ;
    public final void rule__Import__AliasAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11595:1: ( ( ruleFileAlias ) )
            // InternalMoniLog.g:11596:2: ( ruleFileAlias )
            {
            // InternalMoniLog.g:11596:2: ( ruleFileAlias )
            // InternalMoniLog.g:11597:3: ruleFileAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportAccess().getAliasFileAliasParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFileAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportAccess().getAliasFileAliasParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasAssignment_1_1"


    // $ANTLR start "rule__FileAlias__FilePathAssignment_0"
    // InternalMoniLog.g:11606:1: rule__FileAlias__FilePathAssignment_0 : ( RULE_STRING ) ;
    public final void rule__FileAlias__FilePathAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11610:1: ( ( RULE_STRING ) )
            // InternalMoniLog.g:11611:2: ( RULE_STRING )
            {
            // InternalMoniLog.g:11611:2: ( RULE_STRING )
            // InternalMoniLog.g:11612:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getFilePathSTRINGTerminalRuleCall_0_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getFilePathSTRINGTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__FilePathAssignment_0"


    // $ANTLR start "rule__FileAlias__NameAssignment_2"
    // InternalMoniLog.g:11621:1: rule__FileAlias__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__FileAlias__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11625:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11626:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11626:2: ( RULE_ID )
            // InternalMoniLog.g:11627:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFileAliasAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFileAliasAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FileAlias__NameAssignment_2"


    // $ANTLR start "rule__LocalAppender__AnnotationsAssignment_0"
    // InternalMoniLog.g:11636:1: rule__LocalAppender__AnnotationsAssignment_0 : ( ruleAppenderAnnotation ) ;
    public final void rule__LocalAppender__AnnotationsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11640:1: ( ( ruleAppenderAnnotation ) )
            // InternalMoniLog.g:11641:2: ( ruleAppenderAnnotation )
            {
            // InternalMoniLog.g:11641:2: ( ruleAppenderAnnotation )
            // InternalMoniLog.g:11642:3: ruleAppenderAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getAnnotationsAppenderAnnotationEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAppenderAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getAnnotationsAppenderAnnotationEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__AnnotationsAssignment_0"


    // $ANTLR start "rule__LocalAppender__NameAssignment_2"
    // InternalMoniLog.g:11651:1: rule__LocalAppender__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__LocalAppender__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11655:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11656:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11656:2: ( RULE_ID )
            // InternalMoniLog.g:11657:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__NameAssignment_2"


    // $ANTLR start "rule__LocalAppender__ParameterDeclAssignment_3_1"
    // InternalMoniLog.g:11666:1: rule__LocalAppender__ParameterDeclAssignment_3_1 : ( ruleParameterDeclVarArgs ) ;
    public final void rule__LocalAppender__ParameterDeclAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11670:1: ( ( ruleParameterDeclVarArgs ) )
            // InternalMoniLog.g:11671:2: ( ruleParameterDeclVarArgs )
            {
            // InternalMoniLog.g:11671:2: ( ruleParameterDeclVarArgs )
            // InternalMoniLog.g:11672:3: ruleParameterDeclVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__ParameterDeclAssignment_3_1"


    // $ANTLR start "rule__LocalAppender__CallsAssignment_5"
    // InternalMoniLog.g:11681:1: rule__LocalAppender__CallsAssignment_5 : ( ruleAppenderCall ) ;
    public final void rule__LocalAppender__CallsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11685:1: ( ( ruleAppenderCall ) )
            // InternalMoniLog.g:11686:2: ( ruleAppenderCall )
            {
            // InternalMoniLog.g:11686:2: ( ruleAppenderCall )
            // InternalMoniLog.g:11687:3: ruleAppenderCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getCallsAppenderCallParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAppenderCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getCallsAppenderCallParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__CallsAssignment_5"


    // $ANTLR start "rule__LocalAppender__CallsAssignment_6_1"
    // InternalMoniLog.g:11696:1: rule__LocalAppender__CallsAssignment_6_1 : ( ruleAppenderCall ) ;
    public final void rule__LocalAppender__CallsAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11700:1: ( ( ruleAppenderCall ) )
            // InternalMoniLog.g:11701:2: ( ruleAppenderCall )
            {
            // InternalMoniLog.g:11701:2: ( ruleAppenderCall )
            // InternalMoniLog.g:11702:3: ruleAppenderCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalAppenderAccess().getCallsAppenderCallParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAppenderCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalAppenderAccess().getCallsAppenderCallParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalAppender__CallsAssignment_6_1"


    // $ANTLR start "rule__ExternalAppender__NameAssignment_1"
    // InternalMoniLog.g:11711:1: rule__ExternalAppender__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ExternalAppender__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11715:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11716:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11716:2: ( RULE_ID )
            // InternalMoniLog.g:11717:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__NameAssignment_1"


    // $ANTLR start "rule__ExternalAppender__ParameterDeclAssignment_2_1"
    // InternalMoniLog.g:11726:1: rule__ExternalAppender__ParameterDeclAssignment_2_1 : ( ruleParameterDeclVarArgs ) ;
    public final void rule__ExternalAppender__ParameterDeclAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11730:1: ( ( ruleParameterDeclVarArgs ) )
            // InternalMoniLog.g:11731:2: ( ruleParameterDeclVarArgs )
            {
            // InternalMoniLog.g:11731:2: ( ruleParameterDeclVarArgs )
            // InternalMoniLog.g:11732:3: ruleParameterDeclVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalAppenderAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalAppenderAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalAppender__ParameterDeclAssignment_2_1"


    // $ANTLR start "rule__LocalLayout__NameAssignment_1"
    // InternalMoniLog.g:11741:1: rule__LocalLayout__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__LocalLayout__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11745:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11746:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11746:2: ( RULE_ID )
            // InternalMoniLog.g:11747:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__NameAssignment_1"


    // $ANTLR start "rule__LocalLayout__ParameterDeclAssignment_2_1"
    // InternalMoniLog.g:11756:1: rule__LocalLayout__ParameterDeclAssignment_2_1 : ( ruleParameterDeclVarArgs ) ;
    public final void rule__LocalLayout__ParameterDeclAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11760:1: ( ( ruleParameterDeclVarArgs ) )
            // InternalMoniLog.g:11761:2: ( ruleParameterDeclVarArgs )
            {
            // InternalMoniLog.g:11761:2: ( ruleParameterDeclVarArgs )
            // InternalMoniLog.g:11762:3: ruleParameterDeclVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__ParameterDeclAssignment_2_1"


    // $ANTLR start "rule__LocalLayout__CallAssignment_4"
    // InternalMoniLog.g:11771:1: rule__LocalLayout__CallAssignment_4 : ( ruleLayoutCall ) ;
    public final void rule__LocalLayout__CallAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11775:1: ( ( ruleLayoutCall ) )
            // InternalMoniLog.g:11776:2: ( ruleLayoutCall )
            {
            // InternalMoniLog.g:11776:2: ( ruleLayoutCall )
            // InternalMoniLog.g:11777:3: ruleLayoutCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLocalLayoutAccess().getCallLayoutCallParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLayoutCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLocalLayoutAccess().getCallLayoutCallParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalLayout__CallAssignment_4"


    // $ANTLR start "rule__ExternalLayout__NameAssignment_1"
    // InternalMoniLog.g:11786:1: rule__ExternalLayout__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ExternalLayout__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11790:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11791:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11791:2: ( RULE_ID )
            // InternalMoniLog.g:11792:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__NameAssignment_1"


    // $ANTLR start "rule__ExternalLayout__ParameterDeclAssignment_2_1"
    // InternalMoniLog.g:11801:1: rule__ExternalLayout__ParameterDeclAssignment_2_1 : ( ruleParameterDeclVarArgs ) ;
    public final void rule__ExternalLayout__ParameterDeclAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11805:1: ( ( ruleParameterDeclVarArgs ) )
            // InternalMoniLog.g:11806:2: ( ruleParameterDeclVarArgs )
            {
            // InternalMoniLog.g:11806:2: ( ruleParameterDeclVarArgs )
            // InternalMoniLog.g:11807:3: ruleParameterDeclVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExternalLayoutAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExternalLayoutAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExternalLayout__ParameterDeclAssignment_2_1"


    // $ANTLR start "rule__ParameterDeclVarArgs__ParametersAssignment_1_0"
    // InternalMoniLog.g:11816:1: rule__ParameterDeclVarArgs__ParametersAssignment_1_0 : ( ruleParameter ) ;
    public final void rule__ParameterDeclVarArgs__ParametersAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11820:1: ( ( ruleParameter ) )
            // InternalMoniLog.g:11821:2: ( ruleParameter )
            {
            // InternalMoniLog.g:11821:2: ( ruleParameter )
            // InternalMoniLog.g:11822:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getParametersParameterParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getParametersParameterParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__ParametersAssignment_1_0"


    // $ANTLR start "rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1"
    // InternalMoniLog.g:11831:1: rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1 : ( ruleParameter ) ;
    public final void rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11835:1: ( ( ruleParameter ) )
            // InternalMoniLog.g:11836:2: ( ruleParameter )
            {
            // InternalMoniLog.g:11836:2: ( ruleParameter )
            // InternalMoniLog.g:11837:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getParametersParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getParametersParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__ParametersAssignment_1_1_1"


    // $ANTLR start "rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1"
    // InternalMoniLog.g:11846:1: rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1 : ( ruleParameter ) ;
    public final void rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11850:1: ( ( ruleParameter ) )
            // InternalMoniLog.g:11851:2: ( ruleParameter )
            {
            // InternalMoniLog.g:11851:2: ( ruleParameter )
            // InternalMoniLog.g:11852:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclVarArgsAccess().getVarArgsParameterParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclVarArgsAccess().getVarArgsParameterParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclVarArgs__VarArgsAssignment_1_2_1"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0"
    // InternalMoniLog.g:11861:1: rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0 : ( ruleParameter ) ;
    public final void rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11865:1: ( ( ruleParameter ) )
            // InternalMoniLog.g:11866:2: ( ruleParameter )
            {
            // InternalMoniLog.g:11866:2: ( ruleParameter )
            // InternalMoniLog.g:11867:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersParameterParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersParameterParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__ParametersAssignment_1_0"


    // $ANTLR start "rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1"
    // InternalMoniLog.g:11876:1: rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1 : ( ruleParameter ) ;
    public final void rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11880:1: ( ( ruleParameter ) )
            // InternalMoniLog.g:11881:2: ( ruleParameter )
            {
            // InternalMoniLog.g:11881:2: ( ruleParameter )
            // InternalMoniLog.g:11882:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclNoVarArgsAccess().getParametersParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclNoVarArgs__ParametersAssignment_1_1_1"


    // $ANTLR start "rule__MoniLogger__AnnotationsAssignment_0"
    // InternalMoniLog.g:11891:1: rule__MoniLogger__AnnotationsAssignment_0 : ( ruleMoniLoggerAnnotation ) ;
    public final void rule__MoniLogger__AnnotationsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11895:1: ( ( ruleMoniLoggerAnnotation ) )
            // InternalMoniLog.g:11896:2: ( ruleMoniLoggerAnnotation )
            {
            // InternalMoniLog.g:11896:2: ( ruleMoniLoggerAnnotation )
            // InternalMoniLog.g:11897:3: ruleMoniLoggerAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getAnnotationsMoniLoggerAnnotationEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMoniLoggerAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getAnnotationsMoniLoggerAnnotationEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__AnnotationsAssignment_0"


    // $ANTLR start "rule__MoniLogger__NameAssignment_2"
    // InternalMoniLog.g:11906:1: rule__MoniLogger__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__MoniLogger__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11910:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:11911:2: ( RULE_ID )
            {
            // InternalMoniLog.g:11911:2: ( RULE_ID )
            // InternalMoniLog.g:11912:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__NameAssignment_2"


    // $ANTLR start "rule__MoniLogger__ParameterDeclAssignment_3_1"
    // InternalMoniLog.g:11921:1: rule__MoniLogger__ParameterDeclAssignment_3_1 : ( ruleParameterDeclVarArgs ) ;
    public final void rule__MoniLogger__ParameterDeclAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11925:1: ( ( ruleParameterDeclVarArgs ) )
            // InternalMoniLog.g:11926:2: ( ruleParameterDeclVarArgs )
            {
            // InternalMoniLog.g:11926:2: ( ruleParameterDeclVarArgs )
            // InternalMoniLog.g:11927:3: ruleParameterDeclVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getParameterDeclParameterDeclVarArgsParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__ParameterDeclAssignment_3_1"


    // $ANTLR start "rule__MoniLogger__LevelAssignment_4_1"
    // InternalMoniLog.g:11936:1: rule__MoniLogger__LevelAssignment_4_1 : ( ruleLogLevel ) ;
    public final void rule__MoniLogger__LevelAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11940:1: ( ( ruleLogLevel ) )
            // InternalMoniLog.g:11941:2: ( ruleLogLevel )
            {
            // InternalMoniLog.g:11941:2: ( ruleLogLevel )
            // InternalMoniLog.g:11942:3: ruleLogLevel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getLevelLogLevelEnumRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLogLevel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getLevelLogLevelEnumRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__LevelAssignment_4_1"


    // $ANTLR start "rule__MoniLogger__StreamEventAssignment_7"
    // InternalMoniLog.g:11951:1: rule__MoniLogger__StreamEventAssignment_7 : ( ruleStreamEvent ) ;
    public final void rule__MoniLogger__StreamEventAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11955:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:11956:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:11956:2: ( ruleStreamEvent )
            // InternalMoniLog.g:11957:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getStreamEventStreamEventParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getStreamEventStreamEventParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__StreamEventAssignment_7"


    // $ANTLR start "rule__MoniLogger__ConditionsAssignment_8_2"
    // InternalMoniLog.g:11966:1: rule__MoniLogger__ConditionsAssignment_8_2 : ( ruleCondition ) ;
    public final void rule__MoniLogger__ConditionsAssignment_8_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11970:1: ( ( ruleCondition ) )
            // InternalMoniLog.g:11971:2: ( ruleCondition )
            {
            // InternalMoniLog.g:11971:2: ( ruleCondition )
            // InternalMoniLog.g:11972:3: ruleCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getConditionsConditionParserRuleCall_8_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getConditionsConditionParserRuleCall_8_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__ConditionsAssignment_8_2"


    // $ANTLR start "rule__MoniLogger__ConditionsAssignment_8_3_1"
    // InternalMoniLog.g:11981:1: rule__MoniLogger__ConditionsAssignment_8_3_1 : ( ruleCondition ) ;
    public final void rule__MoniLogger__ConditionsAssignment_8_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:11985:1: ( ( ruleCondition ) )
            // InternalMoniLog.g:11986:2: ( ruleCondition )
            {
            // InternalMoniLog.g:11986:2: ( ruleCondition )
            // InternalMoniLog.g:11987:3: ruleCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getConditionsConditionParserRuleCall_8_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getConditionsConditionParserRuleCall_8_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__ConditionsAssignment_8_3_1"


    // $ANTLR start "rule__MoniLogger__ActionsAssignment_11"
    // InternalMoniLog.g:11996:1: rule__MoniLogger__ActionsAssignment_11 : ( ruleAction ) ;
    public final void rule__MoniLogger__ActionsAssignment_11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12000:1: ( ( ruleAction ) )
            // InternalMoniLog.g:12001:2: ( ruleAction )
            {
            // InternalMoniLog.g:12001:2: ( ruleAction )
            // InternalMoniLog.g:12002:3: ruleAction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getActionsActionParserRuleCall_11_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getActionsActionParserRuleCall_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__ActionsAssignment_11"


    // $ANTLR start "rule__MoniLogger__ActionsAssignment_12_1"
    // InternalMoniLog.g:12011:1: rule__MoniLogger__ActionsAssignment_12_1 : ( ruleAction ) ;
    public final void rule__MoniLogger__ActionsAssignment_12_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12015:1: ( ( ruleAction ) )
            // InternalMoniLog.g:12016:2: ( ruleAction )
            {
            // InternalMoniLog.g:12016:2: ( ruleAction )
            // InternalMoniLog.g:12017:3: ruleAction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLoggerAccess().getActionsActionParserRuleCall_12_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLoggerAccess().getActionsActionParserRuleCall_12_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogger__ActionsAssignment_12_1"


    // $ANTLR start "rule__Parameter__NameAssignment"
    // InternalMoniLog.g:12026:1: rule__Parameter__NameAssignment : ( RULE_ID ) ;
    public final void rule__Parameter__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12030:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12031:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12031:2: ( RULE_ID )
            // InternalMoniLog.g:12032:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__NameAssignment"


    // $ANTLR start "rule__Event__NameAssignment_0_2"
    // InternalMoniLog.g:12041:1: rule__Event__NameAssignment_0_2 : ( RULE_ID ) ;
    public final void rule__Event__NameAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12045:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12046:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12046:2: ( RULE_ID )
            // InternalMoniLog.g:12047:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__NameAssignment_0_2"


    // $ANTLR start "rule__Event__ParameterDeclAssignment_0_3_1"
    // InternalMoniLog.g:12056:1: rule__Event__ParameterDeclAssignment_0_3_1 : ( ruleParameterDeclNoVarArgs ) ;
    public final void rule__Event__ParameterDeclAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12060:1: ( ( ruleParameterDeclNoVarArgs ) )
            // InternalMoniLog.g:12061:2: ( ruleParameterDeclNoVarArgs )
            {
            // InternalMoniLog.g:12061:2: ( ruleParameterDeclNoVarArgs )
            // InternalMoniLog.g:12062:3: ruleParameterDeclNoVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_0_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclNoVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__ParameterDeclAssignment_0_3_1"


    // $ANTLR start "rule__Event__KindAssignment_0_5"
    // InternalMoniLog.g:12071:1: rule__Event__KindAssignment_0_5 : ( ruleASTEventKind ) ;
    public final void rule__Event__KindAssignment_0_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12075:1: ( ( ruleASTEventKind ) )
            // InternalMoniLog.g:12076:2: ( ruleASTEventKind )
            {
            // InternalMoniLog.g:12076:2: ( ruleASTEventKind )
            // InternalMoniLog.g:12077:3: ruleASTEventKind
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getKindASTEventKindParserRuleCall_0_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleASTEventKind();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getKindASTEventKindParserRuleCall_0_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__KindAssignment_0_5"


    // $ANTLR start "rule__Event__RuleIDAssignment_0_6"
    // InternalMoniLog.g:12086:1: rule__Event__RuleIDAssignment_0_6 : ( RULE_ID ) ;
    public final void rule__Event__RuleIDAssignment_0_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12090:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12091:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12091:2: ( RULE_ID )
            // InternalMoniLog.g:12092:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getRuleIDIDTerminalRuleCall_0_6_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getRuleIDIDTerminalRuleCall_0_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__RuleIDAssignment_0_6"


    // $ANTLR start "rule__Event__NameAssignment_1_2"
    // InternalMoniLog.g:12101:1: rule__Event__NameAssignment_1_2 : ( RULE_ID ) ;
    public final void rule__Event__NameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12105:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12106:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12106:2: ( RULE_ID )
            // InternalMoniLog.g:12107:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__NameAssignment_1_2"


    // $ANTLR start "rule__Event__KindAssignment_1_3_1"
    // InternalMoniLog.g:12116:1: rule__Event__KindAssignment_1_3_1 : ( ruleTemporalPatternKind ) ;
    public final void rule__Event__KindAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12120:1: ( ( ruleTemporalPatternKind ) )
            // InternalMoniLog.g:12121:2: ( ruleTemporalPatternKind )
            {
            // InternalMoniLog.g:12121:2: ( ruleTemporalPatternKind )
            // InternalMoniLog.g:12122:3: ruleTemporalPatternKind
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getKindTemporalPatternKindEnumRuleCall_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTemporalPatternKind();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getKindTemporalPatternKindEnumRuleCall_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__KindAssignment_1_3_1"


    // $ANTLR start "rule__Event__ParameterDeclAssignment_1_4_1"
    // InternalMoniLog.g:12131:1: rule__Event__ParameterDeclAssignment_1_4_1 : ( ruleParameterDeclNoVarArgs ) ;
    public final void rule__Event__ParameterDeclAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12135:1: ( ( ruleParameterDeclNoVarArgs ) )
            // InternalMoniLog.g:12136:2: ( ruleParameterDeclNoVarArgs )
            {
            // InternalMoniLog.g:12136:2: ( ruleParameterDeclNoVarArgs )
            // InternalMoniLog.g:12137:3: ruleParameterDeclNoVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_1_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclNoVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__ParameterDeclAssignment_1_4_1"


    // $ANTLR start "rule__Event__PatternAssignment_1_6"
    // InternalMoniLog.g:12146:1: rule__Event__PatternAssignment_1_6 : ( ruleTemporalPattern ) ;
    public final void rule__Event__PatternAssignment_1_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12150:1: ( ( ruleTemporalPattern ) )
            // InternalMoniLog.g:12151:2: ( ruleTemporalPattern )
            {
            // InternalMoniLog.g:12151:2: ( ruleTemporalPattern )
            // InternalMoniLog.g:12152:3: ruleTemporalPattern
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getPatternTemporalPatternParserRuleCall_1_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTemporalPattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getPatternTemporalPatternParserRuleCall_1_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__PatternAssignment_1_6"


    // $ANTLR start "rule__Event__NameAssignment_2_2"
    // InternalMoniLog.g:12161:1: rule__Event__NameAssignment_2_2 : ( RULE_ID ) ;
    public final void rule__Event__NameAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12165:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12166:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12166:2: ( RULE_ID )
            // InternalMoniLog.g:12167:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__NameAssignment_2_2"


    // $ANTLR start "rule__Event__ParameterDeclAssignment_2_3_1"
    // InternalMoniLog.g:12176:1: rule__Event__ParameterDeclAssignment_2_3_1 : ( ruleParameterDeclNoVarArgs ) ;
    public final void rule__Event__ParameterDeclAssignment_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12180:1: ( ( ruleParameterDeclNoVarArgs ) )
            // InternalMoniLog.g:12181:2: ( ruleParameterDeclNoVarArgs )
            {
            // InternalMoniLog.g:12181:2: ( ruleParameterDeclNoVarArgs )
            // InternalMoniLog.g:12182:3: ruleParameterDeclNoVarArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_2_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterDeclNoVarArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEventAccess().getParameterDeclParameterDeclNoVarArgsParserRuleCall_2_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Event__ParameterDeclAssignment_2_3_1"


    // $ANTLR start "rule__Condition__ExpressionAssignment"
    // InternalMoniLog.g:12191:1: rule__Condition__ExpressionAssignment : ( ruleLanguageValue ) ;
    public final void rule__Condition__ExpressionAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12195:1: ( ( ruleLanguageValue ) )
            // InternalMoniLog.g:12196:2: ( ruleLanguageValue )
            {
            // InternalMoniLog.g:12196:2: ( ruleLanguageValue )
            // InternalMoniLog.g:12197:3: ruleLanguageValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionAccess().getExpressionLanguageValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLanguageValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionAccess().getExpressionLanguageValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Condition__ExpressionAssignment"


    // $ANTLR start "rule__TemporalPattern__PatternAssignment_0"
    // InternalMoniLog.g:12206:1: rule__TemporalPattern__PatternAssignment_0 : ( rulePattern ) ;
    public final void rule__TemporalPattern__PatternAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12210:1: ( ( rulePattern ) )
            // InternalMoniLog.g:12211:2: ( rulePattern )
            {
            // InternalMoniLog.g:12211:2: ( rulePattern )
            // InternalMoniLog.g:12212:3: rulePattern
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternAccess().getPatternPatternParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePattern();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternAccess().getPatternPatternParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__PatternAssignment_0"


    // $ANTLR start "rule__TemporalPattern__ScopeAssignment_1"
    // InternalMoniLog.g:12221:1: rule__TemporalPattern__ScopeAssignment_1 : ( ruleScope ) ;
    public final void rule__TemporalPattern__ScopeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12225:1: ( ( ruleScope ) )
            // InternalMoniLog.g:12226:2: ( ruleScope )
            {
            // InternalMoniLog.g:12226:2: ( ruleScope )
            // InternalMoniLog.g:12227:3: ruleScope
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalPatternAccess().getScopeScopeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScope();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalPatternAccess().getScopeScopeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalPattern__ScopeAssignment_1"


    // $ANTLR start "rule__Pattern__BoundAssignment_0_2"
    // InternalMoniLog.g:12236:1: rule__Pattern__BoundAssignment_0_2 : ( ruleBoundType ) ;
    public final void rule__Pattern__BoundAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12240:1: ( ( ruleBoundType ) )
            // InternalMoniLog.g:12241:2: ( ruleBoundType )
            {
            // InternalMoniLog.g:12241:2: ( ruleBoundType )
            // InternalMoniLog.g:12242:3: ruleBoundType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getBoundBoundTypeParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoundType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getBoundBoundTypeParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__BoundAssignment_0_2"


    // $ANTLR start "rule__Pattern__EventAssignment_0_3"
    // InternalMoniLog.g:12251:1: rule__Pattern__EventAssignment_0_3 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__EventAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12255:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12256:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12256:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12257:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__EventAssignment_0_3"


    // $ANTLR start "rule__Pattern__EventAssignment_1_2"
    // InternalMoniLog.g:12266:1: rule__Pattern__EventAssignment_1_2 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__EventAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12270:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12271:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12271:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12272:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__EventAssignment_1_2"


    // $ANTLR start "rule__Pattern__EventAssignment_2_2"
    // InternalMoniLog.g:12281:1: rule__Pattern__EventAssignment_2_2 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__EventAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12285:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12286:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12286:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12287:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__EventAssignment_2_2"


    // $ANTLR start "rule__Pattern__PredecessorAssignment_3_1"
    // InternalMoniLog.g:12296:1: rule__Pattern__PredecessorAssignment_3_1 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__PredecessorAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12300:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12301:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12301:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12302:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getPredecessorStreamEventParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getPredecessorStreamEventParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__PredecessorAssignment_3_1"


    // $ANTLR start "rule__Pattern__SuccessorAssignment_3_3"
    // InternalMoniLog.g:12311:1: rule__Pattern__SuccessorAssignment_3_3 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__SuccessorAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12315:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12316:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12316:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12317:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getSuccessorStreamEventParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getSuccessorStreamEventParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__SuccessorAssignment_3_3"


    // $ANTLR start "rule__Pattern__EventAssignment_4_1"
    // InternalMoniLog.g:12326:1: rule__Pattern__EventAssignment_4_1 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__EventAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12330:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12331:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12331:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12332:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getEventStreamEventParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__EventAssignment_4_1"


    // $ANTLR start "rule__Pattern__TriggerAssignment_4_3"
    // InternalMoniLog.g:12341:1: rule__Pattern__TriggerAssignment_4_3 : ( ruleStreamEvent ) ;
    public final void rule__Pattern__TriggerAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12345:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12346:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12346:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12347:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPatternAccess().getTriggerStreamEventParserRuleCall_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPatternAccess().getTriggerStreamEventParserRuleCall_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pattern__TriggerAssignment_4_3"


    // $ANTLR start "rule__ExactBound__NAssignment"
    // InternalMoniLog.g:12356:1: rule__ExactBound__NAssignment : ( RULE_INT ) ;
    public final void rule__ExactBound__NAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12360:1: ( ( RULE_INT ) )
            // InternalMoniLog.g:12361:2: ( RULE_INT )
            {
            // InternalMoniLog.g:12361:2: ( RULE_INT )
            // InternalMoniLog.g:12362:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExactBoundAccess().getNINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExactBoundAccess().getNINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExactBound__NAssignment"


    // $ANTLR start "rule__LowerBound__NAssignment_1"
    // InternalMoniLog.g:12371:1: rule__LowerBound__NAssignment_1 : ( RULE_INT ) ;
    public final void rule__LowerBound__NAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12375:1: ( ( RULE_INT ) )
            // InternalMoniLog.g:12376:2: ( RULE_INT )
            {
            // InternalMoniLog.g:12376:2: ( RULE_INT )
            // InternalMoniLog.g:12377:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLowerBoundAccess().getNINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLowerBoundAccess().getNINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LowerBound__NAssignment_1"


    // $ANTLR start "rule__UpperBound__NAssignment_1"
    // InternalMoniLog.g:12386:1: rule__UpperBound__NAssignment_1 : ( RULE_INT ) ;
    public final void rule__UpperBound__NAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12390:1: ( ( RULE_INT ) )
            // InternalMoniLog.g:12391:2: ( RULE_INT )
            {
            // InternalMoniLog.g:12391:2: ( RULE_INT )
            // InternalMoniLog.g:12392:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUpperBoundAccess().getNINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUpperBoundAccess().getNINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UpperBound__NAssignment_1"


    // $ANTLR start "rule__Scope__LowerBoundAssignment_1_2"
    // InternalMoniLog.g:12401:1: rule__Scope__LowerBoundAssignment_1_2 : ( ruleStreamEvent ) ;
    public final void rule__Scope__LowerBoundAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12405:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12406:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12406:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12407:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__LowerBoundAssignment_1_2"


    // $ANTLR start "rule__Scope__UpperBoundAssignment_2_2"
    // InternalMoniLog.g:12416:1: rule__Scope__UpperBoundAssignment_2_2 : ( ruleStreamEvent ) ;
    public final void rule__Scope__UpperBoundAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12420:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12421:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12421:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12422:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__UpperBoundAssignment_2_2"


    // $ANTLR start "rule__Scope__LowerBoundAssignment_3_2"
    // InternalMoniLog.g:12431:1: rule__Scope__LowerBoundAssignment_3_2 : ( ruleStreamEvent ) ;
    public final void rule__Scope__LowerBoundAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12435:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12436:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12436:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12437:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__LowerBoundAssignment_3_2"


    // $ANTLR start "rule__Scope__UpperBoundAssignment_3_4"
    // InternalMoniLog.g:12446:1: rule__Scope__UpperBoundAssignment_3_4 : ( ruleStreamEvent ) ;
    public final void rule__Scope__UpperBoundAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12450:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12451:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12451:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12452:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_3_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_3_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__UpperBoundAssignment_3_4"


    // $ANTLR start "rule__Scope__LowerBoundAssignment_4_2"
    // InternalMoniLog.g:12461:1: rule__Scope__LowerBoundAssignment_4_2 : ( ruleStreamEvent ) ;
    public final void rule__Scope__LowerBoundAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12465:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12466:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12466:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12467:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getLowerBoundStreamEventParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__LowerBoundAssignment_4_2"


    // $ANTLR start "rule__Scope__UpperBoundAssignment_4_4"
    // InternalMoniLog.g:12476:1: rule__Scope__UpperBoundAssignment_4_4 : ( ruleStreamEvent ) ;
    public final void rule__Scope__UpperBoundAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12480:1: ( ( ruleStreamEvent ) )
            // InternalMoniLog.g:12481:2: ( ruleStreamEvent )
            {
            // InternalMoniLog.g:12481:2: ( ruleStreamEvent )
            // InternalMoniLog.g:12482:3: ruleStreamEvent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_4_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStreamEvent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScopeAccess().getUpperBoundStreamEventParserRuleCall_4_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Scope__UpperBoundAssignment_4_4"


    // $ANTLR start "rule__AppenderCall__AppenderAssignment_0"
    // InternalMoniLog.g:12491:1: rule__AppenderCall__AppenderAssignment_0 : ( ( ruleQualifiedName ) ) ;
    public final void rule__AppenderCall__AppenderAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12495:1: ( ( ( ruleQualifiedName ) ) )
            // InternalMoniLog.g:12496:2: ( ( ruleQualifiedName ) )
            {
            // InternalMoniLog.g:12496:2: ( ( ruleQualifiedName ) )
            // InternalMoniLog.g:12497:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getAppenderAppenderCrossReference_0_0()); 
            }
            // InternalMoniLog.g:12498:3: ( ruleQualifiedName )
            // InternalMoniLog.g:12499:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getAppenderAppenderQualifiedNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getAppenderAppenderQualifiedNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getAppenderAppenderCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__AppenderAssignment_0"


    // $ANTLR start "rule__AppenderCall__ArgsAssignment_3_1"
    // InternalMoniLog.g:12510:1: rule__AppenderCall__ArgsAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__AppenderCall__ArgsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12514:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12515:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12515:2: ( ruleExpression )
            // InternalMoniLog.g:12516:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__ArgsAssignment_3_1"


    // $ANTLR start "rule__AppenderCall__ArgsAssignment_3_2_1"
    // InternalMoniLog.g:12525:1: rule__AppenderCall__ArgsAssignment_3_2_1 : ( ruleExpression ) ;
    public final void rule__AppenderCall__ArgsAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12529:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12530:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12530:2: ( ruleExpression )
            // InternalMoniLog.g:12531:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAppenderCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAppenderCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AppenderCall__ArgsAssignment_3_2_1"


    // $ANTLR start "rule__LayoutCall__LayoutAssignment_0"
    // InternalMoniLog.g:12540:1: rule__LayoutCall__LayoutAssignment_0 : ( ( ruleQualifiedName ) ) ;
    public final void rule__LayoutCall__LayoutAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12544:1: ( ( ( ruleQualifiedName ) ) )
            // InternalMoniLog.g:12545:2: ( ( ruleQualifiedName ) )
            {
            // InternalMoniLog.g:12545:2: ( ( ruleQualifiedName ) )
            // InternalMoniLog.g:12546:3: ( ruleQualifiedName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getLayoutLayoutCrossReference_0_0()); 
            }
            // InternalMoniLog.g:12547:3: ( ruleQualifiedName )
            // InternalMoniLog.g:12548:4: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getLayoutLayoutQualifiedNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getLayoutLayoutQualifiedNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getLayoutLayoutCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__LayoutAssignment_0"


    // $ANTLR start "rule__LayoutCall__ArgsAssignment_3_1"
    // InternalMoniLog.g:12559:1: rule__LayoutCall__ArgsAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__LayoutCall__ArgsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12563:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12564:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12564:2: ( ruleExpression )
            // InternalMoniLog.g:12565:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__ArgsAssignment_3_1"


    // $ANTLR start "rule__LayoutCall__ArgsAssignment_3_2_1"
    // InternalMoniLog.g:12574:1: rule__LayoutCall__ArgsAssignment_3_2_1 : ( ruleExpression ) ;
    public final void rule__LayoutCall__ArgsAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12578:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12579:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12579:2: ( ruleExpression )
            // InternalMoniLog.g:12580:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLayoutCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLayoutCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LayoutCall__ArgsAssignment_3_2_1"


    // $ANTLR start "rule__EmitEvent__EventAssignment_0"
    // InternalMoniLog.g:12589:1: rule__EmitEvent__EventAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__EmitEvent__EventAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12593:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12594:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12594:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12595:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getEventUserEventCrossReference_0_0()); 
            }
            // InternalMoniLog.g:12596:3: ( RULE_ID )
            // InternalMoniLog.g:12597:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getEventUserEventIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getEventUserEventIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getEventUserEventCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__EventAssignment_0"


    // $ANTLR start "rule__EmitEvent__ArgsAssignment_3_1"
    // InternalMoniLog.g:12608:1: rule__EmitEvent__ArgsAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__EmitEvent__ArgsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12612:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12613:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12613:2: ( ruleExpression )
            // InternalMoniLog.g:12614:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__ArgsAssignment_3_1"


    // $ANTLR start "rule__EmitEvent__ArgsAssignment_3_2_1"
    // InternalMoniLog.g:12623:1: rule__EmitEvent__ArgsAssignment_3_2_1 : ( ruleExpression ) ;
    public final void rule__EmitEvent__ArgsAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12627:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12628:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12628:2: ( ruleExpression )
            // InternalMoniLog.g:12629:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmitEventAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmitEventAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EmitEvent__ArgsAssignment_3_2_1"


    // $ANTLR start "rule__MoniloggerCall__MoniloggerAssignment_0_1"
    // InternalMoniLog.g:12638:1: rule__MoniloggerCall__MoniloggerAssignment_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__MoniloggerCall__MoniloggerAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12642:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12643:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12643:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12644:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerCrossReference_0_1_0()); 
            }
            // InternalMoniLog.g:12645:3: ( RULE_ID )
            // InternalMoniLog.g:12646:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerIDTerminalRuleCall_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerIDTerminalRuleCall_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerCrossReference_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__MoniloggerAssignment_0_1"


    // $ANTLR start "rule__MoniloggerCall__ArgsAssignment_0_4_1"
    // InternalMoniLog.g:12657:1: rule__MoniloggerCall__ArgsAssignment_0_4_1 : ( ruleExpression ) ;
    public final void rule__MoniloggerCall__ArgsAssignment_0_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12661:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12662:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12662:2: ( ruleExpression )
            // InternalMoniLog.g:12663:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getArgsExpressionParserRuleCall_0_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getArgsExpressionParserRuleCall_0_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__ArgsAssignment_0_4_1"


    // $ANTLR start "rule__MoniloggerCall__ArgsAssignment_0_4_2_1"
    // InternalMoniLog.g:12672:1: rule__MoniloggerCall__ArgsAssignment_0_4_2_1 : ( ruleExpression ) ;
    public final void rule__MoniloggerCall__ArgsAssignment_0_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12676:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12677:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12677:2: ( ruleExpression )
            // InternalMoniLog.g:12678:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getArgsExpressionParserRuleCall_0_4_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getArgsExpressionParserRuleCall_0_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__ArgsAssignment_0_4_2_1"


    // $ANTLR start "rule__MoniloggerCall__MoniloggerAssignment_1_1"
    // InternalMoniLog.g:12687:1: rule__MoniloggerCall__MoniloggerAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__MoniloggerCall__MoniloggerAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12691:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12692:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12692:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12693:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerCrossReference_1_1_0()); 
            }
            // InternalMoniLog.g:12694:3: ( RULE_ID )
            // InternalMoniLog.g:12695:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniloggerCallAccess().getMoniloggerMoniLoggerCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniloggerCall__MoniloggerAssignment_1_1"


    // $ANTLR start "rule__StreamEvent__EventAssignment_0"
    // InternalMoniLog.g:12706:1: rule__StreamEvent__EventAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__StreamEvent__EventAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12710:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12711:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12711:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12712:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getEventEventCrossReference_0_0()); 
            }
            // InternalMoniLog.g:12713:3: ( RULE_ID )
            // InternalMoniLog.g:12714:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getEventEventIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getEventEventIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getEventEventCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__EventAssignment_0"


    // $ANTLR start "rule__StreamEvent__ValuesAssignment_1_1"
    // InternalMoniLog.g:12725:1: rule__StreamEvent__ValuesAssignment_1_1 : ( ruleEmptyOrPropertyValue ) ;
    public final void rule__StreamEvent__ValuesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12729:1: ( ( ruleEmptyOrPropertyValue ) )
            // InternalMoniLog.g:12730:2: ( ruleEmptyOrPropertyValue )
            {
            // InternalMoniLog.g:12730:2: ( ruleEmptyOrPropertyValue )
            // InternalMoniLog.g:12731:3: ruleEmptyOrPropertyValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEmptyOrPropertyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__ValuesAssignment_1_1"


    // $ANTLR start "rule__StreamEvent__ValuesAssignment_1_2_1"
    // InternalMoniLog.g:12740:1: rule__StreamEvent__ValuesAssignment_1_2_1 : ( ruleEmptyOrPropertyValue ) ;
    public final void rule__StreamEvent__ValuesAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12744:1: ( ( ruleEmptyOrPropertyValue ) )
            // InternalMoniLog.g:12745:2: ( ruleEmptyOrPropertyValue )
            {
            // InternalMoniLog.g:12745:2: ( ruleEmptyOrPropertyValue )
            // InternalMoniLog.g:12746:3: ruleEmptyOrPropertyValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEmptyOrPropertyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStreamEventAccess().getValuesEmptyOrPropertyValueParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StreamEvent__ValuesAssignment_1_2_1"


    // $ANTLR start "rule__PropertyValue__IdAssignment_0_0"
    // InternalMoniLog.g:12755:1: rule__PropertyValue__IdAssignment_0_0 : ( RULE_ID ) ;
    public final void rule__PropertyValue__IdAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12759:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12760:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12760:2: ( RULE_ID )
            // InternalMoniLog.g:12761:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getIdIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getIdIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__IdAssignment_0_0"


    // $ANTLR start "rule__PropertyValue__ValueAssignment_0_1_1"
    // InternalMoniLog.g:12770:1: rule__PropertyValue__ValueAssignment_0_1_1 : ( ruleExpression ) ;
    public final void rule__PropertyValue__ValueAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12774:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12775:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12775:2: ( ruleExpression )
            // InternalMoniLog.g:12776:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getValueExpressionParserRuleCall_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getValueExpressionParserRuleCall_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__ValueAssignment_0_1_1"


    // $ANTLR start "rule__PropertyValue__ValueAssignment_1"
    // InternalMoniLog.g:12785:1: rule__PropertyValue__ValueAssignment_1 : ( ruleLanguageValue ) ;
    public final void rule__PropertyValue__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12789:1: ( ( ruleLanguageValue ) )
            // InternalMoniLog.g:12790:2: ( ruleLanguageValue )
            {
            // InternalMoniLog.g:12790:2: ( ruleLanguageValue )
            // InternalMoniLog.g:12791:3: ruleLanguageValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyValueAccess().getValueLanguageValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLanguageValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyValueAccess().getValueLanguageValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyValue__ValueAssignment_1"


    // $ANTLR start "rule__ParameterReference__ParameterAssignment"
    // InternalMoniLog.g:12800:1: rule__ParameterReference__ParameterAssignment : ( ( RULE_ID ) ) ;
    public final void rule__ParameterReference__ParameterAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12804:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12805:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12805:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12806:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterReferenceAccess().getParameterParameterCrossReference_0()); 
            }
            // InternalMoniLog.g:12807:3: ( RULE_ID )
            // InternalMoniLog.g:12808:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterReferenceAccess().getParameterParameterIDTerminalRuleCall_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterReferenceAccess().getParameterParameterIDTerminalRuleCall_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterReferenceAccess().getParameterParameterCrossReference_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterReference__ParameterAssignment"


    // $ANTLR start "rule__MoniLogExpression__ExpressionAssignment_1"
    // InternalMoniLog.g:12819:1: rule__MoniLogExpression__ExpressionAssignment_1 : ( ruleSimpleExpression ) ;
    public final void rule__MoniLogExpression__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12823:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:12824:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:12824:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:12825:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMoniLogExpressionAccess().getExpressionSimpleExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMoniLogExpressionAccess().getExpressionSimpleExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MoniLogExpression__ExpressionAssignment_1"


    // $ANTLR start "rule__LanguageValue__LanguageIdAssignment_0"
    // InternalMoniLog.g:12834:1: rule__LanguageValue__LanguageIdAssignment_0 : ( RULE_ID ) ;
    public final void rule__LanguageValue__LanguageIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12838:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:12839:2: ( RULE_ID )
            {
            // InternalMoniLog.g:12839:2: ( RULE_ID )
            // InternalMoniLog.g:12840:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getLanguageIdIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getLanguageIdIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__LanguageIdAssignment_0"


    // $ANTLR start "rule__LanguageValue__ValueAssignment_2"
    // InternalMoniLog.g:12849:1: rule__LanguageValue__ValueAssignment_2 : ( ( rule__LanguageValue__ValueAlternatives_2_0 ) ) ;
    public final void rule__LanguageValue__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12853:1: ( ( ( rule__LanguageValue__ValueAlternatives_2_0 ) ) )
            // InternalMoniLog.g:12854:2: ( ( rule__LanguageValue__ValueAlternatives_2_0 ) )
            {
            // InternalMoniLog.g:12854:2: ( ( rule__LanguageValue__ValueAlternatives_2_0 ) )
            // InternalMoniLog.g:12855:3: ( rule__LanguageValue__ValueAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageValueAccess().getValueAlternatives_2_0()); 
            }
            // InternalMoniLog.g:12856:3: ( rule__LanguageValue__ValueAlternatives_2_0 )
            // InternalMoniLog.g:12856:4: rule__LanguageValue__ValueAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__LanguageValue__ValueAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageValueAccess().getValueAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageValue__ValueAssignment_2"


    // $ANTLR start "rule__LanguageExpression__ExpressionAssignment"
    // InternalMoniLog.g:12864:1: rule__LanguageExpression__ExpressionAssignment : ( RULE_STRING ) ;
    public final void rule__LanguageExpression__ExpressionAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12868:1: ( ( RULE_STRING ) )
            // InternalMoniLog.g:12869:2: ( RULE_STRING )
            {
            // InternalMoniLog.g:12869:2: ( RULE_STRING )
            // InternalMoniLog.g:12870:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageExpressionAccess().getExpressionSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageExpression__ExpressionAssignment"


    // $ANTLR start "rule__LanguageCall__FileAssignment_0"
    // InternalMoniLog.g:12879:1: rule__LanguageCall__FileAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__LanguageCall__FileAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12883:1: ( ( ( RULE_ID ) ) )
            // InternalMoniLog.g:12884:2: ( ( RULE_ID ) )
            {
            // InternalMoniLog.g:12884:2: ( ( RULE_ID ) )
            // InternalMoniLog.g:12885:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFileFileAliasCrossReference_0_0()); 
            }
            // InternalMoniLog.g:12886:3: ( RULE_ID )
            // InternalMoniLog.g:12887:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFileFileAliasIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFileFileAliasIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFileFileAliasCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__FileAssignment_0"


    // $ANTLR start "rule__LanguageCall__FqnAssignment_2"
    // InternalMoniLog.g:12898:1: rule__LanguageCall__FqnAssignment_2 : ( ruleQualifiedName ) ;
    public final void rule__LanguageCall__FqnAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12902:1: ( ( ruleQualifiedName ) )
            // InternalMoniLog.g:12903:2: ( ruleQualifiedName )
            {
            // InternalMoniLog.g:12903:2: ( ruleQualifiedName )
            // InternalMoniLog.g:12904:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getFqnQualifiedNameParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getFqnQualifiedNameParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__FqnAssignment_2"


    // $ANTLR start "rule__LanguageCall__ArgsAssignment_3_1"
    // InternalMoniLog.g:12913:1: rule__LanguageCall__ArgsAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__LanguageCall__ArgsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12917:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12918:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12918:2: ( ruleExpression )
            // InternalMoniLog.g:12919:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getArgsExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__ArgsAssignment_3_1"


    // $ANTLR start "rule__LanguageCall__ArgsAssignment_3_2_1"
    // InternalMoniLog.g:12928:1: rule__LanguageCall__ArgsAssignment_3_2_1 : ( ruleExpression ) ;
    public final void rule__LanguageCall__ArgsAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12932:1: ( ( ruleExpression ) )
            // InternalMoniLog.g:12933:2: ( ruleExpression )
            {
            // InternalMoniLog.g:12933:2: ( ruleExpression )
            // InternalMoniLog.g:12934:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCallAccess().getArgsExpressionParserRuleCall_3_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCall__ArgsAssignment_3_2_1"


    // $ANTLR start "rule__ContractedIf__ThenAssignment_1_2"
    // InternalMoniLog.g:12943:1: rule__ContractedIf__ThenAssignment_1_2 : ( ruleOr ) ;
    public final void rule__ContractedIf__ThenAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12947:1: ( ( ruleOr ) )
            // InternalMoniLog.g:12948:2: ( ruleOr )
            {
            // InternalMoniLog.g:12948:2: ( ruleOr )
            // InternalMoniLog.g:12949:3: ruleOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getThenOrParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getThenOrParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__ThenAssignment_1_2"


    // $ANTLR start "rule__ContractedIf__ElseAssignment_1_4"
    // InternalMoniLog.g:12958:1: rule__ContractedIf__ElseAssignment_1_4 : ( ruleOr ) ;
    public final void rule__ContractedIf__ElseAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12962:1: ( ( ruleOr ) )
            // InternalMoniLog.g:12963:2: ( ruleOr )
            {
            // InternalMoniLog.g:12963:2: ( ruleOr )
            // InternalMoniLog.g:12964:3: ruleOr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContractedIfAccess().getElseOrParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContractedIfAccess().getElseOrParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContractedIf__ElseAssignment_1_4"


    // $ANTLR start "rule__Or__OpAssignment_1_1"
    // InternalMoniLog.g:12973:1: rule__Or__OpAssignment_1_1 : ( ( '||' ) ) ;
    public final void rule__Or__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12977:1: ( ( ( '||' ) ) )
            // InternalMoniLog.g:12978:2: ( ( '||' ) )
            {
            // InternalMoniLog.g:12978:2: ( ( '||' ) )
            // InternalMoniLog.g:12979:3: ( '||' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            // InternalMoniLog.g:12980:3: ( '||' )
            // InternalMoniLog.g:12981:4: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }
            match(input,77,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__OpAssignment_1_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalMoniLog.g:12992:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:12996:1: ( ( ruleAnd ) )
            // InternalMoniLog.g:12997:2: ( ruleAnd )
            {
            // InternalMoniLog.g:12997:2: ( ruleAnd )
            // InternalMoniLog.g:12998:3: ruleAnd
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__OpAssignment_1_1"
    // InternalMoniLog.g:13007:1: rule__And__OpAssignment_1_1 : ( ( '&&' ) ) ;
    public final void rule__And__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13011:1: ( ( ( '&&' ) ) )
            // InternalMoniLog.g:13012:2: ( ( '&&' ) )
            {
            // InternalMoniLog.g:13012:2: ( ( '&&' ) )
            // InternalMoniLog.g:13013:3: ( '&&' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            // InternalMoniLog.g:13014:3: ( '&&' )
            // InternalMoniLog.g:13015:4: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }
            match(input,78,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getOpAmpersandAmpersandKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__OpAssignment_1_1"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalMoniLog.g:13026:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13030:1: ( ( ruleEquality ) )
            // InternalMoniLog.g:13031:2: ( ruleEquality )
            {
            // InternalMoniLog.g:13031:2: ( ruleEquality )
            // InternalMoniLog.g:13032:3: ruleEquality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalMoniLog.g:13041:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13045:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalMoniLog.g:13046:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalMoniLog.g:13046:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalMoniLog.g:13047:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMoniLog.g:13048:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalMoniLog.g:13048:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalMoniLog.g:13056:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13060:1: ( ( ruleComparison ) )
            // InternalMoniLog.g:13061:2: ( ruleComparison )
            {
            // InternalMoniLog.g:13061:2: ( ruleComparison )
            // InternalMoniLog.g:13062:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalMoniLog.g:13071:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13075:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalMoniLog.g:13076:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalMoniLog.g:13076:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalMoniLog.g:13077:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }
            // InternalMoniLog.g:13078:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalMoniLog.g:13078:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalMoniLog.g:13086:1: rule__Comparison__RightAssignment_1_2 : ( rulePlusOrMinus ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13090:1: ( ( rulePlusOrMinus ) )
            // InternalMoniLog.g:13091:2: ( rulePlusOrMinus )
            {
            // InternalMoniLog.g:13091:2: ( rulePlusOrMinus )
            // InternalMoniLog.g:13092:3: rulePlusOrMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePlusOrMinus();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_0_1"
    // InternalMoniLog.g:13101:1: rule__PlusOrMinus__OpAssignment_1_0_0_1 : ( ( '+' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13105:1: ( ( ( '+' ) ) )
            // InternalMoniLog.g:13106:2: ( ( '+' ) )
            {
            // InternalMoniLog.g:13106:2: ( ( '+' ) )
            // InternalMoniLog.g:13107:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            // InternalMoniLog.g:13108:3: ( '+' )
            // InternalMoniLog.g:13109:4: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }
            match(input,79,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpPlusSignKeyword_1_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_0_1"


    // $ANTLR start "rule__PlusOrMinus__OpAssignment_1_0_1_1"
    // InternalMoniLog.g:13120:1: rule__PlusOrMinus__OpAssignment_1_0_1_1 : ( ( '-' ) ) ;
    public final void rule__PlusOrMinus__OpAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13124:1: ( ( ( '-' ) ) )
            // InternalMoniLog.g:13125:2: ( ( '-' ) )
            {
            // InternalMoniLog.g:13125:2: ( ( '-' ) )
            // InternalMoniLog.g:13126:3: ( '-' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            // InternalMoniLog.g:13127:3: ( '-' )
            // InternalMoniLog.g:13128:4: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getOpHyphenMinusKeyword_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__OpAssignment_1_0_1_1"


    // $ANTLR start "rule__PlusOrMinus__RightAssignment_1_1"
    // InternalMoniLog.g:13139:1: rule__PlusOrMinus__RightAssignment_1_1 : ( ruleMulOrDiv ) ;
    public final void rule__PlusOrMinus__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13143:1: ( ( ruleMulOrDiv ) )
            // InternalMoniLog.g:13144:2: ( ruleMulOrDiv )
            {
            // InternalMoniLog.g:13144:2: ( ruleMulOrDiv )
            // InternalMoniLog.g:13145:3: ruleMulOrDiv
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulOrDiv();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusOrMinus__RightAssignment_1_1"


    // $ANTLR start "rule__MulOrDiv__OpAssignment_1_0_0_1"
    // InternalMoniLog.g:13154:1: rule__MulOrDiv__OpAssignment_1_0_0_1 : ( ( '*' ) ) ;
    public final void rule__MulOrDiv__OpAssignment_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13158:1: ( ( ( '*' ) ) )
            // InternalMoniLog.g:13159:2: ( ( '*' ) )
            {
            // InternalMoniLog.g:13159:2: ( ( '*' ) )
            // InternalMoniLog.g:13160:3: ( '*' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_0_0_1_0()); 
            }
            // InternalMoniLog.g:13161:3: ( '*' )
            // InternalMoniLog.g:13162:4: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_0_0_1_0()); 
            }
            match(input,80,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_0_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAssignment_1_0_0_1"


    // $ANTLR start "rule__MulOrDiv__OpAssignment_1_0_1_1"
    // InternalMoniLog.g:13173:1: rule__MulOrDiv__OpAssignment_1_0_1_1 : ( ( '/' ) ) ;
    public final void rule__MulOrDiv__OpAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13177:1: ( ( ( '/' ) ) )
            // InternalMoniLog.g:13178:2: ( ( '/' ) )
            {
            // InternalMoniLog.g:13178:2: ( ( '/' ) )
            // InternalMoniLog.g:13179:3: ( '/' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_0_1_1_0()); 
            }
            // InternalMoniLog.g:13180:3: ( '/' )
            // InternalMoniLog.g:13181:4: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_0_1_1_0()); 
            }
            match(input,81,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_0_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__OpAssignment_1_0_1_1"


    // $ANTLR start "rule__MulOrDiv__RightAssignment_1_1"
    // InternalMoniLog.g:13192:1: rule__MulOrDiv__RightAssignment_1_1 : ( ruleModulo ) ;
    public final void rule__MulOrDiv__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13196:1: ( ( ruleModulo ) )
            // InternalMoniLog.g:13197:2: ( ruleModulo )
            {
            // InternalMoniLog.g:13197:2: ( ruleModulo )
            // InternalMoniLog.g:13198:3: ruleModulo
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulOrDivAccess().getRightModuloParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleModulo();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulOrDivAccess().getRightModuloParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulOrDiv__RightAssignment_1_1"


    // $ANTLR start "rule__Modulo__OpAssignment_1_1"
    // InternalMoniLog.g:13207:1: rule__Modulo__OpAssignment_1_1 : ( ( '%' ) ) ;
    public final void rule__Modulo__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13211:1: ( ( ( '%' ) ) )
            // InternalMoniLog.g:13212:2: ( ( '%' ) )
            {
            // InternalMoniLog.g:13212:2: ( ( '%' ) )
            // InternalMoniLog.g:13213:3: ( '%' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); 
            }
            // InternalMoniLog.g:13214:3: ( '%' )
            // InternalMoniLog.g:13215:4: '%'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); 
            }
            match(input,82,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getOpPercentSignKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__OpAssignment_1_1"


    // $ANTLR start "rule__Modulo__RightAssignment_1_2"
    // InternalMoniLog.g:13226:1: rule__Modulo__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Modulo__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13230:1: ( ( rulePrimary ) )
            // InternalMoniLog.g:13231:2: ( rulePrimary )
            {
            // InternalMoniLog.g:13231:2: ( rulePrimary )
            // InternalMoniLog.g:13232:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuloAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuloAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Modulo__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_0_2"
    // InternalMoniLog.g:13241:1: rule__Primary__ExpressionAssignment_0_2 : ( ruleSimpleExpression ) ;
    public final void rule__Primary__ExpressionAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13245:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:13246:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:13246:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:13247:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionSimpleExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionSimpleExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_0_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalMoniLog.g:13256:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13260:1: ( ( rulePrimary ) )
            // InternalMoniLog.g:13261:2: ( rulePrimary )
            {
            // InternalMoniLog.g:13261:2: ( rulePrimary )
            // InternalMoniLog.g:13262:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_2_2"
    // InternalMoniLog.g:13271:1: rule__Primary__ExpressionAssignment_2_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13275:1: ( ( rulePrimary ) )
            // InternalMoniLog.g:13276:2: ( rulePrimary )
            {
            // InternalMoniLog.g:13276:2: ( rulePrimary )
            // InternalMoniLog.g:13277:3: rulePrimary
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_2_2"


    // $ANTLR start "rule__Atomic__ValueAssignment_0_1"
    // InternalMoniLog.g:13286:1: rule__Atomic__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Atomic__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13290:1: ( ( RULE_INT ) )
            // InternalMoniLog.g:13291:2: ( RULE_INT )
            {
            // InternalMoniLog.g:13291:2: ( RULE_INT )
            // InternalMoniLog.g:13292:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_0_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_1_1"
    // InternalMoniLog.g:13301:1: rule__Atomic__ValueAssignment_1_1 : ( RULE_REAL ) ;
    public final void rule__Atomic__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13305:1: ( ( RULE_REAL ) )
            // InternalMoniLog.g:13306:2: ( RULE_REAL )
            {
            // InternalMoniLog.g:13306:2: ( RULE_REAL )
            // InternalMoniLog.g:13307:3: RULE_REAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_REAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueREALTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_1_1"


    // $ANTLR start "rule__Atomic__ValueAssignment_2_1_0"
    // InternalMoniLog.g:13316:1: rule__Atomic__ValueAssignment_2_1_0 : ( ( 'true' ) ) ;
    public final void rule__Atomic__ValueAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13320:1: ( ( ( 'true' ) ) )
            // InternalMoniLog.g:13321:2: ( ( 'true' ) )
            {
            // InternalMoniLog.g:13321:2: ( ( 'true' ) )
            // InternalMoniLog.g:13322:3: ( 'true' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); 
            }
            // InternalMoniLog.g:13323:3: ( 'true' )
            // InternalMoniLog.g:13324:4: 'true'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); 
            }
            match(input,83,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_2_1_0"


    // $ANTLR start "rule__Atomic__ValueAssignment_3_1"
    // InternalMoniLog.g:13335:1: rule__Atomic__ValueAssignment_3_1 : ( RULE_STRING ) ;
    public final void rule__Atomic__ValueAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13339:1: ( ( RULE_STRING ) )
            // InternalMoniLog.g:13340:2: ( RULE_STRING )
            {
            // InternalMoniLog.g:13340:2: ( RULE_STRING )
            // InternalMoniLog.g:13341:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValueAssignment_3_1"


    // $ANTLR start "rule__Atomic__ValuesAssignment_4_2"
    // InternalMoniLog.g:13350:1: rule__Atomic__ValuesAssignment_4_2 : ( ruleSimpleExpression ) ;
    public final void rule__Atomic__ValuesAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13354:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:13355:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:13355:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:13356:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValuesSimpleExpressionParserRuleCall_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValuesSimpleExpressionParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValuesAssignment_4_2"


    // $ANTLR start "rule__Atomic__ValuesAssignment_4_3_1"
    // InternalMoniLog.g:13365:1: rule__Atomic__ValuesAssignment_4_3_1 : ( ruleSimpleExpression ) ;
    public final void rule__Atomic__ValuesAssignment_4_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13369:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:13370:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:13370:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:13371:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicAccess().getValuesSimpleExpressionParserRuleCall_4_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicAccess().getValuesSimpleExpressionParserRuleCall_4_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atomic__ValuesAssignment_4_3_1"


    // $ANTLR start "rule__Ref__IndicesAssignment_1_0_2"
    // InternalMoniLog.g:13380:1: rule__Ref__IndicesAssignment_1_0_2 : ( ruleSimpleExpression ) ;
    public final void rule__Ref__IndicesAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13384:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:13385:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:13385:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:13386:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getIndicesSimpleExpressionParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getIndicesSimpleExpressionParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__IndicesAssignment_1_0_2"


    // $ANTLR start "rule__Ref__IndicesAssignment_1_0_3_1"
    // InternalMoniLog.g:13395:1: rule__Ref__IndicesAssignment_1_0_3_1 : ( ruleSimpleExpression ) ;
    public final void rule__Ref__IndicesAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13399:1: ( ( ruleSimpleExpression ) )
            // InternalMoniLog.g:13400:2: ( ruleSimpleExpression )
            {
            // InternalMoniLog.g:13400:2: ( ruleSimpleExpression )
            // InternalMoniLog.g:13401:3: ruleSimpleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getIndicesSimpleExpressionParserRuleCall_1_0_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getIndicesSimpleExpressionParserRuleCall_1_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__IndicesAssignment_1_0_3_1"


    // $ANTLR start "rule__Ref__PropertyAssignment_1_1_2"
    // InternalMoniLog.g:13410:1: rule__Ref__PropertyAssignment_1_1_2 : ( RULE_ID ) ;
    public final void rule__Ref__PropertyAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13414:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:13415:2: ( RULE_ID )
            {
            // InternalMoniLog.g:13415:2: ( RULE_ID )
            // InternalMoniLog.g:13416:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefAccess().getPropertyIDTerminalRuleCall_1_1_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefAccess().getPropertyIDTerminalRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ref__PropertyAssignment_1_1_2"


    // $ANTLR start "rule__SimpleVarRef__TargetAssignment"
    // InternalMoniLog.g:13425:1: rule__SimpleVarRef__TargetAssignment : ( RULE_ID ) ;
    public final void rule__SimpleVarRef__TargetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13429:1: ( ( RULE_ID ) )
            // InternalMoniLog.g:13430:2: ( RULE_ID )
            {
            // InternalMoniLog.g:13430:2: ( RULE_ID )
            // InternalMoniLog.g:13431:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleVarRefAccess().getTargetIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleVarRefAccess().getTargetIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleVarRef__TargetAssignment"


    // $ANTLR start "rule__ArraySize__ArrayAssignment_2"
    // InternalMoniLog.g:13440:1: rule__ArraySize__ArrayAssignment_2 : ( ruleRef ) ;
    public final void rule__ArraySize__ArrayAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalMoniLog.g:13444:1: ( ( ruleRef ) )
            // InternalMoniLog.g:13445:2: ( ruleRef )
            {
            // InternalMoniLog.g:13445:2: ( ruleRef )
            // InternalMoniLog.g:13446:3: ruleRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArraySizeAccess().getArrayRefParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArraySizeAccess().getArrayRefParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArraySize__ArrayAssignment_2"

    // $ANTLR start synpred7_InternalMoniLog
    public final void synpred7_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:1558:2: ( ( ( rule__Pattern__Group_0__0 ) ) )
        // InternalMoniLog.g:1558:2: ( ( rule__Pattern__Group_0__0 ) )
        {
        // InternalMoniLog.g:1558:2: ( ( rule__Pattern__Group_0__0 ) )
        // InternalMoniLog.g:1559:3: ( rule__Pattern__Group_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPatternAccess().getGroup_0()); 
        }
        // InternalMoniLog.g:1560:3: ( rule__Pattern__Group_0__0 )
        // InternalMoniLog.g:1560:4: rule__Pattern__Group_0__0
        {
        pushFollow(FOLLOW_2);
        rule__Pattern__Group_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred7_InternalMoniLog

    // $ANTLR start synpred10_InternalMoniLog
    public final void synpred10_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:1576:2: ( ( ( rule__Pattern__Group_3__0 ) ) )
        // InternalMoniLog.g:1576:2: ( ( rule__Pattern__Group_3__0 ) )
        {
        // InternalMoniLog.g:1576:2: ( ( rule__Pattern__Group_3__0 ) )
        // InternalMoniLog.g:1577:3: ( rule__Pattern__Group_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPatternAccess().getGroup_3()); 
        }
        // InternalMoniLog.g:1578:3: ( rule__Pattern__Group_3__0 )
        // InternalMoniLog.g:1578:4: rule__Pattern__Group_3__0
        {
        pushFollow(FOLLOW_2);
        rule__Pattern__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMoniLog

    // $ANTLR start synpred14_InternalMoniLog
    public final void synpred14_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:1630:2: ( ( ( rule__Scope__Group_1__0 ) ) )
        // InternalMoniLog.g:1630:2: ( ( rule__Scope__Group_1__0 ) )
        {
        // InternalMoniLog.g:1630:2: ( ( rule__Scope__Group_1__0 ) )
        // InternalMoniLog.g:1631:3: ( rule__Scope__Group_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getScopeAccess().getGroup_1()); 
        }
        // InternalMoniLog.g:1632:3: ( rule__Scope__Group_1__0 )
        // InternalMoniLog.g:1632:4: rule__Scope__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__Scope__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred14_InternalMoniLog

    // $ANTLR start synpred107_InternalMoniLog
    public final void synpred107_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11327:2: ( rule__Document__UnorderedGroup_3__0 )
        // InternalMoniLog.g:11327:2: rule__Document__UnorderedGroup_3__0
        {
        pushFollow(FOLLOW_2);
        rule__Document__UnorderedGroup_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalMoniLog

    // $ANTLR start synpred108_InternalMoniLog
    public final void synpred108_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11358:8: ( rule__Document__EventsAssignment_3_0 )
        // InternalMoniLog.g:11358:9: rule__Document__EventsAssignment_3_0
        {
        pushFollow(FOLLOW_2);
        rule__Document__EventsAssignment_3_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_InternalMoniLog

    // $ANTLR start synpred109_InternalMoniLog
    public final void synpred109_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11342:3: ( ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) ) )
        // InternalMoniLog.g:11342:3: ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) )
        {
        // InternalMoniLog.g:11342:3: ({...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) ) )
        // InternalMoniLog.g:11343:4: {...}? => ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred109_InternalMoniLog", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalMoniLog.g:11343:104: ( ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) ) )
        // InternalMoniLog.g:11344:5: ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0);
        // InternalMoniLog.g:11350:5: ( ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* ) )
        // InternalMoniLog.g:11351:6: ( ( rule__Document__EventsAssignment_3_0 ) ) ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* )
        {
        // InternalMoniLog.g:11351:6: ( ( rule__Document__EventsAssignment_3_0 ) )
        // InternalMoniLog.g:11352:7: ( rule__Document__EventsAssignment_3_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
        }
        // InternalMoniLog.g:11353:7: ( rule__Document__EventsAssignment_3_0 )
        // InternalMoniLog.g:11353:8: rule__Document__EventsAssignment_3_0
        {
        pushFollow(FOLLOW_84);
        rule__Document__EventsAssignment_3_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMoniLog.g:11356:6: ( ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )* )
        // InternalMoniLog.g:11357:7: ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getEventsAssignment_3_0()); 
        }
        // InternalMoniLog.g:11358:7: ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )*
        loop88:
        do {
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==50) && (synpred108_InternalMoniLog())) {
                alt88=1;
            }
            else if ( (LA88_0==51) && (synpred108_InternalMoniLog())) {
                alt88=1;
            }
            else if ( (LA88_0==52) && (synpred108_InternalMoniLog())) {
                alt88=1;
            }


            switch (alt88) {
        	case 1 :
        	    // InternalMoniLog.g:11358:8: ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0
        	    {
        	    pushFollow(FOLLOW_84);
        	    rule__Document__EventsAssignment_3_0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop88;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred109_InternalMoniLog

    // $ANTLR start synpred110_InternalMoniLog
    public final void synpred110_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11380:8: ( rule__Document__AppendersAssignment_3_1 )
        // InternalMoniLog.g:11380:9: rule__Document__AppendersAssignment_3_1
        {
        pushFollow(FOLLOW_2);
        rule__Document__AppendersAssignment_3_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalMoniLog

    // $ANTLR start synpred111_InternalMoniLog
    public final void synpred111_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11364:3: ( ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) ) )
        // InternalMoniLog.g:11364:3: ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) )
        {
        // InternalMoniLog.g:11364:3: ({...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) ) )
        // InternalMoniLog.g:11365:4: {...}? => ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred111_InternalMoniLog", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalMoniLog.g:11365:104: ( ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) ) )
        // InternalMoniLog.g:11366:5: ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1);
        // InternalMoniLog.g:11372:5: ( ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* ) )
        // InternalMoniLog.g:11373:6: ( ( rule__Document__AppendersAssignment_3_1 ) ) ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* )
        {
        // InternalMoniLog.g:11373:6: ( ( rule__Document__AppendersAssignment_3_1 ) )
        // InternalMoniLog.g:11374:7: ( rule__Document__AppendersAssignment_3_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
        }
        // InternalMoniLog.g:11375:7: ( rule__Document__AppendersAssignment_3_1 )
        // InternalMoniLog.g:11375:8: rule__Document__AppendersAssignment_3_1
        {
        pushFollow(FOLLOW_85);
        rule__Document__AppendersAssignment_3_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMoniLog.g:11378:6: ( ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )* )
        // InternalMoniLog.g:11379:7: ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getAppendersAssignment_3_1()); 
        }
        // InternalMoniLog.g:11380:7: ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )*
        loop89:
        do {
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==13) && (synpred110_InternalMoniLog())) {
                alt89=1;
            }
            else if ( (LA89_0==35) && (synpred110_InternalMoniLog())) {
                alt89=1;
            }


            switch (alt89) {
        	case 1 :
        	    // InternalMoniLog.g:11380:8: ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1
        	    {
        	    pushFollow(FOLLOW_85);
        	    rule__Document__AppendersAssignment_3_1();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop89;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred111_InternalMoniLog

    // $ANTLR start synpred112_InternalMoniLog
    public final void synpred112_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11402:8: ( rule__Document__LayoutsAssignment_3_2 )
        // InternalMoniLog.g:11402:9: rule__Document__LayoutsAssignment_3_2
        {
        pushFollow(FOLLOW_2);
        rule__Document__LayoutsAssignment_3_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred112_InternalMoniLog

    // $ANTLR start synpred113_InternalMoniLog
    public final void synpred113_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11386:3: ( ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) ) )
        // InternalMoniLog.g:11386:3: ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) )
        {
        // InternalMoniLog.g:11386:3: ({...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) ) )
        // InternalMoniLog.g:11387:4: {...}? => ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred113_InternalMoniLog", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalMoniLog.g:11387:104: ( ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) ) )
        // InternalMoniLog.g:11388:5: ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2);
        // InternalMoniLog.g:11394:5: ( ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* ) )
        // InternalMoniLog.g:11395:6: ( ( rule__Document__LayoutsAssignment_3_2 ) ) ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* )
        {
        // InternalMoniLog.g:11395:6: ( ( rule__Document__LayoutsAssignment_3_2 ) )
        // InternalMoniLog.g:11396:7: ( rule__Document__LayoutsAssignment_3_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
        }
        // InternalMoniLog.g:11397:7: ( rule__Document__LayoutsAssignment_3_2 )
        // InternalMoniLog.g:11397:8: rule__Document__LayoutsAssignment_3_2
        {
        pushFollow(FOLLOW_86);
        rule__Document__LayoutsAssignment_3_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMoniLog.g:11400:6: ( ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )* )
        // InternalMoniLog.g:11401:7: ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDocumentAccess().getLayoutsAssignment_3_2()); 
        }
        // InternalMoniLog.g:11402:7: ( ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2 )*
        loop90:
        do {
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==41) && (synpred112_InternalMoniLog())) {
                alt90=1;
            }


            switch (alt90) {
        	case 1 :
        	    // InternalMoniLog.g:11402:8: ( rule__Document__LayoutsAssignment_3_2 )=> rule__Document__LayoutsAssignment_3_2
        	    {
        	    pushFollow(FOLLOW_86);
        	    rule__Document__LayoutsAssignment_3_2();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop90;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalMoniLog

    // $ANTLR start synpred114_InternalMoniLog
    public final void synpred114_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11424:8: ( rule__Document__MoniloggersAssignment_3_3 )
        // InternalMoniLog.g:11424:9: rule__Document__MoniloggersAssignment_3_3
        {
        pushFollow(FOLLOW_2);
        rule__Document__MoniloggersAssignment_3_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred114_InternalMoniLog

    // $ANTLR start synpred115_InternalMoniLog
    public final void synpred115_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11444:2: ( rule__Document__UnorderedGroup_3__1 )
        // InternalMoniLog.g:11444:2: rule__Document__UnorderedGroup_3__1
        {
        pushFollow(FOLLOW_2);
        rule__Document__UnorderedGroup_3__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalMoniLog

    // $ANTLR start synpred116_InternalMoniLog
    public final void synpred116_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11456:2: ( rule__Document__UnorderedGroup_3__2 )
        // InternalMoniLog.g:11456:2: rule__Document__UnorderedGroup_3__2
        {
        pushFollow(FOLLOW_2);
        rule__Document__UnorderedGroup_3__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred116_InternalMoniLog

    // $ANTLR start synpred117_InternalMoniLog
    public final void synpred117_InternalMoniLog_fragment() throws RecognitionException {   
        // InternalMoniLog.g:11468:2: ( rule__Document__UnorderedGroup_3__3 )
        // InternalMoniLog.g:11468:2: rule__Document__UnorderedGroup_3__3
        {
        pushFollow(FOLLOW_2);
        rule__Document__UnorderedGroup_3__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalMoniLog

    // Delegated rules

    public final boolean synpred7_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalMoniLog() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalMoniLog_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\3\uffff\1\5\3\uffff\1\5\3\uffff";
    static final String dfa_3s = "\1\15\1\uffff\1\4\1\14\1\4\1\uffff\1\50\1\14\1\4\2\50";
    static final String dfa_4s = "\1\43\1\uffff\1\4\1\64\1\50\1\uffff\1\52\1\64\1\4\1\53\1\50";
    static final String dfa_5s = "\1\uffff\1\1\3\uffff\1\2\5\uffff";
    static final String dfa_6s = "\13\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\25\uffff\1\2",
            "",
            "\1\3",
            "\2\5\25\uffff\1\5\1\1\2\uffff\1\4\1\uffff\1\5\2\uffff\1\5\5\uffff\3\5",
            "\1\6\43\uffff\1\7",
            "",
            "\1\7\1\uffff\1\10",
            "\2\5\25\uffff\1\5\1\1\4\uffff\1\5\2\uffff\1\5\5\uffff\3\5",
            "\1\11",
            "\1\7\1\uffff\1\10\1\12",
            "\1\7"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1463:1: rule__Appender__Alternatives : ( ( ruleLocalAppender ) | ( ruleExternalAppender ) );";
        }
    }
    static final String dfa_8s = "\2\uffff\1\4\4\uffff\1\4\3\uffff";
    static final String dfa_9s = "\1\51\1\4\1\14\1\4\2\uffff\1\50\1\14\1\4\2\50";
    static final String dfa_10s = "\1\51\1\4\1\64\1\50\2\uffff\1\52\1\64\1\4\1\53\1\50";
    static final String dfa_11s = "\4\uffff\1\2\1\1\5\uffff";
    static final String[] dfa_12s = {
            "\1\1",
            "\1\2",
            "\2\4\25\uffff\1\4\1\5\2\uffff\1\3\1\uffff\1\4\2\uffff\1\4\5\uffff\3\4",
            "\1\6\43\uffff\1\7",
            "",
            "",
            "\1\7\1\uffff\1\10",
            "\2\4\25\uffff\1\4\1\5\4\uffff\1\4\2\uffff\1\4\5\uffff\3\4",
            "\1\11",
            "\1\7\1\uffff\1\10\1\12",
            "\1\7"
    };
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_6;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1484:1: rule__Layout__Alternatives : ( ( ruleLocalLayout ) | ( ruleExternalLayout ) );";
        }
    }
    static final String dfa_13s = "\12\uffff";
    static final String dfa_14s = "\1\4\4\uffff\1\0\4\uffff";
    static final String dfa_15s = "\1\75\4\uffff\1\0\4\uffff";
    static final String dfa_16s = "\1\uffff\1\1\4\uffff\1\2\1\3\1\4\1\5";
    static final String dfa_17s = "\5\uffff\1\0\4\uffff}>";
    static final String[] dfa_18s = {
            "\1\5\1\uffff\1\1\60\uffff\1\1\1\6\1\7\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1553:1: rule__Pattern__Alternatives : ( ( ( rule__Pattern__Group_0__0 ) ) | ( ( rule__Pattern__Group_1__0 ) ) | ( ( rule__Pattern__Group_2__0 ) ) | ( ( rule__Pattern__Group_3__0 ) ) | ( ( rule__Pattern__Group_4__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_5 = input.LA(1);

                         
                        int index6_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMoniLog()) ) {s = 1;}

                        else if ( (synpred10_InternalMoniLog()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index6_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\1\11\11\uffff";
    static final String dfa_20s = "\1\14\11\uffff";
    static final String dfa_21s = "\1\64\11\uffff";
    static final String dfa_22s = "\1\uffff\10\1\1\2";
    static final String dfa_23s = "\1\0\11\uffff}>";
    static final String[] dfa_24s = {
            "\1\7\1\4\25\uffff\1\5\5\uffff\1\6\2\uffff\1\10\5\uffff\1\1\1\2\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_13;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "11327:2: ( rule__Document__UnorderedGroup_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_0 = input.LA(1);

                         
                        int index79_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA79_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA79_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA79_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA79_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA79_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA79_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA79_0 == 12 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA79_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( (LA79_0==EOF) ) {s = 9;}

                         
                        input.seek(index79_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\1\4\12\uffff";
    static final String dfa_26s = "\1\14\3\0\7\uffff";
    static final String dfa_27s = "\1\64\3\0\7\uffff";
    static final String dfa_28s = "\4\uffff\1\2\5\uffff\1\1";
    static final String dfa_29s = "\1\uffff\1\0\1\1\1\2\7\uffff}>";
    static final String[] dfa_30s = {
            "\2\4\25\uffff\1\4\5\uffff\1\4\2\uffff\1\4\5\uffff\1\1\1\2\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_1;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "()* loopback of 11358:7: ( ( rule__Document__EventsAssignment_3_0 )=> rule__Document__EventsAssignment_3_0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_2 = input.LA(1);

                         
                        int index80_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_3 = input.LA(1);

                         
                        int index80_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\1\1\12\uffff";
    static final String dfa_32s = "\1\14\3\uffff\2\0\5\uffff";
    static final String dfa_33s = "\1\64\3\uffff\2\0\5\uffff";
    static final String dfa_34s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_35s = "\4\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_36s = {
            "\1\1\1\4\25\uffff\1\5\5\uffff\1\1\2\uffff\1\1\5\uffff\3\1",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_1;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "()* loopback of 11380:7: ( ( rule__Document__AppendersAssignment_3_1 )=> rule__Document__AppendersAssignment_3_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\14\6\uffff\2\0\2\uffff";
    static final String dfa_38s = "\1\64\6\uffff\2\0\2\uffff";
    static final String dfa_39s = "\7\uffff\1\0\1\1\2\uffff}>";
    static final String[] dfa_40s = {
            "\1\7\1\1\25\uffff\1\1\5\uffff\1\1\2\uffff\1\10\5\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_1;
            this.eof = dfa_31;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_34;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "()* loopback of 11424:7: ( ( rule__Document__MoniloggersAssignment_3_3 )=> rule__Document__MoniloggersAssignment_3_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_7 = input.LA(1);

                         
                        int index83_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index83_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_8 = input.LA(1);

                         
                        int index83_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalMoniLog()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index83_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_13;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "11444:2: ( rule__Document__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_0 = input.LA(1);

                         
                        int index85_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA85_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA85_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA85_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA85_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA85_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA85_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA85_0 == 12 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA85_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( (LA85_0==EOF) ) {s = 9;}

                         
                        input.seek(index85_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_13;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "11456:2: ( rule__Document__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_0 = input.LA(1);

                         
                        int index86_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA86_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA86_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA86_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA86_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA86_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA86_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA86_0 == 12 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA86_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( (LA86_0==EOF) ) {s = 9;}

                         
                        input.seek(index86_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_13;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "11468:2: ( rule__Document__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_0 = input.LA(1);

                         
                        int index87_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA87_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA87_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA87_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA87_0 == 13 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA87_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA87_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA87_0 == 12 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA87_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( (LA87_0==EOF) ) {s = 9;}

                         
                        input.seek(index87_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x001C120A00003000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000800002000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000009000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x001C120800003000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000809000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0002400000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x000000000FE00000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0060000000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x3380000000000050L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00000000F0000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x001C000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0xC060000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x3080000000000050L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000001000000010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000050000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x00008080001000F0L,0x0000000000080E00L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x000000000000C002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00000000000F0000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00000000000F0002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008200L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008200L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000000030000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000100000L,0x0000000000080000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0001040000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000800000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x001C000000000002L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000800002002L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x001C120800003002L});

}
