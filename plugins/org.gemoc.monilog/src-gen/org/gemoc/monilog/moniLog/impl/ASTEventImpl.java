/**
 * generated by Xtext 2.21.0
 */
package org.gemoc.monilog.moniLog.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.gemoc.monilog.moniLog.ASTEvent;
import org.gemoc.monilog.moniLog.ASTEventKind;
import org.gemoc.monilog.moniLog.MoniLogPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AST Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.gemoc.monilog.moniLog.impl.ASTEventImpl#getKind <em>Kind</em>}</li>
 *   <li>{@link org.gemoc.monilog.moniLog.impl.ASTEventImpl#getRuleID <em>Rule ID</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ASTEventImpl extends EventImpl implements ASTEvent
{
  /**
   * The cached value of the '{@link #getKind() <em>Kind</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKind()
   * @generated
   * @ordered
   */
  protected ASTEventKind kind;

  /**
   * The default value of the '{@link #getRuleID() <em>Rule ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleID()
   * @generated
   * @ordered
   */
  protected static final String RULE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRuleID() <em>Rule ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleID()
   * @generated
   * @ordered
   */
  protected String ruleID = RULE_ID_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ASTEventImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MoniLogPackage.Literals.AST_EVENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ASTEventKind getKind()
  {
    return kind;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKind(ASTEventKind newKind, NotificationChain msgs)
  {
    ASTEventKind oldKind = kind;
    kind = newKind;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MoniLogPackage.AST_EVENT__KIND, oldKind, newKind);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKind(ASTEventKind newKind)
  {
    if (newKind != kind)
    {
      NotificationChain msgs = null;
      if (kind != null)
        msgs = ((InternalEObject)kind).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MoniLogPackage.AST_EVENT__KIND, null, msgs);
      if (newKind != null)
        msgs = ((InternalEObject)newKind).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MoniLogPackage.AST_EVENT__KIND, null, msgs);
      msgs = basicSetKind(newKind, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoniLogPackage.AST_EVENT__KIND, newKind, newKind));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRuleID()
  {
    return ruleID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRuleID(String newRuleID)
  {
    String oldRuleID = ruleID;
    ruleID = newRuleID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoniLogPackage.AST_EVENT__RULE_ID, oldRuleID, ruleID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MoniLogPackage.AST_EVENT__KIND:
        return basicSetKind(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MoniLogPackage.AST_EVENT__KIND:
        return getKind();
      case MoniLogPackage.AST_EVENT__RULE_ID:
        return getRuleID();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MoniLogPackage.AST_EVENT__KIND:
        setKind((ASTEventKind)newValue);
        return;
      case MoniLogPackage.AST_EVENT__RULE_ID:
        setRuleID((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MoniLogPackage.AST_EVENT__KIND:
        setKind((ASTEventKind)null);
        return;
      case MoniLogPackage.AST_EVENT__RULE_ID:
        setRuleID(RULE_ID_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MoniLogPackage.AST_EVENT__KIND:
        return kind != null;
      case MoniLogPackage.AST_EVENT__RULE_ID:
        return RULE_ID_EDEFAULT == null ? ruleID != null : !RULE_ID_EDEFAULT.equals(ruleID);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ruleID: ");
    result.append(ruleID);
    result.append(')');
    return result.toString();
  }

} //ASTEventImpl
