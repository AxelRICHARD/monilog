/**
 * generated by Xtext 2.22.0
 */
package org.gemoc.monilog.moniLog4DSL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.gemoc.monilog.moniLog4DSL.Absence;
import org.gemoc.monilog.moniLog4DSL.Action;
import org.gemoc.monilog.moniLog4DSL.After;
import org.gemoc.monilog.moniLog4DSL.AfterEvent;
import org.gemoc.monilog.moniLog4DSL.AfterUntil;
import org.gemoc.monilog.moniLog4DSL.Append;
import org.gemoc.monilog.moniLog4DSL.Appender;
import org.gemoc.monilog.moniLog4DSL.Before;
import org.gemoc.monilog.moniLog4DSL.BeforeAfterEvent;
import org.gemoc.monilog.moniLog4DSL.BeforeEvent;
import org.gemoc.monilog.moniLog4DSL.Between;
import org.gemoc.monilog.moniLog4DSL.BoundType;
import org.gemoc.monilog.moniLog4DSL.Condition;
import org.gemoc.monilog.moniLog4DSL.ConsoleAppender;
import org.gemoc.monilog.moniLog4DSL.DefaultLanguageExpression;
import org.gemoc.monilog.moniLog4DSL.Empty;
import org.gemoc.monilog.moniLog4DSL.EmptyOrPropertyValue;
import org.gemoc.monilog.moniLog4DSL.Event;
import org.gemoc.monilog.moniLog4DSL.ExactBound;
import org.gemoc.monilog.moniLog4DSL.Existence;
import org.gemoc.monilog.moniLog4DSL.ExplicitLanguageExpression;
import org.gemoc.monilog.moniLog4DSL.ExternalLayout;
import org.gemoc.monilog.moniLog4DSL.FileAppender;
import org.gemoc.monilog.moniLog4DSL.Globally;
import org.gemoc.monilog.moniLog4DSL.LanguageExpression;
import org.gemoc.monilog.moniLog4DSL.LanguageExpressionCondition;
import org.gemoc.monilog.moniLog4DSL.Layout;
import org.gemoc.monilog.moniLog4DSL.LogLevel;
import org.gemoc.monilog.moniLog4DSL.LowerBound;
import org.gemoc.monilog.moniLog4DSL.Model;
import org.gemoc.monilog.moniLog4DSL.MoniLog4DSLFactory;
import org.gemoc.monilog.moniLog4DSL.MoniLog4DSLPackage;
import org.gemoc.monilog.moniLog4DSL.MoniLogSpec;
import org.gemoc.monilog.moniLog4DSL.Notify;
import org.gemoc.monilog.moniLog4DSL.Pattern;
import org.gemoc.monilog.moniLog4DSL.Precedence;
import org.gemoc.monilog.moniLog4DSL.PropertyValue;
import org.gemoc.monilog.moniLog4DSL.Response;
import org.gemoc.monilog.moniLog4DSL.Scope;
import org.gemoc.monilog.moniLog4DSL.StreamAppender;
import org.gemoc.monilog.moniLog4DSL.StreamEvent;
import org.gemoc.monilog.moniLog4DSL.StringLayout;
import org.gemoc.monilog.moniLog4DSL.TemporalPattern;
import org.gemoc.monilog.moniLog4DSL.TemporalPropertyCondition;
import org.gemoc.monilog.moniLog4DSL.TemporalPropertyConditionKind;
import org.gemoc.monilog.moniLog4DSL.Universality;
import org.gemoc.monilog.moniLog4DSL.UpperBound;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MoniLog4DSLPackageImpl extends EPackageImpl implements MoniLog4DSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass moniLogSpecEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass beforeEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass afterEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass beforeAfterEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass temporalPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass boundTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exactBoundEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lowerBoundEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass upperBoundEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scopeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass appendEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass appenderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass streamAppenderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fileAppenderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass consoleAppenderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass layoutEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringLayoutEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass externalLayoutEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass streamEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emptyOrPropertyValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass languageExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass temporalPropertyConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass languageExpressionConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass universalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass existenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass absenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass precedenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass responseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass globallyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass afterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass beforeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass betweenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass afterUntilEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notifyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emptyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass explicitLanguageExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defaultLanguageExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum logLevelEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum temporalPropertyConditionKindEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.gemoc.monilog.moniLog4DSL.MoniLog4DSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MoniLog4DSLPackageImpl()
  {
    super(eNS_URI, MoniLog4DSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MoniLog4DSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MoniLog4DSLPackage init()
  {
    if (isInited) return (MoniLog4DSLPackage)EPackage.Registry.INSTANCE.getEPackage(MoniLog4DSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMoniLog4DSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MoniLog4DSLPackageImpl theMoniLog4DSLPackage = registeredMoniLog4DSLPackage instanceof MoniLog4DSLPackageImpl ? (MoniLog4DSLPackageImpl)registeredMoniLog4DSLPackage : new MoniLog4DSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMoniLog4DSLPackage.createPackageContents();

    // Initialize created meta-data
    theMoniLog4DSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMoniLog4DSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MoniLog4DSLPackage.eNS_URI, theMoniLog4DSLPackage);
    return theMoniLog4DSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_DefaultLanguageID()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_MoniLogSpecs()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMoniLogSpec()
  {
    return moniLogSpecEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMoniLogSpec_Name()
  {
    return (EAttribute)moniLogSpecEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMoniLogSpec_Level()
  {
    return (EAttribute)moniLogSpecEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMoniLogSpec_Events()
  {
    return (EReference)moniLogSpecEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMoniLogSpec_Conditions()
  {
    return (EReference)moniLogSpecEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMoniLogSpec_Actions()
  {
    return (EReference)moniLogSpecEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEvent()
  {
    return eventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvent_RuleID()
  {
    return (EAttribute)eventEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvent_Frequency()
  {
    return (EAttribute)eventEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvent_Limit()
  {
    return (EAttribute)eventEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBeforeEvent()
  {
    return beforeEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAfterEvent()
  {
    return afterEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBeforeAfterEvent()
  {
    return beforeAfterEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTemporalPattern()
  {
    return temporalPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTemporalPattern_Pattern()
  {
    return (EReference)temporalPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTemporalPattern_Scope()
  {
    return (EReference)temporalPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPattern()
  {
    return patternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBoundType()
  {
    return boundTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBoundType_N()
  {
    return (EAttribute)boundTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExactBound()
  {
    return exactBoundEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLowerBound()
  {
    return lowerBoundEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUpperBound()
  {
    return upperBoundEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScope()
  {
    return scopeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAction()
  {
    return actionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAppend()
  {
    return appendEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAppend_Appender()
  {
    return (EReference)appendEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAppender()
  {
    return appenderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStreamAppender()
  {
    return streamAppenderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStreamAppender_Event()
  {
    return (EAttribute)streamAppenderEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStreamAppender_Values()
  {
    return (EReference)streamAppenderEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFileAppender()
  {
    return fileAppenderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFileAppender_Filename()
  {
    return (EAttribute)fileAppenderEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFileAppender_Layout()
  {
    return (EReference)fileAppenderEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConsoleAppender()
  {
    return consoleAppenderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConsoleAppender_Layout()
  {
    return (EReference)consoleAppenderEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLayout()
  {
    return layoutEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLayout_Values()
  {
    return (EReference)layoutEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringLayout()
  {
    return stringLayoutEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringLayout_FormatString()
  {
    return (EAttribute)stringLayoutEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExternalLayout()
  {
    return externalLayoutEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExternalLayout_Path()
  {
    return (EAttribute)externalLayoutEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStreamEvent()
  {
    return streamEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStreamEvent_EventId()
  {
    return (EAttribute)streamEventEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStreamEvent_Values()
  {
    return (EReference)streamEventEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEmptyOrPropertyValue()
  {
    return emptyOrPropertyValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLanguageExpression()
  {
    return languageExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLanguageExpression_Expression()
  {
    return (EAttribute)languageExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTemporalPropertyCondition()
  {
    return temporalPropertyConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTemporalPropertyCondition_Pattern()
  {
    return (EReference)temporalPropertyConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTemporalPropertyCondition_Kind()
  {
    return (EAttribute)temporalPropertyConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLanguageExpressionCondition()
  {
    return languageExpressionConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLanguageExpressionCondition_Expression()
  {
    return (EReference)languageExpressionConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUniversality()
  {
    return universalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUniversality_Event()
  {
    return (EReference)universalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExistence()
  {
    return existenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExistence_Bound()
  {
    return (EReference)existenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExistence_Event()
  {
    return (EReference)existenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbsence()
  {
    return absenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAbsence_Event()
  {
    return (EReference)absenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrecedence()
  {
    return precedenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrecedence_Predecessor()
  {
    return (EReference)precedenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrecedence_Successor()
  {
    return (EReference)precedenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getResponse()
  {
    return responseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResponse_Event()
  {
    return (EReference)responseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getResponse_Trigger()
  {
    return (EReference)responseEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGlobally()
  {
    return globallyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAfter()
  {
    return afterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAfter_LowerBound()
  {
    return (EReference)afterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBefore()
  {
    return beforeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBefore_UpperBound()
  {
    return (EReference)beforeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBetween()
  {
    return betweenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetween_LowerBound()
  {
    return (EReference)betweenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetween_UpperBound()
  {
    return (EReference)betweenEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAfterUntil()
  {
    return afterUntilEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAfterUntil_LowerBound()
  {
    return (EReference)afterUntilEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAfterUntil_UpperBound()
  {
    return (EReference)afterUntilEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNotify()
  {
    return notifyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEmpty()
  {
    return emptyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPropertyValue()
  {
    return propertyValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPropertyValue_Id()
  {
    return (EAttribute)propertyValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPropertyValue_Value()
  {
    return (EReference)propertyValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExplicitLanguageExpression()
  {
    return explicitLanguageExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplicitLanguageExpression_LanguageId()
  {
    return (EAttribute)explicitLanguageExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDefaultLanguageExpression()
  {
    return defaultLanguageExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getLogLevel()
  {
    return logLevelEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getTemporalPropertyConditionKind()
  {
    return temporalPropertyConditionKindEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MoniLog4DSLFactory getMoniLog4DSLFactory()
  {
    return (MoniLog4DSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__DEFAULT_LANGUAGE_ID);
    createEReference(modelEClass, MODEL__MONI_LOG_SPECS);

    moniLogSpecEClass = createEClass(MONI_LOG_SPEC);
    createEAttribute(moniLogSpecEClass, MONI_LOG_SPEC__NAME);
    createEAttribute(moniLogSpecEClass, MONI_LOG_SPEC__LEVEL);
    createEReference(moniLogSpecEClass, MONI_LOG_SPEC__EVENTS);
    createEReference(moniLogSpecEClass, MONI_LOG_SPEC__CONDITIONS);
    createEReference(moniLogSpecEClass, MONI_LOG_SPEC__ACTIONS);

    eventEClass = createEClass(EVENT);
    createEAttribute(eventEClass, EVENT__RULE_ID);
    createEAttribute(eventEClass, EVENT__FREQUENCY);
    createEAttribute(eventEClass, EVENT__LIMIT);

    beforeEventEClass = createEClass(BEFORE_EVENT);

    afterEventEClass = createEClass(AFTER_EVENT);

    beforeAfterEventEClass = createEClass(BEFORE_AFTER_EVENT);

    conditionEClass = createEClass(CONDITION);

    temporalPatternEClass = createEClass(TEMPORAL_PATTERN);
    createEReference(temporalPatternEClass, TEMPORAL_PATTERN__PATTERN);
    createEReference(temporalPatternEClass, TEMPORAL_PATTERN__SCOPE);

    patternEClass = createEClass(PATTERN);

    boundTypeEClass = createEClass(BOUND_TYPE);
    createEAttribute(boundTypeEClass, BOUND_TYPE__N);

    exactBoundEClass = createEClass(EXACT_BOUND);

    lowerBoundEClass = createEClass(LOWER_BOUND);

    upperBoundEClass = createEClass(UPPER_BOUND);

    scopeEClass = createEClass(SCOPE);

    actionEClass = createEClass(ACTION);

    appendEClass = createEClass(APPEND);
    createEReference(appendEClass, APPEND__APPENDER);

    appenderEClass = createEClass(APPENDER);

    streamAppenderEClass = createEClass(STREAM_APPENDER);
    createEAttribute(streamAppenderEClass, STREAM_APPENDER__EVENT);
    createEReference(streamAppenderEClass, STREAM_APPENDER__VALUES);

    fileAppenderEClass = createEClass(FILE_APPENDER);
    createEAttribute(fileAppenderEClass, FILE_APPENDER__FILENAME);
    createEReference(fileAppenderEClass, FILE_APPENDER__LAYOUT);

    consoleAppenderEClass = createEClass(CONSOLE_APPENDER);
    createEReference(consoleAppenderEClass, CONSOLE_APPENDER__LAYOUT);

    layoutEClass = createEClass(LAYOUT);
    createEReference(layoutEClass, LAYOUT__VALUES);

    stringLayoutEClass = createEClass(STRING_LAYOUT);
    createEAttribute(stringLayoutEClass, STRING_LAYOUT__FORMAT_STRING);

    externalLayoutEClass = createEClass(EXTERNAL_LAYOUT);
    createEAttribute(externalLayoutEClass, EXTERNAL_LAYOUT__PATH);

    streamEventEClass = createEClass(STREAM_EVENT);
    createEAttribute(streamEventEClass, STREAM_EVENT__EVENT_ID);
    createEReference(streamEventEClass, STREAM_EVENT__VALUES);

    emptyOrPropertyValueEClass = createEClass(EMPTY_OR_PROPERTY_VALUE);

    languageExpressionEClass = createEClass(LANGUAGE_EXPRESSION);
    createEAttribute(languageExpressionEClass, LANGUAGE_EXPRESSION__EXPRESSION);

    temporalPropertyConditionEClass = createEClass(TEMPORAL_PROPERTY_CONDITION);
    createEReference(temporalPropertyConditionEClass, TEMPORAL_PROPERTY_CONDITION__PATTERN);
    createEAttribute(temporalPropertyConditionEClass, TEMPORAL_PROPERTY_CONDITION__KIND);

    languageExpressionConditionEClass = createEClass(LANGUAGE_EXPRESSION_CONDITION);
    createEReference(languageExpressionConditionEClass, LANGUAGE_EXPRESSION_CONDITION__EXPRESSION);

    universalityEClass = createEClass(UNIVERSALITY);
    createEReference(universalityEClass, UNIVERSALITY__EVENT);

    existenceEClass = createEClass(EXISTENCE);
    createEReference(existenceEClass, EXISTENCE__BOUND);
    createEReference(existenceEClass, EXISTENCE__EVENT);

    absenceEClass = createEClass(ABSENCE);
    createEReference(absenceEClass, ABSENCE__EVENT);

    precedenceEClass = createEClass(PRECEDENCE);
    createEReference(precedenceEClass, PRECEDENCE__PREDECESSOR);
    createEReference(precedenceEClass, PRECEDENCE__SUCCESSOR);

    responseEClass = createEClass(RESPONSE);
    createEReference(responseEClass, RESPONSE__EVENT);
    createEReference(responseEClass, RESPONSE__TRIGGER);

    globallyEClass = createEClass(GLOBALLY);

    afterEClass = createEClass(AFTER);
    createEReference(afterEClass, AFTER__LOWER_BOUND);

    beforeEClass = createEClass(BEFORE);
    createEReference(beforeEClass, BEFORE__UPPER_BOUND);

    betweenEClass = createEClass(BETWEEN);
    createEReference(betweenEClass, BETWEEN__LOWER_BOUND);
    createEReference(betweenEClass, BETWEEN__UPPER_BOUND);

    afterUntilEClass = createEClass(AFTER_UNTIL);
    createEReference(afterUntilEClass, AFTER_UNTIL__LOWER_BOUND);
    createEReference(afterUntilEClass, AFTER_UNTIL__UPPER_BOUND);

    notifyEClass = createEClass(NOTIFY);

    emptyEClass = createEClass(EMPTY);

    propertyValueEClass = createEClass(PROPERTY_VALUE);
    createEAttribute(propertyValueEClass, PROPERTY_VALUE__ID);
    createEReference(propertyValueEClass, PROPERTY_VALUE__VALUE);

    explicitLanguageExpressionEClass = createEClass(EXPLICIT_LANGUAGE_EXPRESSION);
    createEAttribute(explicitLanguageExpressionEClass, EXPLICIT_LANGUAGE_EXPRESSION__LANGUAGE_ID);

    defaultLanguageExpressionEClass = createEClass(DEFAULT_LANGUAGE_EXPRESSION);

    // Create enums
    logLevelEEnum = createEEnum(LOG_LEVEL);
    temporalPropertyConditionKindEEnum = createEEnum(TEMPORAL_PROPERTY_CONDITION_KIND);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    beforeEventEClass.getESuperTypes().add(this.getEvent());
    afterEventEClass.getESuperTypes().add(this.getEvent());
    beforeAfterEventEClass.getESuperTypes().add(this.getEvent());
    exactBoundEClass.getESuperTypes().add(this.getBoundType());
    lowerBoundEClass.getESuperTypes().add(this.getBoundType());
    upperBoundEClass.getESuperTypes().add(this.getBoundType());
    appendEClass.getESuperTypes().add(this.getAction());
    streamAppenderEClass.getESuperTypes().add(this.getAppender());
    fileAppenderEClass.getESuperTypes().add(this.getAppender());
    consoleAppenderEClass.getESuperTypes().add(this.getAppender());
    stringLayoutEClass.getESuperTypes().add(this.getLayout());
    externalLayoutEClass.getESuperTypes().add(this.getLayout());
    temporalPropertyConditionEClass.getESuperTypes().add(this.getCondition());
    languageExpressionConditionEClass.getESuperTypes().add(this.getCondition());
    universalityEClass.getESuperTypes().add(this.getPattern());
    existenceEClass.getESuperTypes().add(this.getPattern());
    absenceEClass.getESuperTypes().add(this.getPattern());
    precedenceEClass.getESuperTypes().add(this.getPattern());
    responseEClass.getESuperTypes().add(this.getPattern());
    globallyEClass.getESuperTypes().add(this.getScope());
    afterEClass.getESuperTypes().add(this.getScope());
    beforeEClass.getESuperTypes().add(this.getScope());
    betweenEClass.getESuperTypes().add(this.getScope());
    afterUntilEClass.getESuperTypes().add(this.getScope());
    notifyEClass.getESuperTypes().add(this.getAction());
    emptyEClass.getESuperTypes().add(this.getEmptyOrPropertyValue());
    propertyValueEClass.getESuperTypes().add(this.getEmptyOrPropertyValue());
    explicitLanguageExpressionEClass.getESuperTypes().add(this.getLanguageExpression());
    defaultLanguageExpressionEClass.getESuperTypes().add(this.getLanguageExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModel_DefaultLanguageID(), ecorePackage.getEString(), "defaultLanguageID", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_MoniLogSpecs(), this.getMoniLogSpec(), null, "moniLogSpecs", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(moniLogSpecEClass, MoniLogSpec.class, "MoniLogSpec", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMoniLogSpec_Name(), ecorePackage.getEString(), "name", null, 0, 1, MoniLogSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMoniLogSpec_Level(), this.getLogLevel(), "level", null, 0, 1, MoniLogSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMoniLogSpec_Events(), this.getEvent(), null, "events", null, 0, -1, MoniLogSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMoniLogSpec_Conditions(), this.getCondition(), null, "conditions", null, 0, -1, MoniLogSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMoniLogSpec_Actions(), this.getAction(), null, "actions", null, 0, -1, MoniLogSpec.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventEClass, Event.class, "Event", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvent_RuleID(), ecorePackage.getEString(), "ruleID", null, 0, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvent_Frequency(), ecorePackage.getEInt(), "frequency", null, 0, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvent_Limit(), ecorePackage.getEInt(), "limit", null, 0, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(beforeEventEClass, BeforeEvent.class, "BeforeEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(afterEventEClass, AfterEvent.class, "AfterEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(beforeAfterEventEClass, BeforeAfterEvent.class, "BeforeAfterEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(temporalPatternEClass, TemporalPattern.class, "TemporalPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTemporalPattern_Pattern(), this.getPattern(), null, "pattern", null, 0, 1, TemporalPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTemporalPattern_Scope(), this.getScope(), null, "scope", null, 0, 1, TemporalPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternEClass, Pattern.class, "Pattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(boundTypeEClass, BoundType.class, "BoundType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBoundType_N(), ecorePackage.getEInt(), "n", null, 0, 1, BoundType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exactBoundEClass, ExactBound.class, "ExactBound", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(lowerBoundEClass, LowerBound.class, "LowerBound", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(upperBoundEClass, UpperBound.class, "UpperBound", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(scopeEClass, Scope.class, "Scope", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(actionEClass, Action.class, "Action", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(appendEClass, Append.class, "Append", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAppend_Appender(), this.getAppender(), null, "appender", null, 0, 1, Append.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(appenderEClass, Appender.class, "Appender", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(streamAppenderEClass, StreamAppender.class, "StreamAppender", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStreamAppender_Event(), ecorePackage.getEString(), "event", null, 0, 1, StreamAppender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStreamAppender_Values(), this.getLanguageExpression(), null, "values", null, 0, -1, StreamAppender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fileAppenderEClass, FileAppender.class, "FileAppender", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFileAppender_Filename(), ecorePackage.getEString(), "filename", null, 0, 1, FileAppender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFileAppender_Layout(), this.getLayout(), null, "layout", null, 0, 1, FileAppender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(consoleAppenderEClass, ConsoleAppender.class, "ConsoleAppender", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConsoleAppender_Layout(), this.getLayout(), null, "layout", null, 0, 1, ConsoleAppender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(layoutEClass, Layout.class, "Layout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLayout_Values(), this.getLanguageExpression(), null, "values", null, 0, -1, Layout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringLayoutEClass, StringLayout.class, "StringLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringLayout_FormatString(), ecorePackage.getEString(), "formatString", null, 0, 1, StringLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(externalLayoutEClass, ExternalLayout.class, "ExternalLayout", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExternalLayout_Path(), ecorePackage.getEString(), "path", null, 0, 1, ExternalLayout.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(streamEventEClass, StreamEvent.class, "StreamEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStreamEvent_EventId(), ecorePackage.getEString(), "eventId", null, 0, 1, StreamEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStreamEvent_Values(), this.getEmptyOrPropertyValue(), null, "values", null, 0, -1, StreamEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(emptyOrPropertyValueEClass, EmptyOrPropertyValue.class, "EmptyOrPropertyValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(languageExpressionEClass, LanguageExpression.class, "LanguageExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLanguageExpression_Expression(), ecorePackage.getEString(), "expression", null, 0, 1, LanguageExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(temporalPropertyConditionEClass, TemporalPropertyCondition.class, "TemporalPropertyCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTemporalPropertyCondition_Pattern(), this.getTemporalPattern(), null, "pattern", null, 0, 1, TemporalPropertyCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemporalPropertyCondition_Kind(), this.getTemporalPropertyConditionKind(), "kind", null, 0, 1, TemporalPropertyCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(languageExpressionConditionEClass, LanguageExpressionCondition.class, "LanguageExpressionCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLanguageExpressionCondition_Expression(), this.getLanguageExpression(), null, "expression", null, 0, 1, LanguageExpressionCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(universalityEClass, Universality.class, "Universality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUniversality_Event(), this.getStreamEvent(), null, "event", null, 0, 1, Universality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(existenceEClass, Existence.class, "Existence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExistence_Bound(), this.getBoundType(), null, "bound", null, 0, 1, Existence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExistence_Event(), this.getStreamEvent(), null, "event", null, 0, 1, Existence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(absenceEClass, Absence.class, "Absence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAbsence_Event(), this.getStreamEvent(), null, "event", null, 0, 1, Absence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(precedenceEClass, Precedence.class, "Precedence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrecedence_Predecessor(), this.getStreamEvent(), null, "predecessor", null, 0, 1, Precedence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrecedence_Successor(), this.getStreamEvent(), null, "successor", null, 0, 1, Precedence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(responseEClass, Response.class, "Response", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getResponse_Event(), this.getStreamEvent(), null, "event", null, 0, 1, Response.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getResponse_Trigger(), this.getStreamEvent(), null, "trigger", null, 0, 1, Response.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(globallyEClass, Globally.class, "Globally", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(afterEClass, After.class, "After", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAfter_LowerBound(), this.getStreamEvent(), null, "lowerBound", null, 0, 1, After.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(beforeEClass, Before.class, "Before", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBefore_UpperBound(), this.getStreamEvent(), null, "upperBound", null, 0, 1, Before.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(betweenEClass, Between.class, "Between", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBetween_LowerBound(), this.getStreamEvent(), null, "lowerBound", null, 0, 1, Between.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetween_UpperBound(), this.getStreamEvent(), null, "upperBound", null, 0, 1, Between.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(afterUntilEClass, AfterUntil.class, "AfterUntil", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAfterUntil_LowerBound(), this.getStreamEvent(), null, "lowerBound", null, 0, 1, AfterUntil.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAfterUntil_UpperBound(), this.getStreamEvent(), null, "upperBound", null, 0, 1, AfterUntil.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(notifyEClass, Notify.class, "Notify", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(emptyEClass, Empty.class, "Empty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(propertyValueEClass, PropertyValue.class, "PropertyValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPropertyValue_Id(), ecorePackage.getEString(), "id", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyValue_Value(), this.getLanguageExpression(), null, "value", null, 0, 1, PropertyValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(explicitLanguageExpressionEClass, ExplicitLanguageExpression.class, "ExplicitLanguageExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExplicitLanguageExpression_LanguageId(), ecorePackage.getEString(), "languageId", null, 0, 1, ExplicitLanguageExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defaultLanguageExpressionEClass, DefaultLanguageExpression.class, "DefaultLanguageExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Initialize enums and add enum literals
    initEEnum(logLevelEEnum, LogLevel.class, "LogLevel");
    addEEnumLiteral(logLevelEEnum, LogLevel.CONFIG);
    addEEnumLiteral(logLevelEEnum, LogLevel.FINE);
    addEEnumLiteral(logLevelEEnum, LogLevel.FINER);
    addEEnumLiteral(logLevelEEnum, LogLevel.FINEST);
    addEEnumLiteral(logLevelEEnum, LogLevel.INFO);
    addEEnumLiteral(logLevelEEnum, LogLevel.SEVERE);
    addEEnumLiteral(logLevelEEnum, LogLevel.WARNING);

    initEEnum(temporalPropertyConditionKindEEnum, TemporalPropertyConditionKind.class, "TemporalPropertyConditionKind");
    addEEnumLiteral(temporalPropertyConditionKindEEnum, TemporalPropertyConditionKind.S);
    addEEnumLiteral(temporalPropertyConditionKindEEnum, TemporalPropertyConditionKind.V);
    addEEnumLiteral(temporalPropertyConditionKindEEnum, TemporalPropertyConditionKind.NS);
    addEEnumLiteral(temporalPropertyConditionKindEEnum, TemporalPropertyConditionKind.NV);

    // Create resource
    createResource(eNS_URI);
  }

} //MoniLog4DSLPackageImpl
